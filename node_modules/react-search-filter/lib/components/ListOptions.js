'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _classnames = require('classnames');

var _classnames2 = _interopRequireDefault(_classnames);

var _reactClickout = require('react-clickout');

var _reactClickout2 = _interopRequireDefault(_reactClickout);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var ListOptionsComponent = function (_Component) {
  _inherits(ListOptionsComponent, _Component);

  function ListOptionsComponent() {
    var _ref;

    var _temp, _this, _ret;

    _classCallCheck(this, ListOptionsComponent);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = ListOptionsComponent.__proto__ || Object.getPrototypeOf(ListOptionsComponent)).call.apply(_ref, [this].concat(args))), _this), _this.handleClickout = function () {
      _this.props.handleClickout();
    }, _this.generateFilterStyle = function (index) {
      var filterStyles = {
        'rsf__filters-item': true,
        'rsf__filters-item--active': index === _this.props.currentListOption
      };
      var styles = (0, _classnames2.default)(filterStyles);
      return styles;
    }, _temp), _possibleConstructorReturn(_this, _ret);
  }

  _createClass(ListOptionsComponent, [{
    key: 'render',
    value: function render() {
      var _this2 = this;

      var _props = this.props,
          list = _props.list,
          handleListItemClick = _props.handleListItemClick;


      return _react2.default.createElement(
        'div',
        { className: 'rsf__filters-container' },
        list.map(function (item, i) {
          return _react2.default.createElement(
            'div',
            {
              key: item.get('id'),
              className: _this2.generateFilterStyle(i),
              onClick: handleListItemClick(item)
            },
            item.get('display')
          );
        })
      );
    }
  }]);

  return ListOptionsComponent;
}(_react.Component);

var Wrapped = (0, _reactClickout2.default)(ListOptionsComponent);

exports.default = Wrapped;