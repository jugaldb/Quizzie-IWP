'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.CombinationComponent = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _immutable = require('immutable');

var _immutable2 = _interopRequireDefault(_immutable);

var _classnames = require('classnames');

var _classnames2 = _interopRequireDefault(_classnames);

var _uuid = require('uuid');

var _uuid2 = _interopRequireDefault(_uuid);

var _List = require('./List');

var _List2 = _interopRequireDefault(_List);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var CombinationComponent = exports.CombinationComponent = function (_Component) {
  _inherits(CombinationComponent, _Component);

  function CombinationComponent(props, context) {
    _classCallCheck(this, CombinationComponent);

    var _this = _possibleConstructorReturn(this, (CombinationComponent.__proto__ || Object.getPrototypeOf(CombinationComponent)).call(this, props, context));

    _initialiseProps.call(_this);

    var combination = props.combination,
        list = props.list;

    _this.state = {
      id: _uuid2.default.v4(),
      filter: combination.get('filter'),
      search: combination.get('search') || '',
      isEditing: combination.get('isEditing'),
      list: list,

      isBrowsingList: false,
      isListVisible: combination.get('isListVisible'),
      listIndex: null
    };
    return _this;
  }

  _createClass(CombinationComponent, [{
    key: 'render',
    value: function render() {
      var _this2 = this;

      var _state = this.state,
          filter = _state.filter,
          list = _state.list,
          search = _state.search,
          isEditing = _state.isEditing,
          listIndex = _state.listIndex,
          isListVisible = _state.isListVisible;


      return _react2.default.createElement(
        'div',
        { className: 'rsf__combination-container' },
        filter && filter.get('display') ? _react2.default.createElement(
          'span',
          {
            className: 'rsf__combination-filter',
            onClick: this.handleClickCombinationFilter
          },
          filter.get('display') + ' :',
          _react2.default.createElement('span', {
            className: 'om-icon-descending rsf__icon-down'
          })
        ) : null,
        search && !isEditing ? _react2.default.createElement(
          'span',
          {
            className: 'rsf__combination-search',
            onClick: this.handleClickCombinationSearch
          },
          search
        ) : null,
        search && !isEditing ? _react2.default.createElement('span', {
          className: 'rsf__combination-delete',
          onClick: this.handleDeleteCombination
        }) : null,
        isEditing ? _react2.default.createElement('input', {
          ref: function ref(r) {
            _this2.input = r;
          },
          className: this.generateInputStyle(),
          type: 'text',
          onChange: this.handleInputChange,
          onKeyDown: this.handleInputKeyDown,
          onClick: this.handleInputClick,
          onBlur: this.handleInputBlur,
          value: search,
          autoFocus: true
        }) : null,
        isListVisible ? _react2.default.createElement(_List2.default, {
          list: list,
          handleClickout: this.handleClickout,
          handleListItemClick: this.handleListItemClick,
          currentListOption: listIndex
        }) : null
      );
    }
  }]);

  return CombinationComponent;
}(_react.Component);

var _initialiseProps = function _initialiseProps() {
  var _this3 = this;

  this.handleClickout = function () {
    if (!_this3.state.filter) {
      _this3.handleDeleteCombination();
    } else {
      _this3.setState({
        isListVisible: false
      });
    }
  };

  this.handleInputBlur = function () {
    if (_this3.state.filter && !_this3.state.search) {
      _this3.handleDeleteCombination();
    }
  };

  this.handleInputChange = function (e) {
    var value = e.target.value;
    var list = _this3.state.list;

    var filtered = list.filter(function (item) {
      return item.get('display').toLowerCase().includes(value.toLowerCase());
    });

    _this3.setState({
      search: value,
      list: filtered
    });
  };

  this.handleInputKeyDown = function (e) {
    if (e.which === 40) {
      // DOWN
      _this3.setState({
        isListVisible: true,
        isBrowsingList: true
      }, function () {
        return _this3.browseListDown();
      });
    }
    if (e.which === 38) {
      // UP
      _this3.setState({
        isListVisible: true,
        isBrowsingList: true
      }, function () {
        return _this3.browseListUp();
      });
    }

    if (e.which === 13) {
      // ENTER
      if (_this3.state.isBrowsingList) {
        var _state2 = _this3.state,
            listIndex = _state2.listIndex,
            _list = _state2.list;

        var filter = _list.get(listIndex);
        _this3.setState({
          filter: filter,
          isBrowsingList: false,
          search: '' // clear search after selecting a filter
        }, function () {
          _this3.input.focus();
        });
      } else if (_this3.state.search.trim() === '') {
        _this3.handleDeleteCombination();
      } else {
        _this3.handleUpdateCombination();
      }

      _this3.setState({
        isListVisible: false
      });
    }

    if (e.which === 8) {
      // BACKSPACE
      // delete filter if search has been emptied by backspace
      if (!_this3.state.search && _this3.state.filter) {
        _this3.handleDeleteCombination();
      }
    }

    if (e.which === 27) {
      // ESCAPE
      _this3.setState({
        isEditing: false,
        isListVisible: false,
        listIndex: null,
        isBrowsingList: false
      });
    }
  };

  this.browseListDown = function () {
    var currentIndex = _this3.state.listIndex;
    var list = _this3.state.list;


    if (currentIndex !== null && currentIndex + 1 < list.size) {
      _this3.setState({ listIndex: currentIndex + 1 });
    } else {
      _this3.setState({ listIndex: 0 });
    }
  };

  this.browseListUp = function () {
    var currentIndex = _this3.state.listIndex;
    var list = _this3.props.list;


    if (currentIndex !== null && currentIndex - 1 > -1) {
      _this3.setState({ listIndex: currentIndex - 1 });
    } else {
      _this3.setState({ listIndex: list.size - 1 });
    }
  };

  this.handleUpdateCombination = function () {
    var _state3 = _this3.state,
        search = _state3.search,
        id = _state3.id;
    var _props = _this3.props,
        index = _props.index,
        defaultFilter = _props.defaultFilter;

    var filter = _this3.state.filter || defaultFilter; // search
    var combo = _immutable2.default.Map().set('id', id).set('filter', filter).set('search', search).set('isEditing', false).set('isListVisible', false);

    _this3.props.updateCombination(index, combo);
  };

  this.handleDeleteCombination = function () {
    var index = _this3.props.index;

    _this3.props.deleteCombination(index);
  };

  this.handleListItemClick = function (filter) {
    return function () {
      var _state4 = _this3.state,
          search = _state4.search,
          id = _state4.id;
      var index = _this3.props.index;

      var combo = _immutable2.default.Map().set('id', id).set('filter', filter).set('search', search).set('isEditing', false).set('isListVisible', false);
      _this3.setState({
        filter: filter,
        isListVisible: false,
        listIndex: null
      }, function () {
        if (!search) {
          _this3.input.focus();
        } else {
          _this3.props.updateCombination(index, combo);
        }
      });
    };
  };

  this.handleClickCombinationFilter = function () {
    _this3.setState({
      isListVisible: true
    });
  };

  this.handleClickCombinationSearch = function () {
    _this3.setState({
      isEditing: true
    });
  };

  this.generateInputStyle = function () {
    var styles = {
      'rsf__search-input': true,
      'rsf__search-input--hidden': !_this3.state.isEditing
    };
    return (0, _classnames2.default)(styles);
  };
};

exports.default = CombinationComponent;