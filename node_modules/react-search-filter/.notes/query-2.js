const Immutable = require('immutable');
const { fromJS } = Immutable;

const optionsKeys = ['status', 'retailerName'];

const currentSearch = fromJS({
  pageSize: 2,
  status: 'Unpaid',
  retailerName: 'Collins',
});


const options = fromJS([
  {
    id: 0,
    value: 'retailerName',
    display: 'Customer',
  },
  {
    id: 1,
    value: 'status',
    display: 'Status',
  },
  {
    id: 2,
    value: 'orderNumber',
    display: 'Number',
  },
]);

const optionsValues = options.map(o => o.get('value'));

const combos = Immutable.List();

const filteredOptions = options.filter((option, index, original) => {
  console.log('option:', option);
  console.log('index:', index);
  console.log('original:', original);
  const magic = currentSearch.has(option.get('value'));
  console.log('magic:', magic);
});


const filtered = currentSearch.filter((v, k) => optionsValues.includes(k));
console.log('filtered:', filtered);

// const result = filtered.map((v, k, a) => {
//   console.log('v:', v);
//   console.log('k:', k);
//   console.log('a:', a);
//   // combos.push(1);
// });

const reduced = filtered.reduce((result, value, key, original) => {
  console.log('result:', result);
  console.log('value:', value);
  console.log('key:', key);
  console.log('original:', original);
  return result;

}, combos);

console.log('🐰🐰🐰🐰🐰🐰🐰🐰🐰🐰🐰🐰🐰🐰🐰🐰🐰🐰🐰🐰🐰🐰🐰🐰');
// console.log('result:', result);
// console.log('optionsValues:', optionsValues);
