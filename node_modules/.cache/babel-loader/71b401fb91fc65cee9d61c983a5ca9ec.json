{"ast":null,"code":"var _jsxFileName = \"/home/jugaldb/Desktop/projects/IWP/src/pages/Quiz.js\";\nimport React, { useState, useEffect, useContext } from \"react\";\nimport { Grid, Snackbar, FormControl, FormLabel, RadioGroup, FormControlLabel, Radio, Dialog, DialogTitle, Button } from \"@material-ui/core\";\nimport \"./Quiz.css\";\nimport Loading from \"./Loading\";\nimport axios from \"axios\";\nimport { Redirect } from \"react-router-dom\";\nimport InfoContext from \"../context/InfoContext\";\nimport SubmitLoading from \"./SubmitLoading\";\nimport { usePageVisibility } from \"react-page-visibility\";\nimport countdown from \"countdown\";\nimport { useGoogleReCaptcha } from \"react-google-recaptcha-v3\";\n\nfunction Quiz(props) {\n  const [quizId, setQuizId] = useState(null);\n  const [currentStep, setStep] = useState(1);\n  const [loading, setLoading] = useState(true);\n  const [allQuestions, setQuestions] = useState([]);\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [currentAns, setCurrentAns] = useState(null);\n  const [duration, setDuration] = useState(-1);\n  const [startTime, setStartTime] = useState(-1);\n  const [timeRemaining, setTimeRemaining] = useState(\"\");\n  const [timeUp, setTimeUp] = useState(false);\n  const [tabChange, setTabChange] = useState(false);\n  const [allChosenAns, setAllAns] = useState(null);\n  const [redirect, setRedirect] = useState(false);\n  const [resultRedirect, setResultRedirect] = useState(false);\n  const [submitLoading, setSubmitLoading] = useState(false);\n  const [confirmModal, setConfirmModal] = useState(false);\n  const [empty, setEmpty] = useState(false);\n  const [restartStatus, setRestartStatus] = useState(-1);\n  const pageVisible = usePageVisibility();\n  const {\n    executeRecaptcha\n  } = useGoogleReCaptcha();\n\n  const submitQuiz = async () => {\n    setSubmitLoading(true);\n    let token = localStorage.getItem(\"authToken\");\n    let url = \"https://quizzie-api.herokuapp.com/quiz/check\";\n    let captcha = await executeRecaptcha(\"submit_token\");\n    let data = {\n      quizId: quizId,\n      questions: allChosenAns,\n      timeStarted: props.location.state.timeStarted,\n      timeEnded: Date.now(),\n      captcha: captcha\n    };\n\n    try {\n      await axios.post(url, data, {\n        headers: {\n          \"auth-token\": token\n        }\n      }).then(res => {\n        setResultRedirect(true);\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const onCloseHandle = () => {\n    setConfirmModal(false);\n  };\n\n  const handleSubmitBtn = () => {\n    setConfirmModal(true);\n  };\n\n  const handleSubmit = event => {\n    submitQuiz();\n  };\n\n  const timesUp = async () => {\n    setLoading(true);\n    setTimeUp(true);\n    let token = localStorage.getItem(\"authToken\");\n    let url = \"https://quizzie-api.herokuapp.com/quiz/finish\";\n    let data = {\n      quizId: quizId\n    };\n\n    try {\n      await axios.patch(url, data, {\n        headers: {\n          \"auth-token\": token\n        }\n      }).then(res => {\n        setRedirect(true);\n        return;\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const _next = () => {\n    let currQues = currentQuestion + 1;\n    setStep(currentStep + 1);\n    setCurrentQuestion(currentQuestion + 1);\n    setCurrentAns(allChosenAns[currQues].selectedOption);\n  };\n\n  const _prev = () => {\n    let currQues = currentQuestion - 1;\n    setStep(currentStep - 1);\n    setCurrentQuestion(currentQuestion - 1);\n    setCurrentAns(allChosenAns[currQues].selectedOption);\n  };\n\n  const previousButton = () => {\n    if (currentStep !== 1) {\n      return /*#__PURE__*/React.createElement(\"button\", {\n        className: \"quiz-btn prev-button\",\n        onClick: _prev,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 5\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 6\n        }\n      }, \"Previous\"));\n    }\n\n    return null;\n  };\n\n  const nextButton = () => {\n    if (currentStep < allQuestions.length) {\n      return /*#__PURE__*/React.createElement(\"button\", {\n        className: \"quiz-btn next-button\",\n        onClick: _next,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 5\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 6\n        }\n      }, \"Next\"));\n    } else if (currentStep === allQuestions.length) {\n      return /*#__PURE__*/React.createElement(\"button\", {\n        className: \"quiz-btn submit-button\",\n        onClick: handleSubmitBtn,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 5\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 6\n        }\n      }, \"Submit\"));\n    }\n\n    return null;\n  };\n\n  const handleOptionChange = event => {\n    setCurrentAns(event.target.value);\n    let newState = allChosenAns;\n    newState[currentQuestion].selectedOption = event.target.value;\n    setAllAns(newState);\n  };\n\n  const setupQuiz = questions => {\n    let questionsData = [];\n    let answerData = [];\n\n    if (questions.length === 0) {\n      setEmpty(true);\n      setRedirect(true);\n      return;\n    }\n\n    questions.map(question => {\n      let questionObj = {\n        q_id: question.questionId,\n        text: question.description,\n        options: question.options\n      };\n      questionsData.push(questionObj);\n      let ansObj = {\n        quesId: question.questionId,\n        selectedOption: null\n      };\n      answerData.push(ansObj);\n    });\n    setQuestions(questionsData);\n    setAllAns(answerData);\n    setLoading(false);\n  };\n\n  useEffect(() => {\n    if (!pageVisible) {\n      setTabChange(true);\n      setRedirect(true);\n      return;\n    }\n  }, [pageVisible]);\n  useEffect(() => {\n    if (restartStatus !== 1) {\n      let endTime = Number(startTime) + duration * 60 * 1000;\n\n      if (!loading && endTime > 0 && Number(endTime) < Number(Date.now())) {\n        timesUp();\n        return;\n      } else {\n        setTimeout(() => {\n          setTimeRemaining(countdown(new Date(), new Date(Number(endTime)), countdown.MINUTES | countdown.SECONDS).toString());\n        }, 1000);\n      }\n    }\n  });\n  useEffect(() => {\n    let token = localStorage.getItem(\"authToken\");\n\n    if (token === null) {\n      setRedirect(true);\n      return;\n    }\n\n    if (props.location.state === undefined) {\n      setRedirect(true);\n      return;\n    } else {\n      setQuizId(props.location.state.id);\n      setDuration(props.location.state.duration);\n      setStartTime(props.location.state.start);\n      setQuestions(props.location.state.questions);\n      setupQuiz(props.location.state.questions);\n      setRestartStatus(props.location.state.restartStatus);\n    }\n  }, []);\n\n  if (redirect) {\n    return /*#__PURE__*/React.createElement(Redirect, {\n      to: {\n        pathname: \"/dashboard\",\n        state: {\n          blocked: tabChange,\n          timeUp: timeUp,\n          emptyQuiz: empty\n        }\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 4\n      }\n    });\n  } else if (resultRedirect) {\n    return /*#__PURE__*/React.createElement(Redirect, {\n      to: `/results/${quizId}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 10\n      }\n    });\n  } else if (submitLoading) {\n    return /*#__PURE__*/React.createElement(SubmitLoading, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 10\n      }\n    });\n  } else {\n    return loading ? /*#__PURE__*/React.createElement(Loading, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 4\n      }\n    }) : /*#__PURE__*/React.createElement(\"div\", {\n      className: \"quiz-page\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      xs: 12,\n      spacing: 5,\n      className: \"quiz-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 10,\n      md: 8,\n      lg: 7,\n      className: \"q-count\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      style: {\n        padding: 0\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 7\n      }\n    }, \"QUESTION \", currentStep, \" OF \", allQuestions.length)), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 10,\n      md: 8,\n      lg: 7,\n      className: \"timer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      style: {\n        margin: 0\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 7\n      }\n    }, \"Time Remaining\", \" \", /*#__PURE__*/React.createElement(\"h2\", {\n      className: \"rem-time-display\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 8\n      }\n    }, restartStatus !== 1 ? timeRemaining : \"Until organizer closes the quiz\"))), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 10,\n      md: 8,\n      lg: 7,\n      style: {\n        margin: 0,\n        padding: \"2%\",\n        borderBottom: \"3px solid #222\",\n        minHeight: \"30vh\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(FormControl, {\n      style: {\n        margin: \"auto\",\n        width: \"100%\"\n      },\n      component: \"fieldset\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      className: \"label\",\n      component: \"legend\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 8\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"question\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 9\n      }\n    }, allQuestions[currentQuestion].text)), /*#__PURE__*/React.createElement(RadioGroup, {\n      \"aria-label\": \"correct-choice\",\n      value: currentAns,\n      onChange: handleOptionChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 8\n      }\n    }, allQuestions[currentQuestion].options.map(option => {\n      return /*#__PURE__*/React.createElement(FormControlLabel, {\n        key: option._id,\n        value: option.text,\n        control: /*#__PURE__*/React.createElement(Radio, {\n          className: \"radio\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 327,\n            columnNumber: 14\n          }\n        }),\n        label: option.text,\n        style: {\n          margin: 0\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 323,\n          columnNumber: 12\n        }\n      });\n    })))), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 10,\n      md: 8,\n      lg: 7,\n      className: \"button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 338,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 6,\n      className: \"button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 339,\n        columnNumber: 7\n      }\n    }, previousButton()), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 6,\n      className: \"button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 342,\n        columnNumber: 7\n      }\n    }, nextButton()))), /*#__PURE__*/React.createElement(Dialog, {\n      open: confirmModal,\n      onClose: onCloseHandle,\n      \"aria-labelledby\": \"form-dialog-title\",\n      PaperProps: {\n        style: {\n          backgroundColor: \"white\",\n          color: \"#333\",\n          minWidth: \"10%\"\n        }\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 348,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(DialogTitle, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 360,\n        columnNumber: 6\n      }\n    }, \"Are you sure you want to submit the quiz?\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"btn-div\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 363,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      className: \"logout-btn m-right\",\n      onClick: handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 364,\n        columnNumber: 7\n      }\n    }, \"Yes\"), /*#__PURE__*/React.createElement(Button, {\n      className: \"cancel-btn m-left\",\n      onClick: onCloseHandle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 370,\n        columnNumber: 7\n      }\n    }, \"No\"))));\n  }\n}\n\nexport default Quiz;","map":{"version":3,"sources":["/home/jugaldb/Desktop/projects/IWP/src/pages/Quiz.js"],"names":["React","useState","useEffect","useContext","Grid","Snackbar","FormControl","FormLabel","RadioGroup","FormControlLabel","Radio","Dialog","DialogTitle","Button","Loading","axios","Redirect","InfoContext","SubmitLoading","usePageVisibility","countdown","useGoogleReCaptcha","Quiz","props","quizId","setQuizId","currentStep","setStep","loading","setLoading","allQuestions","setQuestions","currentQuestion","setCurrentQuestion","currentAns","setCurrentAns","duration","setDuration","startTime","setStartTime","timeRemaining","setTimeRemaining","timeUp","setTimeUp","tabChange","setTabChange","allChosenAns","setAllAns","redirect","setRedirect","resultRedirect","setResultRedirect","submitLoading","setSubmitLoading","confirmModal","setConfirmModal","empty","setEmpty","restartStatus","setRestartStatus","pageVisible","executeRecaptcha","submitQuiz","token","localStorage","getItem","url","captcha","data","questions","timeStarted","location","state","timeEnded","Date","now","post","headers","then","res","error","console","log","onCloseHandle","handleSubmitBtn","handleSubmit","event","timesUp","patch","_next","currQues","selectedOption","_prev","previousButton","nextButton","length","handleOptionChange","target","value","newState","setupQuiz","questionsData","answerData","map","question","questionObj","q_id","questionId","text","description","options","push","ansObj","quesId","endTime","Number","setTimeout","MINUTES","SECONDS","toString","undefined","id","start","pathname","blocked","emptyQuiz","padding","margin","borderBottom","minHeight","width","option","_id","style","backgroundColor","color","minWidth"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\r\nimport {\r\n\tGrid,\r\n\tSnackbar,\r\n\tFormControl,\r\n\tFormLabel,\r\n\tRadioGroup,\r\n\tFormControlLabel,\r\n\tRadio,\r\n\tDialog,\r\n\tDialogTitle,\r\n\tButton,\r\n} from \"@material-ui/core\";\r\nimport \"./Quiz.css\";\r\nimport Loading from \"./Loading\";\r\nimport axios from \"axios\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport InfoContext from \"../context/InfoContext\";\r\nimport SubmitLoading from \"./SubmitLoading\";\r\nimport { usePageVisibility } from \"react-page-visibility\";\r\nimport countdown from \"countdown\";\r\nimport { useGoogleReCaptcha } from \"react-google-recaptcha-v3\";\r\n\r\nfunction Quiz(props) {\r\n\tconst [quizId, setQuizId] = useState(null);\r\n\tconst [currentStep, setStep] = useState(1);\r\n\r\n\tconst [loading, setLoading] = useState(true);\r\n\tconst [allQuestions, setQuestions] = useState([]);\r\n\tconst [currentQuestion, setCurrentQuestion] = useState(0);\r\n\tconst [currentAns, setCurrentAns] = useState(null);\r\n\r\n\tconst [duration, setDuration] = useState(-1);\r\n\tconst [startTime, setStartTime] = useState(-1);\r\n\tconst [timeRemaining, setTimeRemaining] = useState(\"\");\r\n\tconst [timeUp, setTimeUp] = useState(false);\r\n\r\n\tconst [tabChange, setTabChange] = useState(false);\r\n\r\n\tconst [allChosenAns, setAllAns] = useState(null);\r\n\tconst [redirect, setRedirect] = useState(false);\r\n\tconst [resultRedirect, setResultRedirect] = useState(false);\r\n\r\n\tconst [submitLoading, setSubmitLoading] = useState(false);\r\n\r\n\tconst [confirmModal, setConfirmModal] = useState(false);\r\n\tconst [empty, setEmpty] = useState(false);\r\n\tconst [restartStatus, setRestartStatus] = useState(-1);\r\n\r\n\tconst pageVisible = usePageVisibility();\r\n\tconst { executeRecaptcha } = useGoogleReCaptcha();\r\n\r\n\tconst submitQuiz = async () => {\r\n\t\tsetSubmitLoading(true);\r\n\t\tlet token = localStorage.getItem(\"authToken\");\r\n\t\tlet url = \"https://quizzie-api.herokuapp.com/quiz/check\";\r\n\r\n\t\tlet captcha = await executeRecaptcha(\"submit_token\");\r\n\r\n\t\tlet data = {\r\n\t\t\tquizId: quizId,\r\n\t\t\tquestions: allChosenAns,\r\n\t\t\ttimeStarted: props.location.state.timeStarted,\r\n\t\t\ttimeEnded: Date.now(),\r\n\t\t\tcaptcha: captcha,\r\n\t\t};\r\n\r\n\t\ttry {\r\n\t\t\tawait axios\r\n\t\t\t\t.post(url, data, {\r\n\t\t\t\t\theaders: {\r\n\t\t\t\t\t\t\"auth-token\": token,\r\n\t\t\t\t\t},\r\n\t\t\t\t})\r\n\t\t\t\t.then((res) => {\r\n\t\t\t\t\tsetResultRedirect(true);\r\n\t\t\t\t});\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log(error);\r\n\t\t}\r\n\t};\r\n\r\n\tconst onCloseHandle = () => {\r\n\t\tsetConfirmModal(false);\r\n\t};\r\n\r\n\tconst handleSubmitBtn = () => {\r\n\t\tsetConfirmModal(true);\r\n\t};\r\n\r\n\tconst handleSubmit = (event) => {\r\n\t\tsubmitQuiz();\r\n\t};\r\n\tconst timesUp = async () => {\r\n\t\tsetLoading(true);\r\n\t\tsetTimeUp(true);\r\n\t\tlet token = localStorage.getItem(\"authToken\");\r\n\t\tlet url = \"https://quizzie-api.herokuapp.com/quiz/finish\";\r\n\r\n\t\tlet data = {\r\n\t\t\tquizId: quizId,\r\n\t\t};\r\n\r\n\t\ttry {\r\n\t\t\tawait axios\r\n\t\t\t\t.patch(url, data, {\r\n\t\t\t\t\theaders: {\r\n\t\t\t\t\t\t\"auth-token\": token,\r\n\t\t\t\t\t},\r\n\t\t\t\t})\r\n\t\t\t\t.then((res) => {\r\n\t\t\t\t\tsetRedirect(true);\r\n\t\t\t\t\treturn;\r\n\t\t\t\t});\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log(error);\r\n\t\t}\r\n\t};\r\n\r\n\tconst _next = () => {\r\n\t\tlet currQues = currentQuestion + 1;\r\n\t\tsetStep(currentStep + 1);\r\n\t\tsetCurrentQuestion(currentQuestion + 1);\r\n\t\tsetCurrentAns(allChosenAns[currQues].selectedOption);\r\n\t};\r\n\tconst _prev = () => {\r\n\t\tlet currQues = currentQuestion - 1;\r\n\t\tsetStep(currentStep - 1);\r\n\t\tsetCurrentQuestion(currentQuestion - 1);\r\n\t\tsetCurrentAns(allChosenAns[currQues].selectedOption);\r\n\t};\r\n\tconst previousButton = () => {\r\n\t\tif (currentStep !== 1) {\r\n\t\t\treturn (\r\n\t\t\t\t<button className=\"quiz-btn prev-button\" onClick={_prev}>\r\n\t\t\t\t\t<p>Previous</p>\r\n\t\t\t\t</button>\r\n\t\t\t);\r\n\t\t}\r\n\t\treturn null;\r\n\t};\r\n\r\n\tconst nextButton = () => {\r\n\t\tif (currentStep < allQuestions.length) {\r\n\t\t\treturn (\r\n\t\t\t\t<button className=\"quiz-btn next-button\" onClick={_next}>\r\n\t\t\t\t\t<p>Next</p>\r\n\t\t\t\t</button>\r\n\t\t\t);\r\n\t\t} else if (currentStep === allQuestions.length) {\r\n\t\t\treturn (\r\n\t\t\t\t<button\r\n\t\t\t\t\tclassName=\"quiz-btn submit-button\"\r\n\t\t\t\t\tonClick={handleSubmitBtn}\r\n\t\t\t\t>\r\n\t\t\t\t\t<p>Submit</p>\r\n\t\t\t\t</button>\r\n\t\t\t);\r\n\t\t}\r\n\t\treturn null;\r\n\t};\r\n\r\n\tconst handleOptionChange = (event) => {\r\n\t\tsetCurrentAns(event.target.value);\r\n\r\n\t\tlet newState = allChosenAns;\r\n\t\tnewState[currentQuestion].selectedOption = event.target.value;\r\n\r\n\t\tsetAllAns(newState);\r\n\t};\r\n\r\n\tconst setupQuiz = (questions) => {\r\n\t\tlet questionsData = [];\r\n\t\tlet answerData = [];\r\n\r\n\t\tif (questions.length === 0) {\r\n\t\t\tsetEmpty(true);\r\n\t\t\tsetRedirect(true);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tquestions.map((question) => {\r\n\t\t\tlet questionObj = {\r\n\t\t\t\tq_id: question.questionId,\r\n\t\t\t\ttext: question.description,\r\n\t\t\t\toptions: question.options,\r\n\t\t\t};\r\n\t\t\tquestionsData.push(questionObj);\r\n\r\n\t\t\tlet ansObj = {\r\n\t\t\t\tquesId: question.questionId,\r\n\t\t\t\tselectedOption: null,\r\n\t\t\t};\r\n\r\n\t\t\tanswerData.push(ansObj);\r\n\t\t});\r\n\r\n\t\tsetQuestions(questionsData);\r\n\t\tsetAllAns(answerData);\r\n\r\n\t\tsetLoading(false);\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tif (!pageVisible) {\r\n\t\t\tsetTabChange(true);\r\n\t\t\tsetRedirect(true);\r\n\t\t\treturn;\r\n\t\t}\r\n\t}, [pageVisible]);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (restartStatus !== 1) {\r\n\t\t\tlet endTime = Number(startTime) + duration * 60 * 1000;\r\n\t\t\tif (\r\n\t\t\t\t!loading &&\r\n\t\t\t\tendTime > 0 &&\r\n\t\t\t\tNumber(endTime) < Number(Date.now())\r\n\t\t\t) {\r\n\t\t\t\ttimesUp();\r\n\t\t\t\treturn;\r\n\t\t\t} else {\r\n\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\tsetTimeRemaining(\r\n\t\t\t\t\t\tcountdown(\r\n\t\t\t\t\t\t\tnew Date(),\r\n\t\t\t\t\t\t\tnew Date(Number(endTime)),\r\n\t\t\t\t\t\t\tcountdown.MINUTES | countdown.SECONDS\r\n\t\t\t\t\t\t).toString()\r\n\t\t\t\t\t);\r\n\t\t\t\t}, 1000);\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n\r\n\tuseEffect(() => {\r\n\t\tlet token = localStorage.getItem(\"authToken\");\r\n\t\tif (token === null) {\r\n\t\t\tsetRedirect(true);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (props.location.state === undefined) {\r\n\t\t\tsetRedirect(true);\r\n\t\t\treturn;\r\n\t\t} else {\r\n\t\t\tsetQuizId(props.location.state.id);\r\n\t\t\tsetDuration(props.location.state.duration);\r\n\t\t\tsetStartTime(props.location.state.start);\r\n\t\t\tsetQuestions(props.location.state.questions);\r\n\t\t\tsetupQuiz(props.location.state.questions);\r\n\t\t\tsetRestartStatus(props.location.state.restartStatus);\r\n\t\t}\r\n\t}, []);\r\n\r\n\tif (redirect) {\r\n\t\treturn (\r\n\t\t\t<Redirect\r\n\t\t\t\tto={{\r\n\t\t\t\t\tpathname: \"/dashboard\",\r\n\t\t\t\t\tstate: {\r\n\t\t\t\t\t\tblocked: tabChange,\r\n\t\t\t\t\t\ttimeUp: timeUp,\r\n\t\t\t\t\t\temptyQuiz: empty,\r\n\t\t\t\t\t},\r\n\t\t\t\t}}\r\n\t\t\t/>\r\n\t\t);\r\n\t} else if (resultRedirect) {\r\n\t\treturn <Redirect to={`/results/${quizId}`} />;\r\n\t} else if (submitLoading) {\r\n\t\treturn <SubmitLoading />;\r\n\t} else {\r\n\t\treturn loading ? (\r\n\t\t\t<Loading />\r\n\t\t) : (\r\n\t\t\t<div className=\"quiz-page\">\r\n\t\t\t\t<Grid container xs={12} spacing={5} className=\"quiz-container\">\r\n\t\t\t\t\t<Grid item xs={10} md={8} lg={7} className=\"q-count\">\r\n\t\t\t\t\t\t<h2 style={{ padding: 0 }}>\r\n\t\t\t\t\t\t\tQUESTION {currentStep} OF {allQuestions.length}\r\n\t\t\t\t\t\t</h2>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t<Grid item xs={10} md={8} lg={7} className=\"timer\">\r\n\t\t\t\t\t\t<p style={{ margin: 0 }}>\r\n\t\t\t\t\t\t\tTime Remaining{\" \"}\r\n\t\t\t\t\t\t\t<h2 className=\"rem-time-display\">\r\n\t\t\t\t\t\t\t\t{restartStatus !== 1\r\n\t\t\t\t\t\t\t\t\t? timeRemaining\r\n\t\t\t\t\t\t\t\t\t: \"Until organizer closes the quiz\"}\r\n\t\t\t\t\t\t\t</h2>\r\n\t\t\t\t\t\t</p>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t<Grid\r\n\t\t\t\t\t\titem\r\n\t\t\t\t\t\txs={10}\r\n\t\t\t\t\t\tmd={8}\r\n\t\t\t\t\t\tlg={7}\r\n\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\tmargin: 0,\r\n\t\t\t\t\t\t\tpadding: \"2%\",\r\n\t\t\t\t\t\t\tborderBottom: \"3px solid #222\",\r\n\t\t\t\t\t\t\tminHeight: \"30vh\",\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<FormControl\r\n\t\t\t\t\t\t\tstyle={{ margin: \"auto\", width: \"100%\" }}\r\n\t\t\t\t\t\t\tcomponent=\"fieldset\"\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<FormLabel className=\"label\" component=\"legend\">\r\n\t\t\t\t\t\t\t\t<p className=\"question\">\r\n\t\t\t\t\t\t\t\t\t{allQuestions[currentQuestion].text}\r\n\t\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t</FormLabel>\r\n\t\t\t\t\t\t\t<RadioGroup\r\n\t\t\t\t\t\t\t\taria-label=\"correct-choice\"\r\n\t\t\t\t\t\t\t\tvalue={currentAns}\r\n\t\t\t\t\t\t\t\tonChange={handleOptionChange}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t{allQuestions[currentQuestion].options.map(\r\n\t\t\t\t\t\t\t\t\t(option) => {\r\n\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t<FormControlLabel\r\n\t\t\t\t\t\t\t\t\t\t\t\tkey={option._id}\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={option.text}\r\n\t\t\t\t\t\t\t\t\t\t\t\tcontrol={\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Radio className=\"radio\" />\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\tlabel={option.text}\r\n\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ margin: 0 }}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t</RadioGroup>\r\n\t\t\t\t\t\t</FormControl>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t<Grid item xs={10} md={8} lg={7} className=\"button\">\r\n\t\t\t\t\t\t<Grid item xs={6} className=\"button\">\r\n\t\t\t\t\t\t\t{previousButton()}\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid item xs={6} className=\"button\">\r\n\t\t\t\t\t\t\t{nextButton()}\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Grid>\r\n\r\n\t\t\t\t<Dialog\r\n\t\t\t\t\topen={confirmModal}\r\n\t\t\t\t\tonClose={onCloseHandle}\r\n\t\t\t\t\taria-labelledby=\"form-dialog-title\"\r\n\t\t\t\t\tPaperProps={{\r\n\t\t\t\t\t\tstyle: {\r\n\t\t\t\t\t\t\tbackgroundColor: \"white\",\r\n\t\t\t\t\t\t\tcolor: \"#333\",\r\n\t\t\t\t\t\t\tminWidth: \"10%\",\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<DialogTitle>\r\n\t\t\t\t\t\tAre you sure you want to submit the quiz?\r\n\t\t\t\t\t</DialogTitle>\r\n\t\t\t\t\t<div className=\"btn-div\">\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\tclassName=\"logout-btn m-right\"\r\n\t\t\t\t\t\t\tonClick={handleSubmit}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\tYes\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\tclassName=\"cancel-btn m-left\"\r\n\t\t\t\t\t\t\tonClick={onCloseHandle}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\tNo\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Dialog>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Quiz;\r\n"]},"metadata":{},"sourceType":"module"}