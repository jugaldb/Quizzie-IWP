{"ast":null,"code":"var _jsxFileName = \"/home/jugaldb/Desktop/projects/IWP/src/pages/LoginPage.js\";\nimport React, { useState, useEffect, useContext, useRef } from \"react\";\nimport \"./LoginPage.css\";\nimport \"./GoogleButton.css\";\nimport { Container, Typography, Button, InputAdornment, IconButton } from \"@material-ui/core\";\nimport { Alert } from \"@material-ui/lab\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport TextInput from \"../components/TextInput\";\nimport * as EmailValidator from \"email-validator\";\nimport InfoContext from \"../context/InfoContext\";\nimport axios from \"axios\";\nimport Loading from \"./Loading\";\nimport { Visibility, VisibilityOff } from \"@material-ui/icons\";\nimport { useGoogleReCaptcha } from \"react-google-recaptcha-v3\";\n\nfunction LoginPage(props) {\n  const [email, changeEmail] = useState(\"\");\n  const [emailError, setEmailError] = useState(\"\");\n  const [emailChanged, setEmailChanged] = useState(false);\n  const [password, changePassword] = useState(\"\");\n  const [passwordError, setPasswordError] = useState(\"\");\n  const [passwordChanged, setPasswordChanged] = useState(false);\n  const [showPassword, setShowPassword] = useState(false);\n  const [didLogin, setDidLogin] = useState(null);\n  const [errorText, setErrorText] = useState(\"Error Logging In! Try again....\");\n  const [redirect, setRedirect] = useState(false);\n  const [ownerRedirect, setOwnerRedirect] = useState(false);\n  const [loginRedirect, setLoginRedirect] = useState(false);\n  const [notVerified, setNotVerified] = useState(false);\n  const [verifyMail, setVerifyMail] = useState(\"\");\n  const type = props.match.params.type;\n  const type1 = type === \"user\" ? \"user\" : \"organizer\";\n  const [isLoading, setLoading] = useState(false);\n  const {\n    executeRecaptcha\n  } = useGoogleReCaptcha();\n  const {\n    setLoggedIn,\n    changeName,\n    setAuthToken,\n    setAdmin\n  } = useContext(InfoContext);\n  const mailErrorText = \"Email cannot be empty\";\n  const passwordErrorText = \"Password cannot be empty\";\n\n  const handleEmailChange = event => {\n    setEmailChanged(true);\n    changeEmail(event.target.value);\n  };\n\n  const handlePasswordChange = event => {\n    setPasswordChanged(true);\n    changePassword(event.target.value);\n  };\n\n  const togglePasswordVisibility = () => {\n    setShowPassword(!showPassword);\n  };\n\n  const keyPress = event => {\n    if (event.key === \"Enter\") {\n      handleSubmit();\n    }\n  };\n\n  useEffect(() => {\n    if (email.length === 0) setEmailError(mailErrorText);else setEmailError(\"\");\n    if (password.length === 0) setPasswordError(passwordErrorText);else setPasswordError(\"\");\n  }, [email, password]);\n\n  const handleSubmit = async event => {\n    // event.preventDefault();\n    setEmailChanged(true);\n    setPasswordChanged(true);\n    let errors = false;\n\n    if (email.length === 0) {\n      setEmailError(mailErrorText);\n      errors = true;\n    } else if (!EmailValidator.validate(email)) {\n      setEmailError(\"Invalid email address!\");\n      errors = true;\n    }\n\n    if (password.length === 0) {\n      setPasswordError(passwordErrorText);\n      errors = true;\n    } else if (password.length < 8) {\n      setPasswordError(\"Minimum length of password must be 8.\");\n      errors = true;\n    }\n\n    if (!errors && emailError.length === 0 && passwordError.length === 0) {\n      setLoading(true);\n      let lType = type;\n      if (type === \"organizer\") lType = \"admin\";\n      let url = `https://quizzie-api.herokuapp.com/${lType}/login`;\n      let token = await executeRecaptcha(\"login_page\");\n      let data = {\n        email: email,\n        password: password,\n        captcha: token\n      };\n      let response = null;\n\n      try {\n        await axios.post(url, data).then(res => {\n          response = res;\n        });\n\n        if (response.status === 200) {\n          changeName(response.data.userDetails.name);\n          setLoggedIn(true);\n          setAuthToken(response.data.token);\n          localStorage.setItem(\"userLoggedIn\", true);\n          localStorage.setItem(\"name\", response.data.userDetails.name);\n          localStorage.setItem(\"authToken\", response.data.token);\n\n          if (type === \"owner\") {\n            setOwnerRedirect(true); //TODO: Redirect dashboard shit\n          } else {\n            setRedirect(true);\n          }\n        }\n      } catch (error) {\n        console.log(error);\n\n        if (error.response.status === 409) {\n          setVerifyMail(data.email);\n          setNotVerified(true);\n        } else if (error.response.status === 401) {\n          setErrorText(\"Invalid Credentials...\");\n          setDidLogin(false);\n        } else {\n          setErrorText(\"Error Logging In! Try again....\");\n          setDidLogin(false);\n        }\n      }\n    }\n\n    setLoading(false);\n  };\n\n  useEffect(() => {\n    if (type !== \"user\" && type !== \"organizer\" && type !== \"owner\") {\n      setRedirect(true);\n    }\n  }, [type]);\n\n  if (redirect === true) {\n    return /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 10\n      }\n    });\n  } else if (ownerRedirect) {\n    return /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/coronilOP\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 10\n      }\n    });\n  }\n\n  return isLoading ? /*#__PURE__*/React.createElement(Loading, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 3\n    }\n  }) : /*#__PURE__*/React.createElement(Container, {\n    className: \"login-page\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"login-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h3\",\n    color: \"primary\",\n    className: \"login-head\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 5\n    }\n  }, type === \"user\" ? \"Login Now\" : type === \"organizer\" ? \"Organizer Login\" : \"Owner Login\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 5\n    }\n  }), didLogin === false ? /*#__PURE__*/React.createElement(Alert, {\n    severity: \"error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 6\n    }\n  }, errorText) : null, notVerified ? /*#__PURE__*/React.createElement(Alert, {\n    severity: \"error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 6\n    }\n  }, \"Your email is not verified.\", /*#__PURE__*/React.createElement(Link, {\n    className: \"link\",\n    style: {\n      color: \"red\"\n    },\n    to: {\n      pathname: `/verify/${type}`,\n      state: {\n        email: verifyMail,\n        sendCode: true\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 7\n    }\n  }, \"Click here to verify...\")) : null, type !== \"owner\" ? /*#__PURE__*/React.createElement(\"a\", {\n    href: type === \"user\" ? `/dashboard?type=${type}` : `/dashboard?type=admin`,\n    className: \"google-link\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"google-btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"google-icon-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 8\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: \"google-icon\",\n    src: \"https://upload.wikimedia.org/wikipedia/commons/5/53/Google_%22G%22_Logo.svg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"btn-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 8\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 9\n    }\n  }, \"Sign in with Google\")))) : null, /*#__PURE__*/React.createElement(\"form\", {\n    className: \"form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(TextInput, {\n    error: emailChanged ? emailError.length === 0 ? false : true : false,\n    helperText: emailChanged ? emailError.length === 0 ? null : emailError : null,\n    id: \"email\",\n    label: \"Email\",\n    type: \"email\",\n    className: \"form-input\",\n    variant: \"outlined\",\n    value: email,\n    onChange: handleEmailChange,\n    onKeyPress: keyPress,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 6\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 6\n    }\n  }), /*#__PURE__*/React.createElement(TextInput, {\n    error: passwordChanged ? passwordError.length === 0 ? false : true : false,\n    helperText: passwordChanged ? passwordError.length === 0 ? null : passwordError : null,\n    id: \"password\",\n    type: showPassword ? \"text\" : \"password\",\n    label: \"Password\",\n    className: \"form-input\",\n    variant: \"outlined\",\n    value: password,\n    onChange: handlePasswordChange,\n    onKeyPress: keyPress,\n    InputProps: {\n      endAdornment: /*#__PURE__*/React.createElement(InputAdornment, {\n        position: \"end\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(IconButton, {\n        \"aria-label\": \"show password\",\n        onClick: togglePasswordVisibility,\n        edge: \"end\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 10\n        }\n      }, showPassword ? /*#__PURE__*/React.createElement(Visibility, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 12\n        }\n      }) : /*#__PURE__*/React.createElement(VisibilityOff, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 12\n        }\n      })))\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 6\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"forgot-section\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 5\n    }\n  }, type === \"owner\" ? null : /*#__PURE__*/React.createElement(Link, {\n    to: `/forgotPassword/${type}`,\n    className: \"link forgot-pass\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 7\n    }\n  }, \"Forgot your password?\")), /*#__PURE__*/React.createElement(Button, {\n    className: \"login-btn\",\n    onClick: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 5\n    }\n  }, \"Login\"), /*#__PURE__*/React.createElement(Link, {\n    to: `/register/${type}`,\n    className: \"link register-link\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 312,\n      columnNumber: 5\n    }\n  }, \"Don't have an account? Join the Quizzie now!\")));\n}\n\nexport default LoginPage;","map":{"version":3,"sources":["/home/jugaldb/Desktop/projects/IWP/src/pages/LoginPage.js"],"names":["React","useState","useEffect","useContext","useRef","Container","Typography","Button","InputAdornment","IconButton","Alert","Link","Redirect","TextInput","EmailValidator","InfoContext","axios","Loading","Visibility","VisibilityOff","useGoogleReCaptcha","LoginPage","props","email","changeEmail","emailError","setEmailError","emailChanged","setEmailChanged","password","changePassword","passwordError","setPasswordError","passwordChanged","setPasswordChanged","showPassword","setShowPassword","didLogin","setDidLogin","errorText","setErrorText","redirect","setRedirect","ownerRedirect","setOwnerRedirect","loginRedirect","setLoginRedirect","notVerified","setNotVerified","verifyMail","setVerifyMail","type","match","params","type1","isLoading","setLoading","executeRecaptcha","setLoggedIn","changeName","setAuthToken","setAdmin","mailErrorText","passwordErrorText","handleEmailChange","event","target","value","handlePasswordChange","togglePasswordVisibility","keyPress","key","handleSubmit","length","errors","validate","lType","url","token","data","captcha","response","post","then","res","status","userDetails","name","localStorage","setItem","error","console","log","color","pathname","state","sendCode","endAdornment"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext, useRef } from \"react\";\r\nimport \"./LoginPage.css\";\r\nimport \"./GoogleButton.css\";\r\nimport {\r\n\tContainer,\r\n\tTypography,\r\n\tButton,\r\n\tInputAdornment,\r\n\tIconButton,\r\n} from \"@material-ui/core\";\r\nimport { Alert } from \"@material-ui/lab\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport TextInput from \"../components/TextInput\";\r\nimport * as EmailValidator from \"email-validator\";\r\nimport InfoContext from \"../context/InfoContext\";\r\nimport axios from \"axios\";\r\nimport Loading from \"./Loading\";\r\nimport { Visibility, VisibilityOff } from \"@material-ui/icons\";\r\nimport { useGoogleReCaptcha } from \"react-google-recaptcha-v3\";\r\n\r\nfunction LoginPage(props) {\r\n\tconst [email, changeEmail] = useState(\"\");\r\n\tconst [emailError, setEmailError] = useState(\"\");\r\n\tconst [emailChanged, setEmailChanged] = useState(false);\r\n\tconst [password, changePassword] = useState(\"\");\r\n\tconst [passwordError, setPasswordError] = useState(\"\");\r\n\tconst [passwordChanged, setPasswordChanged] = useState(false);\r\n\r\n\tconst [showPassword, setShowPassword] = useState(false);\r\n\r\n\tconst [didLogin, setDidLogin] = useState(null);\r\n\tconst [errorText, setErrorText] = useState(\r\n\t\t\"Error Logging In! Try again....\"\r\n\t);\r\n\tconst [redirect, setRedirect] = useState(false);\r\n\tconst [ownerRedirect, setOwnerRedirect] = useState(false);\r\n\tconst [loginRedirect, setLoginRedirect] = useState(false);\r\n\r\n\tconst [notVerified, setNotVerified] = useState(false);\r\n\tconst [verifyMail, setVerifyMail] = useState(\"\");\r\n\r\n\tconst type = props.match.params.type;\r\n\tconst type1 = type === \"user\" ? \"user\" : \"organizer\";\r\n\r\n\tconst [isLoading, setLoading] = useState(false);\r\n\r\n\tconst { executeRecaptcha } = useGoogleReCaptcha();\r\n\r\n\tconst { setLoggedIn, changeName, setAuthToken, setAdmin } = useContext(\r\n\t\tInfoContext\r\n\t);\r\n\r\n\tconst mailErrorText = \"Email cannot be empty\";\r\n\tconst passwordErrorText = \"Password cannot be empty\";\r\n\r\n\tconst handleEmailChange = (event) => {\r\n\t\tsetEmailChanged(true);\r\n\t\tchangeEmail(event.target.value);\r\n\t};\r\n\r\n\tconst handlePasswordChange = (event) => {\r\n\t\tsetPasswordChanged(true);\r\n\t\tchangePassword(event.target.value);\r\n\t};\r\n\r\n\tconst togglePasswordVisibility = () => {\r\n\t\tsetShowPassword(!showPassword);\r\n\t};\r\n\r\n\tconst keyPress = (event) => {\r\n\t\tif (event.key === \"Enter\") {\r\n\t\t\thandleSubmit();\r\n\t\t}\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tif (email.length === 0) setEmailError(mailErrorText);\r\n\t\telse setEmailError(\"\");\r\n\r\n\t\tif (password.length === 0) setPasswordError(passwordErrorText);\r\n\t\telse setPasswordError(\"\");\r\n\t}, [email, password]);\r\n\r\n\tconst handleSubmit = async (event) => {\r\n\t\t// event.preventDefault();\r\n\r\n\t\tsetEmailChanged(true);\r\n\t\tsetPasswordChanged(true);\r\n\r\n\t\tlet errors = false;\r\n\r\n\t\tif (email.length === 0) {\r\n\t\t\tsetEmailError(mailErrorText);\r\n\t\t\terrors = true;\r\n\t\t} else if (!EmailValidator.validate(email)) {\r\n\t\t\tsetEmailError(\"Invalid email address!\");\r\n\t\t\terrors = true;\r\n\t\t}\r\n\t\tif (password.length === 0) {\r\n\t\t\tsetPasswordError(passwordErrorText);\r\n\t\t\terrors = true;\r\n\t\t} else if (password.length < 8) {\r\n\t\t\tsetPasswordError(\"Minimum length of password must be 8.\");\r\n\t\t\terrors = true;\r\n\t\t}\r\n\r\n\t\tif (!errors && emailError.length === 0 && passwordError.length === 0) {\r\n\t\t\tsetLoading(true);\r\n\t\t\tlet lType = type;\r\n\r\n\t\t\tif (type === \"organizer\") lType = \"admin\";\r\n\r\n\t\t\tlet url = `https://quizzie-api.herokuapp.com/${lType}/login`;\r\n\t\t\tlet token = await executeRecaptcha(\"login_page\");\r\n\r\n\t\t\tlet data = {\r\n\t\t\t\temail: email,\r\n\t\t\t\tpassword: password,\r\n\t\t\t\tcaptcha: token,\r\n\t\t\t};\r\n\r\n\t\t\tlet response = null;\r\n\t\t\ttry {\r\n\t\t\t\tawait axios.post(url, data).then((res) => {\r\n\t\t\t\t\tresponse = res;\r\n\t\t\t\t});\r\n\r\n\t\t\t\tif (response.status === 200) {\r\n\t\t\t\t\tchangeName(response.data.userDetails.name);\r\n\t\t\t\t\tsetLoggedIn(true);\r\n\t\t\t\t\tsetAuthToken(response.data.token);\r\n\r\n\t\t\t\t\tlocalStorage.setItem(\"userLoggedIn\", true);\r\n\t\t\t\t\tlocalStorage.setItem(\r\n\t\t\t\t\t\t\"name\",\r\n\t\t\t\t\t\tresponse.data.userDetails.name\r\n\t\t\t\t\t);\r\n\t\t\t\t\tlocalStorage.setItem(\"authToken\", response.data.token);\r\n\r\n\t\t\t\t\tif (type === \"owner\") {\r\n\t\t\t\t\t\tsetOwnerRedirect(true);\r\n\t\t\t\t\t\t//TODO: Redirect dashboard shit\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tsetRedirect(true);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} catch (error) {\r\n\t\t\t\tconsole.log(error);\r\n\t\t\t\tif (error.response.status === 409) {\r\n\t\t\t\t\tsetVerifyMail(data.email);\r\n\t\t\t\t\tsetNotVerified(true);\r\n\t\t\t\t} else if (error.response.status === 401) {\r\n\t\t\t\t\tsetErrorText(\"Invalid Credentials...\");\r\n\t\t\t\t\tsetDidLogin(false);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tsetErrorText(\"Error Logging In! Try again....\");\r\n\t\t\t\t\tsetDidLogin(false);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tsetLoading(false);\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tif (type !== \"user\" && type !== \"organizer\" && type !== \"owner\") {\r\n\t\t\tsetRedirect(true);\r\n\t\t}\r\n\t}, [type]);\r\n\r\n\tif (redirect === true) {\r\n\t\treturn <Redirect to=\"/\" />;\r\n\t} else if (ownerRedirect) {\r\n\t\treturn <Redirect to=\"/coronilOP\" />;\r\n\t}\r\n\treturn isLoading ? (\r\n\t\t<Loading />\r\n\t) : (\r\n\t\t<Container className=\"login-page\">\r\n\t\t\t<div className=\"login-form\">\r\n\t\t\t\t<Typography variant=\"h3\" color=\"primary\" className=\"login-head\">\r\n\t\t\t\t\t{type === \"user\"\r\n\t\t\t\t\t\t? \"Login Now\"\r\n\t\t\t\t\t\t: type === \"organizer\"\r\n\t\t\t\t\t\t? \"Organizer Login\"\r\n\t\t\t\t\t\t: \"Owner Login\"}\r\n\t\t\t\t</Typography>\r\n\t\t\t\t<br />\r\n\t\t\t\t{didLogin === false ? (\r\n\t\t\t\t\t<Alert severity=\"error\">{errorText}</Alert>\r\n\t\t\t\t) : null}\r\n\t\t\t\t{notVerified ? (\r\n\t\t\t\t\t<Alert severity=\"error\">\r\n\t\t\t\t\t\tYour email is not verified.\r\n\t\t\t\t\t\t<Link\r\n\t\t\t\t\t\t\tclassName=\"link\"\r\n\t\t\t\t\t\t\tstyle={{ color: \"red\" }}\r\n\t\t\t\t\t\t\tto={{\r\n\t\t\t\t\t\t\t\tpathname: `/verify/${type}`,\r\n\t\t\t\t\t\t\t\tstate: {\r\n\t\t\t\t\t\t\t\t\temail: verifyMail,\r\n\t\t\t\t\t\t\t\t\tsendCode: true,\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\tClick here to verify...\r\n\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t</Alert>\r\n\t\t\t\t) : null}\r\n\t\t\t\t{type !== \"owner\" ? (\r\n\t\t\t\t\t<a\r\n\t\t\t\t\t\thref={\r\n\t\t\t\t\t\t\ttype === \"user\"\r\n\t\t\t\t\t\t\t\t? `/dashboard?type=${type}` \r\n\t\t\t\t\t\t\t\t: `/dashboard?type=admin`\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tclassName=\"google-link\"\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<div className=\"google-btn\">\r\n\t\t\t\t\t\t\t<div className=\"google-icon-wrapper\">\r\n\t\t\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\t\t\tclassName=\"google-icon\"\r\n\t\t\t\t\t\t\t\t\tsrc=\"https://upload.wikimedia.org/wikipedia/commons/5/53/Google_%22G%22_Logo.svg\"\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<p className=\"btn-text\">\r\n\t\t\t\t\t\t\t\t<b>Sign in with Google</b>\r\n\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</a>\r\n\t\t\t\t) : null}\r\n\t\t\t\t<form className=\"form\">\r\n\t\t\t\t\t<TextInput\r\n\t\t\t\t\t\terror={\r\n\t\t\t\t\t\t\temailChanged\r\n\t\t\t\t\t\t\t\t? emailError.length === 0\r\n\t\t\t\t\t\t\t\t\t? false\r\n\t\t\t\t\t\t\t\t\t: true\r\n\t\t\t\t\t\t\t\t: false\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\thelperText={\r\n\t\t\t\t\t\t\temailChanged\r\n\t\t\t\t\t\t\t\t? emailError.length === 0\r\n\t\t\t\t\t\t\t\t\t? null\r\n\t\t\t\t\t\t\t\t\t: emailError\r\n\t\t\t\t\t\t\t\t: null\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tid=\"email\"\r\n\t\t\t\t\t\tlabel=\"Email\"\r\n\t\t\t\t\t\ttype=\"email\"\r\n\t\t\t\t\t\tclassName=\"form-input\"\r\n\t\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\t\tvalue={email}\r\n\t\t\t\t\t\tonChange={handleEmailChange}\r\n\t\t\t\t\t\tonKeyPress={keyPress}\r\n\t\t\t\t\t></TextInput>\r\n\t\t\t\t\t<br />\r\n\t\t\t\t\t<TextInput\r\n\t\t\t\t\t\terror={\r\n\t\t\t\t\t\t\tpasswordChanged\r\n\t\t\t\t\t\t\t\t? passwordError.length === 0\r\n\t\t\t\t\t\t\t\t\t? false\r\n\t\t\t\t\t\t\t\t\t: true\r\n\t\t\t\t\t\t\t\t: false\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\thelperText={\r\n\t\t\t\t\t\t\tpasswordChanged\r\n\t\t\t\t\t\t\t\t? passwordError.length === 0\r\n\t\t\t\t\t\t\t\t\t? null\r\n\t\t\t\t\t\t\t\t\t: passwordError\r\n\t\t\t\t\t\t\t\t: null\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tid=\"password\"\r\n\t\t\t\t\t\ttype={showPassword ? \"text\" : \"password\"}\r\n\t\t\t\t\t\tlabel=\"Password\"\r\n\t\t\t\t\t\tclassName=\"form-input\"\r\n\t\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\t\tvalue={password}\r\n\t\t\t\t\t\tonChange={handlePasswordChange}\r\n\t\t\t\t\t\tonKeyPress={keyPress}\r\n\t\t\t\t\t\tInputProps={{\r\n\t\t\t\t\t\t\tendAdornment: (\r\n\t\t\t\t\t\t\t\t<InputAdornment position=\"end\">\r\n\t\t\t\t\t\t\t\t\t<IconButton\r\n\t\t\t\t\t\t\t\t\t\taria-label=\"show password\"\r\n\t\t\t\t\t\t\t\t\t\tonClick={togglePasswordVisibility}\r\n\t\t\t\t\t\t\t\t\t\tedge=\"end\"\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t{showPassword ? (\r\n\t\t\t\t\t\t\t\t\t\t\t<Visibility />\r\n\t\t\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t\t\t<VisibilityOff />\r\n\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t\t\t\t</InputAdornment>\r\n\t\t\t\t\t\t\t),\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t></TextInput>\r\n\t\t\t\t</form>\r\n\t\t\t\t<div className=\"forgot-section\">\r\n\t\t\t\t\t{type === \"owner\" ? null : (\r\n\t\t\t\t\t\t<Link\r\n\t\t\t\t\t\t\tto={`/forgotPassword/${type}`}\r\n\t\t\t\t\t\t\tclassName=\"link forgot-pass\"\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\tForgot your password?\r\n\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</div>\r\n\t\t\t\t<Button className=\"login-btn\" onClick={handleSubmit}>\r\n\t\t\t\t\tLogin\r\n\t\t\t\t</Button>\r\n\t\t\t\t<Link to={`/register/${type}`} className=\"link register-link\">\r\n\t\t\t\t\tDon't have an account? Join the Quizzie now!\r\n\t\t\t\t</Link>\r\n\t\t\t</div>\r\n\t\t</Container>\r\n\t);\r\n}\r\n\r\nexport default LoginPage;\r\n"]},"metadata":{},"sourceType":"module"}