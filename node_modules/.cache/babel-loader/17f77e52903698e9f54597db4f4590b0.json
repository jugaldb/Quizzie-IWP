{"ast":null,"code":"var _jsxFileName = \"/home/jugaldb/Desktop/projects/IWP/src/pages/updateQuizDetails.js\";\n\n/* Copy of createQuiz page */\nimport React, { useState, useEffect } from \"react\";\nimport \"./CreateQuiz.css\";\nimport { Container, Typography, Grid, Slider, InputLabel, Select, MenuItem, Button, Tooltip } from \"@material-ui/core\";\nimport TextInput from \"../components/TextInput\";\nimport { KeyboardDatePicker, KeyboardTimePicker, MuiPickersUtilsProvider } from \"@material-ui/pickers\";\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport axios from \"axios\";\nimport { Redirect } from \"react-router\";\nimport Loading from \"../pages/Loading\";\nimport { useGoogleReCaptcha } from \"react-google-recaptcha-v3\";\n\nfunction UpdateQuizDetails(props) {\n  const [quizId, setQuizId] = useState(props.match.params.id);\n  const [quizName, setQuizName] = useState(\"\");\n  const [quizDate, setQuizDate] = useState(new Date());\n  const [duration, setDuration] = useState(5);\n  const [type, setType] = useState(\"private\");\n  const [loading, setLoading] = useState(true);\n  const [redirect, setRedirect] = useState(false);\n  const {\n    executeRecaptcha\n  } = useGoogleReCaptcha();\n\n  const onQuizNameChange = event => {\n    setQuizName(event.target.value);\n  };\n\n  const handleDateChange = date => {\n    setQuizDate(date);\n  };\n\n  const handleTimeChange = (e, val) => {\n    setDuration(val);\n  };\n\n  const onTypeChange = event => {\n    setType(event.target.value);\n  };\n\n  const handleSubmit = async () => {\n    setLoading(true);\n    let token = localStorage.getItem(\"authToken\");\n    let url = `https://quizzie-api.herokuapp.com/quiz/updateDetails/${quizId}`;\n    let captcha = await executeRecaptcha(\"update_quiz_details\");\n    let updateOps = [{\n      propName: \"quizName\",\n      value: quizName\n    }, {\n      propName: \"scheduledFor\",\n      value: quizDate.getTime()\n    }, {\n      propName: \"quizDuration\",\n      value: duration\n    }];\n    let data = {\n      updateOps,\n      captcha\n    };\n\n    try {\n      await axios.patch(url, data, {\n        headers: {\n          \"auth-token\": token\n        }\n      }).then(res => {\n        setLoading(false);\n        setRedirect(true);\n      });\n    } catch (error) {\n      console.log(error);\n      setLoading(false);\n    }\n  };\n\n  const getQuizDetails = async () => {\n    setLoading(true);\n    let token = localStorage.getItem(\"authToken\");\n    let url = `https://quizzie-api.herokuapp.com/quiz/${quizId}`;\n\n    try {\n      await axios.get(url, {\n        headers: {\n          \"auth-token\": token\n        }\n      }).then(res => {\n        let details = res.data.result;\n        setQuizName(details.quizName);\n        setQuizDate(new Date(Number(details.scheduledFor)));\n        setDuration(details.quizDuration);\n        setType(details.quizType);\n        setLoading(false);\n      });\n    } catch (error) {\n      console.log(error);\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    getQuizDetails();\n  }, []);\n  useEffect(() => {\n    let token = localStorage.getItem(\"authToken\");\n\n    if (token === null) {\n      setLoading(false);\n      setRedirect(true);\n      return;\n    }\n  }, []);\n\n  if (loading) {\n    return /*#__PURE__*/React.createElement(Loading, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 10\n      }\n    });\n  } else if (redirect) {\n    return /*#__PURE__*/React.createElement(Redirect, {\n      to: `/editQuiz/${quizId}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 10\n      }\n    });\n  } else {\n    return /*#__PURE__*/React.createElement(Container, {\n      className: \"create-quiz-page\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"create-form\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      variant: \"h4\",\n      className: \"create-head\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 6\n      }\n    }, \"Quiz Details\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"create-form-inputs\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(TextInput, {\n      variant: \"outlined\",\n      label: \"Quiz Name\",\n      value: quizName,\n      onChange: onQuizNameChange,\n      name: \"Quiz Name\",\n      className: \"form-input\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(MuiPickersUtilsProvider, {\n      utils: DateFnsUtils,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      className: \"date-time-select\",\n      container: true,\n      spacing: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 8\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(KeyboardDatePicker, {\n      disableToolbar: true,\n      variant: \"inline\",\n      format: \"MM/dd/yyyy\",\n      margin: \"normal\",\n      label: \"Select Quiz Date\",\n      value: quizDate,\n      onChange: handleDateChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 10\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(KeyboardTimePicker, {\n      margin: \"normal\",\n      label: \"Select Quiz Start Time\",\n      value: quizDate,\n      onChange: handleDateChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 10\n      }\n    })))), /*#__PURE__*/React.createElement(\"p\", {\n      style: {\n        marginTop: \"5%\",\n        marginBottom: \"5%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 7\n      }\n    }, \"Quiz Time (in minutes):\"), /*#__PURE__*/React.createElement(Slider, {\n      defaultValue: 5,\n      \"aria-labelledby\": \"quiz time slider\",\n      step: 5,\n      min: 5,\n      max: 60,\n      valueLabelDisplay: \"on\",\n      marks: true,\n      className: \"time-slider\",\n      value: duration,\n      onChange: handleTimeChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      style: {\n        color: \"#777\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 7\n      }\n    }, \"Select quiz type: \"), /*#__PURE__*/React.createElement(Tooltip, {\n      title: \"Cannot change quiz type\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Select, {\n      disabled: true,\n      value: type,\n      onChange: onTypeChange,\n      className: \"type-select\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 8\n      }\n    }, /*#__PURE__*/React.createElement(MenuItem, {\n      value: \"public\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 9\n      }\n    }, \"Public\"), /*#__PURE__*/React.createElement(MenuItem, {\n      value: \"private\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 9\n      }\n    }, \"Private\"))), /*#__PURE__*/React.createElement(Button, {\n      className: \"login-btn create-btn\",\n      onClick: handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 7\n      }\n    }, \"Update Quiz\"))));\n  }\n}\n\nexport default UpdateQuizDetails;","map":{"version":3,"sources":["/home/jugaldb/Desktop/projects/IWP/src/pages/updateQuizDetails.js"],"names":["React","useState","useEffect","Container","Typography","Grid","Slider","InputLabel","Select","MenuItem","Button","Tooltip","TextInput","KeyboardDatePicker","KeyboardTimePicker","MuiPickersUtilsProvider","DateFnsUtils","axios","Redirect","Loading","useGoogleReCaptcha","UpdateQuizDetails","props","quizId","setQuizId","match","params","id","quizName","setQuizName","quizDate","setQuizDate","Date","duration","setDuration","type","setType","loading","setLoading","redirect","setRedirect","executeRecaptcha","onQuizNameChange","event","target","value","handleDateChange","date","handleTimeChange","e","val","onTypeChange","handleSubmit","token","localStorage","getItem","url","captcha","updateOps","propName","getTime","data","patch","headers","then","res","error","console","log","getQuizDetails","get","details","result","Number","scheduledFor","quizDuration","quizType","marginTop","marginBottom","color"],"mappings":"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","sourcesContent":["/* Copy of createQuiz page */\r\nimport React, { useState, useEffect } from \"react\";\r\nimport \"./CreateQuiz.css\";\r\nimport {\r\n\tContainer,\r\n\tTypography,\r\n\tGrid,\r\n\tSlider,\r\n\tInputLabel,\r\n\tSelect,\r\n\tMenuItem,\r\n\tButton,\r\n\tTooltip,\r\n} from \"@material-ui/core\";\r\nimport TextInput from \"../components/TextInput\";\r\nimport {\r\n\tKeyboardDatePicker,\r\n\tKeyboardTimePicker,\r\n\tMuiPickersUtilsProvider,\r\n} from \"@material-ui/pickers\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport axios from \"axios\";\r\nimport { Redirect } from \"react-router\";\r\nimport Loading from \"../pages/Loading\";\r\nimport { useGoogleReCaptcha } from \"react-google-recaptcha-v3\";\r\n\r\nfunction UpdateQuizDetails(props) {\r\n\tconst [quizId, setQuizId] = useState(props.match.params.id);\r\n\tconst [quizName, setQuizName] = useState(\"\");\r\n\tconst [quizDate, setQuizDate] = useState(new Date());\r\n\tconst [duration, setDuration] = useState(5);\r\n\tconst [type, setType] = useState(\"private\");\r\n\r\n\tconst [loading, setLoading] = useState(true);\r\n\tconst [redirect, setRedirect] = useState(false);\r\n\r\n\tconst { executeRecaptcha } = useGoogleReCaptcha();\r\n\r\n\tconst onQuizNameChange = (event) => {\r\n\t\tsetQuizName(event.target.value);\r\n\t};\r\n\r\n\tconst handleDateChange = (date) => {\r\n\t\tsetQuizDate(date);\r\n\t};\r\n\r\n\tconst handleTimeChange = (e, val) => {\r\n\t\tsetDuration(val);\r\n\t};\r\n\r\n\tconst onTypeChange = (event) => {\r\n\t\tsetType(event.target.value);\r\n\t};\r\n\r\n\tconst handleSubmit = async () => {\r\n\t\tsetLoading(true);\r\n\t\tlet token = localStorage.getItem(\"authToken\");\r\n\t\tlet url = `https://quizzie-api.herokuapp.com/quiz/updateDetails/${quizId}`;\r\n\r\n\t\tlet captcha = await executeRecaptcha(\"update_quiz_details\");\r\n\r\n\t\tlet updateOps = [\r\n\t\t\t{ propName: \"quizName\", value: quizName },\r\n\t\t\t{ propName: \"scheduledFor\", value: quizDate.getTime() },\r\n\t\t\t{ propName: \"quizDuration\", value: duration },\r\n\t\t];\r\n\r\n\t\tlet data = {\r\n\t\t\tupdateOps,\r\n\t\t\tcaptcha,\r\n\t\t};\r\n\r\n\t\ttry {\r\n\t\t\tawait axios\r\n\t\t\t\t.patch(url, data, {\r\n\t\t\t\t\theaders: {\r\n\t\t\t\t\t\t\"auth-token\": token,\r\n\t\t\t\t\t},\r\n\t\t\t\t})\r\n\t\t\t\t.then((res) => {\r\n\t\t\t\t\tsetLoading(false);\r\n\t\t\t\t\tsetRedirect(true);\r\n\t\t\t\t});\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log(error);\r\n\t\t\tsetLoading(false);\r\n\t\t}\r\n\t};\r\n\r\n\tconst getQuizDetails = async () => {\r\n\t\tsetLoading(true);\r\n\t\tlet token = localStorage.getItem(\"authToken\");\r\n\t\tlet url = `https://quizzie-api.herokuapp.com/quiz/${quizId}`;\r\n\r\n\t\ttry {\r\n\t\t\tawait axios\r\n\t\t\t\t.get(url, {\r\n\t\t\t\t\theaders: {\r\n\t\t\t\t\t\t\"auth-token\": token,\r\n\t\t\t\t\t},\r\n\t\t\t\t})\r\n\t\t\t\t.then((res) => {\r\n\t\t\t\t\tlet details = res.data.result;\r\n\t\t\t\t\tsetQuizName(details.quizName);\r\n\t\t\t\t\tsetQuizDate(new Date(Number(details.scheduledFor)));\r\n\t\t\t\t\tsetDuration(details.quizDuration);\r\n\t\t\t\t\tsetType(details.quizType);\r\n\t\t\t\t\tsetLoading(false);\r\n\t\t\t\t});\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log(error);\r\n\t\t\tsetLoading(false);\r\n\t\t}\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tgetQuizDetails();\r\n\t}, []);\r\n\r\n\tuseEffect(() => {\r\n\t\tlet token = localStorage.getItem(\"authToken\");\r\n\t\tif (token === null) {\r\n\t\t\tsetLoading(false);\r\n\t\t\tsetRedirect(true);\r\n\t\t\treturn;\r\n\t\t}\r\n\t}, []);\r\n\r\n\tif (loading) {\r\n\t\treturn <Loading />;\r\n\t} else if (redirect) {\r\n\t\treturn <Redirect to={`/editQuiz/${quizId}`} />;\r\n\t} else {\r\n\t\treturn (\r\n\t\t\t<Container className=\"create-quiz-page\">\r\n\t\t\t\t<div className=\"create-form\">\r\n\t\t\t\t\t<Typography variant=\"h4\" className=\"create-head\">\r\n\t\t\t\t\t\tQuiz Details\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t\t<div className=\"create-form-inputs\">\r\n\t\t\t\t\t\t<TextInput\r\n\t\t\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\t\t\tlabel=\"Quiz Name\"\r\n\t\t\t\t\t\t\tvalue={quizName}\r\n\t\t\t\t\t\t\tonChange={onQuizNameChange}\r\n\t\t\t\t\t\t\tname=\"Quiz Name\"\r\n\t\t\t\t\t\t\tclassName=\"form-input\"\r\n\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t<MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n\t\t\t\t\t\t\t<Grid\r\n\t\t\t\t\t\t\t\tclassName=\"date-time-select\"\r\n\t\t\t\t\t\t\t\tcontainer\r\n\t\t\t\t\t\t\t\tspacing={3}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<Grid item xs={12} sm={6}>\r\n\t\t\t\t\t\t\t\t\t<KeyboardDatePicker\r\n\t\t\t\t\t\t\t\t\t\tdisableToolbar\r\n\t\t\t\t\t\t\t\t\t\tvariant=\"inline\"\r\n\t\t\t\t\t\t\t\t\t\tformat=\"MM/dd/yyyy\"\r\n\t\t\t\t\t\t\t\t\t\tmargin=\"normal\"\r\n\t\t\t\t\t\t\t\t\t\tlabel=\"Select Quiz Date\"\r\n\t\t\t\t\t\t\t\t\t\tvalue={quizDate}\r\n\t\t\t\t\t\t\t\t\t\tonChange={handleDateChange}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t<Grid item xs={12} sm={6}>\r\n\t\t\t\t\t\t\t\t\t<KeyboardTimePicker\r\n\t\t\t\t\t\t\t\t\t\tmargin=\"normal\"\r\n\t\t\t\t\t\t\t\t\t\tlabel=\"Select Quiz Start Time\"\r\n\t\t\t\t\t\t\t\t\t\tvalue={quizDate}\r\n\t\t\t\t\t\t\t\t\t\tonChange={handleDateChange}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t</MuiPickersUtilsProvider>\r\n\t\t\t\t\t\t<p style={{ marginTop: \"5%\", marginBottom: \"5%\" }}>\r\n\t\t\t\t\t\t\tQuiz Time (in minutes):\r\n\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t<Slider\r\n\t\t\t\t\t\t\tdefaultValue={5}\r\n\t\t\t\t\t\t\taria-labelledby=\"quiz time slider\"\r\n\t\t\t\t\t\t\tstep={5}\r\n\t\t\t\t\t\t\tmin={5}\r\n\t\t\t\t\t\t\tmax={60}\r\n\t\t\t\t\t\t\tvalueLabelDisplay=\"on\"\r\n\t\t\t\t\t\t\tmarks\r\n\t\t\t\t\t\t\tclassName=\"time-slider\"\r\n\t\t\t\t\t\t\tvalue={duration}\r\n\t\t\t\t\t\t\tonChange={handleTimeChange}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<p style={{ color: \"#777\" }}>Select quiz type: </p>\r\n\t\t\t\t\t\t<Tooltip title=\"Cannot change quiz type\">\r\n\t\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\t\tdisabled\r\n\t\t\t\t\t\t\t\tvalue={type}\r\n\t\t\t\t\t\t\t\tonChange={onTypeChange}\r\n\t\t\t\t\t\t\t\tclassName=\"type-select\"\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<MenuItem value=\"public\">Public</MenuItem>\r\n\t\t\t\t\t\t\t\t<MenuItem value=\"private\">Private</MenuItem>\r\n\t\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t\t</Tooltip>\r\n\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\tclassName=\"login-btn create-btn\"\r\n\t\t\t\t\t\t\tonClick={handleSubmit}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\tUpdate Quiz\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</Container>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default UpdateQuizDetails;\r\n"]},"metadata":{},"sourceType":"module"}