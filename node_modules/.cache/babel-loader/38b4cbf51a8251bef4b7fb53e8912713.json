{"ast":null,"code":"var _jsxFileName = \"/home/jugaldb/Desktop/projects/IWP/src/components/QuizzesSection.js\";\nimport React, { useState, useEffect } from \"react\";\nimport \"./QuizzesSection.css\";\nimport axios from \"axios\";\nimport QuizLoading from \"./QuizLoading\";\nimport { GridList, GridListTile, GridListTileBar, Typography, Button, Dialog, isWidthUp, withWidth, IconButton, Tooltip, Snackbar, DialogTitle } from \"@material-ui/core\";\nimport { Add, Check, Info, Block, PlayCircleFilled } from \"@material-ui/icons\";\nimport TextInput from \"./TextInput\";\nimport { Alert } from \"@material-ui/lab\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport Loading from \"../pages/Loading\";\nimport countdown from \"countdown\";\nimport { useGoogleReCaptcha } from \"react-google-recaptcha-v3\";\n\nfunction QuizzesSection(props) {\n  const [loading, setLoading] = useState(false);\n  const [userType, setUserType] = useState(props.type);\n  const [profile, setProfile] = useState(props.profile);\n  const [quizzes, setQuizzes] = useState([]);\n  const [quizzesEnrolled, setQuizzesEnrolled] = useState([]);\n  const [joinModal, setJoinModal] = useState(false);\n  const [quizCode, setQuizCode] = useState(\"\");\n  const [quizCodeError, setQuizCodeError] = useState(false);\n  const [enrollModal, setEnrollModal] = useState(false);\n  const [enrollQuizName, setEnrollQuiz] = useState(\"\");\n  const [enrollQuizId, setEnrollQuizId] = useState(\"\");\n  const [enrollSnack, setEnrollSnack] = useState(false);\n  const [snackbar, setSnackBar] = useState(false);\n  const [errorSnack, setErrorSnack] = useState(false);\n  const [infoModal, setInfoModal] = useState(false);\n  const [infoLoading, setInfoLoading] = useState(false);\n  const [currQuiz, setCurrQuiz] = useState({});\n  const [timeRemain, setTimeRemain] = useState(\"\");\n  const [startModal, setStartModal] = useState(false);\n  const [quizStarted, setQuizStarted] = useState(false);\n  const [redirectId, setRedirectId] = useState(\"\");\n  const [quizDetails, setQuizDetails] = useState({});\n  const [earlyError, setEarlyError] = useState(false);\n  const [lateError, setLateError] = useState(false);\n  const [givenSnack, setGivenSnack] = useState(false);\n  const [privateWrongCode, setPrivateWrongCode] = useState(false);\n  const [alreadyEnrolled, setAlreadyEnrolled] = useState(false);\n  const setRefresh = props.refresh;\n  const {\n    executeRecaptcha\n  } = useGoogleReCaptcha();\n\n  const getCols = () => {\n    if (isWidthUp(\"md\", props.width)) {\n      return 3;\n    }\n\n    return 2;\n  };\n\n  const getInfoWidth = () => {\n    if (isWidthUp(\"sm\", props.width)) {\n      return \"45%\";\n    }\n\n    return \"80%\";\n  };\n\n  const onCloseHandle = () => {\n    setJoinModal(false);\n    setInfoModal(false);\n    setStartModal(false);\n    setQuizCode(\"\");\n    setQuizCodeError(false);\n    setEnrollModal(false);\n    setEnrollQuiz(\"\");\n    setEnrollQuizId(\"\");\n    setTimeRemain(\"\");\n    setCurrQuiz({});\n  };\n\n  const onJoinClick = () => {\n    setJoinModal(true);\n  };\n\n  const handleJoinChange = event => {\n    setQuizCode(event.target.value);\n  };\n\n  const handleEnrollButton = quiz => {\n    setEnrollQuiz(quiz.quizName);\n    setEnrollQuizId(quiz._id);\n    setEnrollModal(true);\n  };\n\n  const handleInfoButton = quiz => {\n    setInfoModal(true);\n    getQuizInfo(quiz.quizId._id);\n  };\n\n  const handleStartButton = quiz => {\n    setEnrollQuiz(quiz.quizId.quizName);\n    setEnrollQuizId(quiz.quizId._id);\n    setStartModal(true);\n  };\n\n  const getQuizInfo = async id => {\n    try {\n      setCurrQuiz(res.data.result);\n      setInfoLoading(false);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleJoinSubmit = async () => {\n    setQuizCodeError(false);\n    setEnrollSnack(true);\n\n    try {\n      setRefresh(true);\n      onCloseHandle();\n      setSnackBar(true);\n    } catch (error) {\n      setEnrollSnack(false);\n\n      if (error.response.status === 404) {\n        setPrivateWrongCode(true);\n      } else if (error.response.status === 409) {\n        setAlreadyEnrolled(true);\n      } else {\n        setErrorSnack(true);\n      }\n    }\n  };\n\n  const handleEnroll = async () => {\n    setEnrollSnack(true);\n\n    try {\n      setRefresh(true);\n      onCloseHandle();\n      setSnackBar(true);\n    } catch (error) {\n      console.log(error);\n      setErrorSnack(true);\n    }\n  };\n\n  const handleUnenroll = async () => {\n    setEnrollSnack(true);\n\n    try {\n      setRefresh(true);\n    } catch (error) {\n      console.log(error);\n      setErrorSnack(true);\n    }\n  };\n\n  const handleQuizStart = async () => {\n    setEnrollSnack(true);\n\n    try {\n      await axios.patch(url, data, {\n        headers: {\n          \"auth-token\": token\n        }\n      }).then(res => {\n        setRedirectId(data.quizId);\n        setQuizDetails(res.data);\n        setQuizStarted(true);\n      });\n    } catch (error) {\n      setEnrollSnack(false);\n\n      if (error.response.status === 401) {\n        setEarlyError(true);\n      } else if (error.response.status === 402) {\n        setLateError(true);\n      } else if (error.response.status === 405) {\n        setGivenSnack(true);\n      }\n    }\n  };\n\n  const setupEnrolled = () => {\n    let quizzes = [];\n    profile.quizzesEnrolled.map(quiz => {\n      if (!profile.quizzesGiven.find(o => o.quizId === quiz.quizId._id)) {\n        quizzes.push(quiz);\n      }\n    });\n    setQuizzesEnrolled(quizzes);\n  }; // const getQuizzes = async () => {\n  // \t// setLoading(true);\n  // \tlet token = localStorage.getItem(\"authToken\");\n  // \tlet url = \"https://quizzie-api.herokuapp.com/quiz/all\";\n  // \tlet quizList = [];\n  // \ttry {\n  // \t\tawait axios\n  // \t\t\t.get(url, {\n  // \t\t\t\theaders: {\n  // \t\t\t\t\t\"auth-token\": token,\n  // \t\t\t\t},\n  // \t\t\t})\n  // \t\t\t.then((res) => {\n  // \t\t\t\tres.data.result.map((quiz) => {\n  // \t\t\t\t\tif (quiz.quizType === \"public\") {\n  // \t\t\t\t\t\tif (userType === \"user\") {\n  // \t\t\t\t\t\t\tif (\n  // \t\t\t\t\t\t\t\t!profile.quizzesEnrolled.find(\n  // \t\t\t\t\t\t\t\t\t(o) => o.quizId._id === quiz._id\n  // \t\t\t\t\t\t\t\t)\n  // \t\t\t\t\t\t\t)\n  // \t\t\t\t\t\t\t\tquizList.push(quiz);\n  // \t\t\t\t\t\t} else quizList.push(quiz);\n  // \t\t\t\t\t}\n  // \t\t\t\t});\n  // \t\t\t\tquizList.sort(function (a, b) {\n  // \t\t\t\t\treturn a.scheduledFor - b.scheduledFor;\n  // \t\t\t\t});\n  // \t\t\t\tsetQuizzes(quizList);\n  // \t\t\t\tsetLoading(false);\n  // \t\t\t});\n  // \t} catch (error) {\n  // \t\tconsole.log(error);\n  // \t}\n  // };\n\n\n  useEffect(() => {\n    if (infoModal) {\n      if (currQuiz.scheduledFor <= Date.now()) {\n        setTimeRemain(\"Already Started!\");\n      } else {\n        setTimeout(() => {\n          setTimeRemain(countdown(new Date(), new Date(Number(currQuiz.scheduledFor))).toString());\n        }, 1000);\n      }\n    }\n  });\n  useEffect(() => {\n    setQuizzes([{\n      \"quizStatus\": 1,\n      \"quizRestart\": 0,\n      \"reminderSent\": true,\n      \"_id\": \"5f9e23161b1ace0017e44480\",\n      \"quizName\": \"Test-project\",\n      \"adminId\": {\n        \"userType\": \"Admin\",\n        \"isEmailVerified\": true,\n        \"_id\": \"5f9e22fd1b1ace0017e4447f\",\n        \"googleId\": 100590325271609520000,\n        \"name\": \"Jugal Bhatt\",\n        \"email\": \"jugalbhatt3@gmail.com\",\n        \"quizzes\": [{\n          \"_id\": \"5f9e23161b1ace0017e44481\",\n          \"quizId\": \"5f9e23161b1ace0017e44480\"\n        }, {\n          \"_id\": \"607095d05d76450017b51d37\",\n          \"quizId\": \"607095cf5d76450017b51d36\"\n        }],\n        \"__v\": 0,\n        \"token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyVHlwZSI6IkFkbWluIiwidXNlcklkIjoiNWY5ZTIyZmQxYjFhY2UwMDE3ZTQ0NDdmIiwiZW1haWwiOiJqdWdhbGJoYXR0M0BnbWFpbC5jb20iLCJuYW1lIjoiSnVnYWwgQmhhdHQiLCJpc0VtYWlsVmVyaWZpZWQiOnRydWUsImlhdCI6MTYxNzk5MTA3NSwiZXhwIjoxNjE4MDc3NDc1fQ.A9IQ_rXVw0akz-DuLL8lrPa54t4Rbf5xUnFpOGrL97o\"\n      },\n      \"scheduledFor\": \"1604199175741\",\n      \"quizDuration\": \"15\",\n      \"quizType\": \"public\",\n      \"usersParticipated\": [{\n        \"responses\": [{\n          \"description\": \"test-2\",\n          \"selected\": \"2\",\n          \"quesId\": \"5f9e23381b1ace0017e44487\",\n          \"correctAnswer\": \"2\",\n          \"options\": [{\n            \"_id\": \"5f9e23381b1ace0017e44488\",\n            \"text\": \"1\"\n          }, {\n            \"_id\": \"5f9e23381b1ace0017e44489\",\n            \"text\": \"2\"\n          }, {\n            \"_id\": \"5f9e23381b1ace0017e4448a\",\n            \"text\": \"3\"\n          }, {\n            \"_id\": \"5f9e23381b1ace0017e4448b\",\n            \"text\": \"4\"\n          }]\n        }, {\n          \"description\": \"Test-1\",\n          \"selected\": \"2\",\n          \"quesId\": \"5f9e23281b1ace0017e44482\",\n          \"correctAnswer\": \"1\",\n          \"options\": [{\n            \"_id\": \"5f9e23281b1ace0017e44483\",\n            \"text\": \"1\"\n          }, {\n            \"_id\": \"5f9e23281b1ace0017e44484\",\n            \"text\": \"2\"\n          }, {\n            \"_id\": \"5f9e23281b1ace0017e44485\",\n            \"text\": \"3\"\n          }, {\n            \"_id\": \"5f9e23281b1ace0017e44486\",\n            \"text\": \"4\"\n          }]\n        }],\n        \"_id\": \"5f9e23f51b1ace0017e44490\",\n        \"userId\": \"5f9e22911b1ace0017e4447e\",\n        \"marks\": 1,\n        \"timeEnded\": 1604199413600,\n        \"timeStarted\": 1604199404452\n      }],\n      \"usersEnrolled\": [{\n        \"_id\": \"5f9e23661b1ace0017e4448c\",\n        \"userId\": \"5f9e22911b1ace0017e4447e\"\n      }]\n    }, {\n      \"quizStatus\": 1,\n      \"quizRestart\": 1,\n      \"reminderSent\": true,\n      \"_id\": \"60705b05087268001723c79f\",\n      \"quizName\": \"iwp2\",\n      \"adminId\": {\n        \"userType\": \"Admin\",\n        \"isEmailVerified\": true,\n        \"_id\": \"6070413052ab540017bc2f53\",\n        \"email\": \"tanya.gupta2019@vitstudent.ac.in\",\n        \"password\": \"$2b$10$S.BxFqLPMj/bW7KbeIhFSuydPmsniJOT0Jw0pZuMos9Lvkz4e9jJe\",\n        \"name\": \"Tanya Gupta\",\n        \"mobileNumber\": 8447794252,\n        \"quizzes\": [{\n          \"_id\": \"607041a052ab540017bc2f56\",\n          \"quizId\": \"607041a052ab540017bc2f55\"\n        }, {\n          \"_id\": \"60705b05087268001723c7a0\",\n          \"quizId\": \"60705b05087268001723c79f\"\n        }],\n        \"__v\": 0,\n        \"verificationKey\": null,\n        \"verificationKeyExpires\": null\n      },\n      \"scheduledFor\": \"1617976061713\",\n      \"quizDuration\": \"5\",\n      \"quizType\": \"public\",\n      \"usersParticipated\": [],\n      \"usersEnrolled\": [{\n        \"_id\": \"60705ba0087268001723c7a2\",\n        \"userId\": \"60705b6f087268001723c7a1\"\n      }]\n    }]);\n  }, []);\n  useEffect(() => {\n    if (userType === \"user\") setupEnrolled(); // getQuizzes();\n  }, []);\n\n  if (loading) {\n    return /*#__PURE__*/React.createElement(QuizLoading, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 10\n      }\n    });\n  } else if (quizStarted) {\n    return /*#__PURE__*/React.createElement(Redirect, {\n      to: {\n        pathname: `/quiz`,\n        state: {\n          questions: quizDetails.data,\n          duration: quizDetails.duration,\n          start: quizDetails.scheduledFor,\n          id: enrollQuizId,\n          timeStarted: Date.now(),\n          restartStatus: quizDetails.quizRestart\n        }\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 4\n      }\n    });\n  } else {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"quizzes-section\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"quiz-btn-section\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 5\n      }\n    }, userType === \"user\" ? /*#__PURE__*/React.createElement(Button, {\n      className: \"join-quiz-btn\",\n      onClick: onJoinClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Check, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 8\n      }\n    }), \"Join a Quiz\") : null, userType === \"admin\" ? /*#__PURE__*/React.createElement(Button, {\n      className: \"create-quiz-btn\",\n      component: Link,\n      to: \"/createQuiz\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Add, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 8\n      }\n    }), \"Create a quiz\") : null), userType === \"user\" ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"enrolled-list\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 324,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      variant: \"h5\",\n      className: \"up-quizzes\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 325,\n        columnNumber: 7\n      }\n    }, \"Enrolled Quizzes\"), quizzesEnrolled.length === 0 ? /*#__PURE__*/React.createElement(\"p\", {\n      style: {\n        textAlign: \"center\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 329,\n        columnNumber: 8\n      }\n    }, \"Sorry! No quizzes available at the moment!\") : /*#__PURE__*/React.createElement(\"div\", {\n      className: \"quiz-list root1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 333,\n        columnNumber: 8\n      }\n    }, /*#__PURE__*/React.createElement(GridList, {\n      cols: getCols(),\n      className: \"grid-list btn-set\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 334,\n        columnNumber: 9\n      }\n    }, quizzesEnrolled.map(quiz => /*#__PURE__*/React.createElement(GridListTile, {\n      key: quiz._id,\n      className: \"quiz-tile\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 339,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: \"../quiz.png\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 343,\n        columnNumber: 12\n      }\n    }), /*#__PURE__*/React.createElement(GridListTileBar, {\n      title: quiz.quizId.quizName,\n      actionIcon: /*#__PURE__*/React.createElement(\"div\", {\n        className: \"inline\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 347,\n          columnNumber: 14\n        }\n      }, /*#__PURE__*/React.createElement(Tooltip, {\n        title: \"Start Quiz\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 348,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(IconButton, {\n        \"aria-label\": `start ${quiz.quizId.quizName}`,\n        onClick: () => handleStartButton(quiz),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 349,\n          columnNumber: 16\n        }\n      }, /*#__PURE__*/React.createElement(PlayCircleFilled, {\n        className: \"enroll-icon\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 357,\n          columnNumber: 17\n        }\n      }))), /*#__PURE__*/React.createElement(Tooltip, {\n        title: \"Info\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 360,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(IconButton, {\n        \"aria-label\": `info ${quiz.quizId.quizName}`,\n        onClick: () => handleInfoButton(quiz),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 361,\n          columnNumber: 16\n        }\n      }, /*#__PURE__*/React.createElement(Info, {\n        className: \"enroll-icon\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 369,\n          columnNumber: 17\n        }\n      })))),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 344,\n        columnNumber: 12\n      }\n    })))))) : null, /*#__PURE__*/React.createElement(Typography, {\n      variant: \"h5\",\n      className: \"up-quizzes\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 382,\n        columnNumber: 5\n      }\n    }, \"Upcoming Quizzes\"), quizzes.length === 0 ? /*#__PURE__*/React.createElement(\"p\", {\n      style: {\n        textAlign: \"center\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 386,\n        columnNumber: 6\n      }\n    }, \"Sorry! No quizzes available at the moment!\") : /*#__PURE__*/React.createElement(\"div\", {\n      className: \"quiz-list root1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 390,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(GridList, {\n      cols: getCols(),\n      className: \"grid-list\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 391,\n        columnNumber: 7\n      }\n    }, quizzes.map(quiz => /*#__PURE__*/React.createElement(GridListTile, {\n      key: quiz._id,\n      className: \"quiz-tile\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 393,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: \"../quiz.png\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 397,\n        columnNumber: 10\n      }\n    }), /*#__PURE__*/React.createElement(GridListTileBar, {\n      title: quiz.quizName,\n      subtitle: `By: ${quiz.adminId.name}`,\n      actionIcon: userType === \"user\" ? /*#__PURE__*/React.createElement(Tooltip, {\n        title: \"Enroll\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 403,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(IconButton, {\n        \"aria-label\": `enroll ${quiz.quizName}`,\n        onClick: () => handleEnrollButton(quiz),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 404,\n          columnNumber: 14\n        }\n      }, /*#__PURE__*/React.createElement(Check, {\n        className: \"enroll-icon\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 412,\n          columnNumber: 15\n        }\n      }))) : null,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 398,\n        columnNumber: 10\n      }\n    }))))), /*#__PURE__*/React.createElement(Dialog, {\n      open: joinModal,\n      onClose: onCloseHandle,\n      \"aria-labelledby\": \"join-quiz-modal\",\n      PaperProps: {\n        style: {\n          backgroundColor: \"white\",\n          color: \"#333\",\n          minWidth: \"30%\"\n        }\n      },\n      style: {\n        width: \"100%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 423,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"modal-info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 436,\n        columnNumber: 6\n      }\n    }, userType === \"admin\" ? /*#__PURE__*/React.createElement(Typography, {\n      variant: \"h6\",\n      className: \"type-head join-sub\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 438,\n        columnNumber: 8\n      }\n    }, \"Organizers cannot enroll in quizzes.\") : /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        display: \"flex\",\n        flexDirection: \"column\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 445,\n        columnNumber: 8\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      variant: \"h5\",\n      className: \"type-head\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 451,\n        columnNumber: 9\n      }\n    }, \"JOIN A PRIVATE QUIZ\"), /*#__PURE__*/React.createElement(Typography, {\n      variant: \"h6\",\n      className: \"type-head join-sub\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 454,\n        columnNumber: 9\n      }\n    }, \"Enter the code of the quiz you want to join\"), /*#__PURE__*/React.createElement(TextInput, {\n      error: quizCodeError,\n      helperText: quizCodeError ? \"Required\" : null,\n      label: \"Quiz Code\",\n      variant: \"outlined\",\n      value: quizCode,\n      onChange: handleJoinChange,\n      className: \"quiz-code-field\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 460,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      className: \"join-quiz-btn join-modal-btn\",\n      onClick: handleJoinSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 471,\n        columnNumber: 9\n      }\n    }, \"Join!\")))), /*#__PURE__*/React.createElement(Dialog, {\n      open: enrollModal,\n      onClose: onCloseHandle,\n      \"aria-labelledby\": \"enroll-quiz-modal\",\n      PaperProps: {\n        style: {\n          backgroundColor: \"white\",\n          color: \"#333\",\n          minWidth: \"30%\"\n        }\n      },\n      style: {\n        width: \"100%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 481,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"modal-info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 494,\n        columnNumber: 6\n      }\n    }, userType === \"admin\" ? /*#__PURE__*/React.createElement(Typography, {\n      variant: \"h6\",\n      className: \"type-head join-sub\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 496,\n        columnNumber: 8\n      }\n    }, \"Organizers cannot enroll in quizzes.\") : /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 503,\n        columnNumber: 8\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      variant: \"h6\",\n      className: \"type-head join-sub\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 504,\n        columnNumber: 9\n      }\n    }, `Are you sure you want to join ${enrollQuizName}?`), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"btn-div m-top\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 508,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      className: \"logout-btn m-right\",\n      onClick: handleEnroll,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 510,\n        columnNumber: 10\n      }\n    }, \"Yes\"), /*#__PURE__*/React.createElement(Button, {\n      className: \"cancel-btn m-left\",\n      onClick: onCloseHandle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 516,\n        columnNumber: 10\n      }\n    }, \"No\"))))), /*#__PURE__*/React.createElement(Dialog, {\n      open: startModal,\n      onClose: onCloseHandle,\n      \"aria-labelledby\": \"start-quiz-modal\",\n      PaperProps: {\n        style: {\n          backgroundColor: \"white\",\n          color: \"#333\",\n          minWidth: \"30%\"\n        }\n      },\n      style: {\n        width: \"100%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 527,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"modal-info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 540,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 541,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      variant: \"h6\",\n      className: \"type-head join-sub\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 542,\n        columnNumber: 8\n      }\n    }, `Are you sure you want to start ${enrollQuizName}?`), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"btn-div m-top2 start-div\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 546,\n        columnNumber: 8\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      className: \"logout-btn m-right\",\n      onClick: handleQuizStart,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 548,\n        columnNumber: 9\n      }\n    }, \"Yes\"), /*#__PURE__*/React.createElement(Button, {\n      className: \"cancel-btn m-left\",\n      onClick: onCloseHandle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 554,\n        columnNumber: 9\n      }\n    }, \"No\"))))), /*#__PURE__*/React.createElement(Dialog, {\n      open: infoModal,\n      onClose: onCloseHandle,\n      \"aria-labelledby\": \"info-quiz-modal\",\n      PaperProps: {\n        style: {\n          backgroundColor: \"white\",\n          color: \"#333\",\n          minWidth: getInfoWidth(),\n          maxHeight: \"45%\"\n        }\n      },\n      style: {\n        width: \"100%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 564,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(DialogTitle, {\n      style: {\n        textAlign: \"center\",\n        fontWeight: \"bold\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 578,\n        columnNumber: 6\n      }\n    }, \"Quiz Info\"), infoLoading ? /*#__PURE__*/React.createElement(Loading, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 586,\n        columnNumber: 7\n      }\n    }) : /*#__PURE__*/React.createElement(\"div\", {\n      className: \"modal-info no-p-top\",\n      style: {\n        textAlign: \"center\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 588,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      variant: \"h6\",\n      className: \"profile-param info-param\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 592,\n        columnNumber: 8\n      }\n    }, \"Name:\", \" \", /*#__PURE__*/React.createElement(\"span\", {\n      className: \"profile-data\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 597,\n        columnNumber: 9\n      }\n    }, currQuiz.quizName)), /*#__PURE__*/React.createElement(Typography, {\n      variant: \"h6\",\n      className: \"profile-param info-param\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 601,\n        columnNumber: 8\n      }\n    }, \"Date:\", \" \", /*#__PURE__*/React.createElement(\"span\", {\n      className: \"profile-data\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 606,\n        columnNumber: 9\n      }\n    }, new Date(Number(currQuiz.scheduledFor)).toDateString())), /*#__PURE__*/React.createElement(Typography, {\n      variant: \"h6\",\n      className: \"profile-param info-param\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 612,\n        columnNumber: 8\n      }\n    }, \"Time:\", \" \", /*#__PURE__*/React.createElement(\"span\", {\n      className: \"profile-data\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 617,\n        columnNumber: 9\n      }\n    }, new Date(Number(currQuiz.scheduledFor)).toLocaleTimeString())), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"time-sec\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 623,\n        columnNumber: 8\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      variant: \"h6\",\n      className: \"profile-param info-param\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 624,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"profile-data time-rem\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 628,\n        columnNumber: 10\n      }\n    }, timeRemain))), /*#__PURE__*/React.createElement(Button, {\n      className: \"unenroll-btn\",\n      onClick: handleUnenroll,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 633,\n        columnNumber: 8\n      }\n    }, /*#__PURE__*/React.createElement(Block, {\n      style: {\n        color: \"white\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 637,\n        columnNumber: 9\n      }\n    }), \"Unenroll\"))), /*#__PURE__*/React.createElement(Snackbar, {\n      open: snackbar,\n      autoHideDuration: 2000,\n      onClose: () => setSnackBar(false),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 643,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(Alert, {\n      variant: \"filled\",\n      severity: \"success\",\n      onClose: () => setSnackBar(false),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 648,\n        columnNumber: 6\n      }\n    }, \"Successfully Enrolled!\")), /*#__PURE__*/React.createElement(Snackbar, {\n      open: errorSnack,\n      autoHideDuration: 2000,\n      onClose: () => setErrorSnack(false),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 656,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(Alert, {\n      variant: \"filled\",\n      severity: \"error\",\n      onClose: () => setErrorSnack(false),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 661,\n        columnNumber: 6\n      }\n    }, \"There was some error. Please try again!\")), /*#__PURE__*/React.createElement(Snackbar, {\n      open: enrollSnack,\n      autoHideDuration: 5000,\n      onClose: () => setEnrollSnack(false),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 669,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(Alert, {\n      variant: \"filled\",\n      severity: \"info\",\n      onClose: () => setErrorSnack(false),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 674,\n        columnNumber: 6\n      }\n    }, \"Processing... Please Wait!\")), /*#__PURE__*/React.createElement(Snackbar, {\n      open: earlyError,\n      autoHideDuration: 5000,\n      onClose: () => setEarlyError(false),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 682,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(Alert, {\n      variant: \"filled\",\n      severity: \"error\",\n      onClose: () => setEarlyError(false),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 687,\n        columnNumber: 6\n      }\n    }, \"The quiz has not yet started!\")), /*#__PURE__*/React.createElement(Snackbar, {\n      open: lateError,\n      autoHideDuration: 5000,\n      onClose: () => setLateError(false),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 695,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(Alert, {\n      variant: \"filled\",\n      severity: \"error\",\n      onClose: () => setLateError(false),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 700,\n        columnNumber: 6\n      }\n    }, \"This quiz has ended!\")), /*#__PURE__*/React.createElement(Snackbar, {\n      open: givenSnack,\n      autoHideDuration: 5000,\n      onClose: () => setGivenSnack(false),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 708,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(Alert, {\n      variant: \"filled\",\n      severity: \"error\",\n      onClose: () => setGivenSnack(false),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 713,\n        columnNumber: 6\n      }\n    }, \"Already given this quiz!\")), /*#__PURE__*/React.createElement(Snackbar, {\n      open: privateWrongCode,\n      autoHideDuration: 5000,\n      onClose: () => setPrivateWrongCode(false),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 721,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(Alert, {\n      variant: \"filled\",\n      severity: \"error\",\n      onClose: () => setPrivateWrongCode(false),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 726,\n        columnNumber: 6\n      }\n    }, \"This quiz code does not exists!\")), /*#__PURE__*/React.createElement(Snackbar, {\n      open: alreadyEnrolled,\n      autoHideDuration: 5000,\n      onClose: () => setAlreadyEnrolled(false),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 734,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(Alert, {\n      variant: \"filled\",\n      severity: \"error\",\n      onClose: () => setAlreadyEnrolled(false),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 739,\n        columnNumber: 6\n      }\n    }, \"Already enrolled in this quiz!\")));\n  }\n}\n\nexport default withWidth()(QuizzesSection);","map":{"version":3,"sources":["/home/jugaldb/Desktop/projects/IWP/src/components/QuizzesSection.js"],"names":["React","useState","useEffect","axios","QuizLoading","GridList","GridListTile","GridListTileBar","Typography","Button","Dialog","isWidthUp","withWidth","IconButton","Tooltip","Snackbar","DialogTitle","Add","Check","Info","Block","PlayCircleFilled","TextInput","Alert","Link","Redirect","Loading","countdown","useGoogleReCaptcha","QuizzesSection","props","loading","setLoading","userType","setUserType","type","profile","setProfile","quizzes","setQuizzes","quizzesEnrolled","setQuizzesEnrolled","joinModal","setJoinModal","quizCode","setQuizCode","quizCodeError","setQuizCodeError","enrollModal","setEnrollModal","enrollQuizName","setEnrollQuiz","enrollQuizId","setEnrollQuizId","enrollSnack","setEnrollSnack","snackbar","setSnackBar","errorSnack","setErrorSnack","infoModal","setInfoModal","infoLoading","setInfoLoading","currQuiz","setCurrQuiz","timeRemain","setTimeRemain","startModal","setStartModal","quizStarted","setQuizStarted","redirectId","setRedirectId","quizDetails","setQuizDetails","earlyError","setEarlyError","lateError","setLateError","givenSnack","setGivenSnack","privateWrongCode","setPrivateWrongCode","alreadyEnrolled","setAlreadyEnrolled","setRefresh","refresh","executeRecaptcha","getCols","width","getInfoWidth","onCloseHandle","onJoinClick","handleJoinChange","event","target","value","handleEnrollButton","quiz","quizName","_id","handleInfoButton","getQuizInfo","quizId","handleStartButton","id","res","data","result","error","console","log","handleJoinSubmit","response","status","handleEnroll","handleUnenroll","handleQuizStart","patch","url","headers","token","then","setupEnrolled","map","quizzesGiven","find","o","push","scheduledFor","Date","now","setTimeout","Number","toString","pathname","state","questions","duration","start","timeStarted","restartStatus","quizRestart","length","textAlign","adminId","name","style","backgroundColor","color","minWidth","display","flexDirection","maxHeight","fontWeight","toDateString","toLocaleTimeString"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport \"./QuizzesSection.css\";\r\nimport axios from \"axios\";\r\nimport QuizLoading from \"./QuizLoading\";\r\nimport {\r\n\tGridList,\r\n\tGridListTile,\r\n\tGridListTileBar,\r\n\tTypography,\r\n\tButton,\r\n\tDialog,\r\n\tisWidthUp,\r\n\twithWidth,\r\n\tIconButton,\r\n\tTooltip,\r\n\tSnackbar,\r\n\tDialogTitle,\r\n} from \"@material-ui/core\";\r\nimport { Add, Check, Info, Block, PlayCircleFilled } from \"@material-ui/icons\";\r\nimport TextInput from \"./TextInput\";\r\nimport { Alert } from \"@material-ui/lab\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport Loading from \"../pages/Loading\";\r\nimport countdown from \"countdown\";\r\nimport { useGoogleReCaptcha } from \"react-google-recaptcha-v3\";\r\n\r\nfunction QuizzesSection(props) {\r\n\tconst [loading, setLoading] = useState(false);\r\n\tconst [userType, setUserType] = useState(props.type);\r\n\tconst [profile, setProfile] = useState(props.profile);\r\n\tconst [quizzes, setQuizzes] = useState([]);\r\n\tconst [quizzesEnrolled, setQuizzesEnrolled] = useState([]);\r\n\r\n\tconst [joinModal, setJoinModal] = useState(false);\r\n\tconst [quizCode, setQuizCode] = useState(\"\");\r\n\tconst [quizCodeError, setQuizCodeError] = useState(false);\r\n\r\n\tconst [enrollModal, setEnrollModal] = useState(false);\r\n\tconst [enrollQuizName, setEnrollQuiz] = useState(\"\");\r\n\tconst [enrollQuizId, setEnrollQuizId] = useState(\"\");\r\n\r\n\tconst [enrollSnack, setEnrollSnack] = useState(false);\r\n\tconst [snackbar, setSnackBar] = useState(false);\r\n\tconst [errorSnack, setErrorSnack] = useState(false);\r\n\r\n\tconst [infoModal, setInfoModal] = useState(false);\r\n\tconst [infoLoading, setInfoLoading] = useState(false);\r\n\tconst [currQuiz, setCurrQuiz] = useState({});\r\n\tconst [timeRemain, setTimeRemain] = useState(\"\");\r\n\r\n\tconst [startModal, setStartModal] = useState(false);\r\n\tconst [quizStarted, setQuizStarted] = useState(false);\r\n\tconst [redirectId, setRedirectId] = useState(\"\");\r\n\tconst [quizDetails, setQuizDetails] = useState({});\r\n\r\n\tconst [earlyError, setEarlyError] = useState(false);\r\n\tconst [lateError, setLateError] = useState(false);\r\n\tconst [givenSnack, setGivenSnack] = useState(false);\r\n\tconst [privateWrongCode, setPrivateWrongCode] = useState(false);\r\n\tconst [alreadyEnrolled, setAlreadyEnrolled] = useState(false);\r\n\r\n\tconst setRefresh = props.refresh;\r\n\r\n\tconst { executeRecaptcha } = useGoogleReCaptcha();\r\n\r\n\tconst getCols = () => {\r\n\t\tif (isWidthUp(\"md\", props.width)) {\r\n\t\t\treturn 3;\r\n\t\t}\r\n\r\n\t\treturn 2;\r\n\t};\r\n\r\n\tconst getInfoWidth = () => {\r\n\t\tif (isWidthUp(\"sm\", props.width)) {\r\n\t\t\treturn \"45%\";\r\n\t\t}\r\n\r\n\t\treturn \"80%\";\r\n\t};\r\n\r\n\tconst onCloseHandle = () => {\r\n\t\tsetJoinModal(false);\r\n\t\tsetInfoModal(false);\r\n\t\tsetStartModal(false);\r\n\r\n\t\tsetQuizCode(\"\");\r\n\t\tsetQuizCodeError(false);\r\n\t\tsetEnrollModal(false);\r\n\t\tsetEnrollQuiz(\"\");\r\n\t\tsetEnrollQuizId(\"\");\r\n\t\tsetTimeRemain(\"\");\r\n\t\tsetCurrQuiz({});\r\n\t};\r\n\r\n\tconst onJoinClick = () => {\r\n\t\tsetJoinModal(true);\r\n\t};\r\n\r\n\tconst handleJoinChange = (event) => {\r\n\t\tsetQuizCode(event.target.value);\r\n\t};\r\n\r\n\tconst handleEnrollButton = (quiz) => {\r\n\t\tsetEnrollQuiz(quiz.quizName);\r\n\t\tsetEnrollQuizId(quiz._id);\r\n\t\tsetEnrollModal(true);\r\n\t};\r\n\r\n\tconst handleInfoButton = (quiz) => {\r\n\t\tsetInfoModal(true);\r\n\t\tgetQuizInfo(quiz.quizId._id);\r\n\t};\r\n\r\n\tconst handleStartButton = (quiz) => {\r\n\t\tsetEnrollQuiz(quiz.quizId.quizName);\r\n\t\tsetEnrollQuizId(quiz.quizId._id);\r\n\t\tsetStartModal(true);\r\n\t};\r\n\r\n\tconst getQuizInfo = async (id) => {\r\n\t\t\r\n\t\ttry {\r\n\r\n\t\t\t\t\tsetCurrQuiz(res.data.result);\r\n\t\t\t\t\tsetInfoLoading(false);\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log(error);\r\n\t\t}\r\n\t};\r\n\r\n\tconst handleJoinSubmit = async () => {\r\n\r\n\t\tsetQuizCodeError(false);\r\n\t\tsetEnrollSnack(true);\r\n\r\n\t\ttry {\r\n\t\t\t\t\tsetRefresh(true);\r\n\t\t\t\t\tonCloseHandle();\r\n\t\t\t\t\tsetSnackBar(true);\r\n\t\t} catch (error) {\r\n\t\t\tsetEnrollSnack(false);\r\n\t\t\tif (error.response.status === 404) {\r\n\t\t\t\tsetPrivateWrongCode(true);\r\n\t\t\t} else if (error.response.status === 409) {\r\n\t\t\t\tsetAlreadyEnrolled(true);\r\n\t\t\t} else {\r\n\t\t\t\tsetErrorSnack(true);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tconst handleEnroll = async () => {\r\n\t\tsetEnrollSnack(true);\r\n\r\n\t\ttry {\r\n\r\n\t\t\t\t\tsetRefresh(true);\r\n\t\t\t\t\tonCloseHandle();\r\n\t\t\t\t\tsetSnackBar(true);\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log(error);\r\n\t\t\tsetErrorSnack(true);\r\n\t\t}\r\n\t};\r\n\r\n\tconst handleUnenroll = async () => {\r\n\t\tsetEnrollSnack(true);\r\n\r\n\t\ttry {\r\n\r\n\t\t\t\t\tsetRefresh(true);\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log(error);\r\n\t\t\tsetErrorSnack(true);\r\n\t\t}\r\n\t};\r\n\r\n\tconst handleQuizStart = async () => {\r\n\t\tsetEnrollSnack(true);\r\n\r\n\t\ttry {\r\n\t\t\tawait axios\r\n\t\t\t\t.patch(url, data, {\r\n\t\t\t\t\theaders: {\r\n\t\t\t\t\t\t\"auth-token\": token,\r\n\t\t\t\t\t},\r\n\t\t\t\t})\r\n\t\t\t\t.then((res) => {\r\n\t\t\t\t\tsetRedirectId(data.quizId);\r\n\t\t\t\t\tsetQuizDetails(res.data);\r\n\t\t\t\t\tsetQuizStarted(true);\r\n\t\t\t\t});\r\n\t\t} catch (error) {\r\n\t\t\tsetEnrollSnack(false);\r\n\t\t\tif (error.response.status === 401) {\r\n\t\t\t\tsetEarlyError(true);\r\n\t\t\t} else if (error.response.status === 402) {\r\n\t\t\t\tsetLateError(true);\r\n\t\t\t} else if (error.response.status === 405) {\r\n\t\t\t\tsetGivenSnack(true);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tconst setupEnrolled = () => {\r\n\t\tlet quizzes = [];\r\n\r\n\t\tprofile.quizzesEnrolled.map((quiz) => {\r\n\t\t\tif (\r\n\t\t\t\t!profile.quizzesGiven.find((o) => o.quizId === quiz.quizId._id)\r\n\t\t\t) {\r\n\t\t\t\tquizzes.push(quiz);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tsetQuizzesEnrolled(quizzes);\r\n\t};\r\n\r\n\t// const getQuizzes = async () => {\r\n\t// \t// setLoading(true);\r\n\t// \tlet token = localStorage.getItem(\"authToken\");\r\n\t// \tlet url = \"https://quizzie-api.herokuapp.com/quiz/all\";\r\n\r\n\t// \tlet quizList = [];\r\n\r\n\t// \ttry {\r\n\t// \t\tawait axios\r\n\t// \t\t\t.get(url, {\r\n\t// \t\t\t\theaders: {\r\n\t// \t\t\t\t\t\"auth-token\": token,\r\n\t// \t\t\t\t},\r\n\t// \t\t\t})\r\n\t// \t\t\t.then((res) => {\r\n\t// \t\t\t\tres.data.result.map((quiz) => {\r\n\t// \t\t\t\t\tif (quiz.quizType === \"public\") {\r\n\t// \t\t\t\t\t\tif (userType === \"user\") {\r\n\t// \t\t\t\t\t\t\tif (\r\n\t// \t\t\t\t\t\t\t\t!profile.quizzesEnrolled.find(\r\n\t// \t\t\t\t\t\t\t\t\t(o) => o.quizId._id === quiz._id\r\n\t// \t\t\t\t\t\t\t\t)\r\n\t// \t\t\t\t\t\t\t)\r\n\t// \t\t\t\t\t\t\t\tquizList.push(quiz);\r\n\t// \t\t\t\t\t\t} else quizList.push(quiz);\r\n\t// \t\t\t\t\t}\r\n\t// \t\t\t\t});\r\n\r\n\t// \t\t\t\tquizList.sort(function (a, b) {\r\n\t// \t\t\t\t\treturn a.scheduledFor - b.scheduledFor;\r\n\t// \t\t\t\t});\r\n\r\n\t// \t\t\t\tsetQuizzes(quizList);\r\n\t// \t\t\t\tsetLoading(false);\r\n\t// \t\t\t});\r\n\t// \t} catch (error) {\r\n\t// \t\tconsole.log(error);\r\n\t// \t}\r\n\t// };\r\n\r\n\tuseEffect(() => {\r\n\t\tif (infoModal) {\r\n\t\t\tif (currQuiz.scheduledFor <= Date.now()) {\r\n\t\t\t\tsetTimeRemain(\"Already Started!\");\r\n\t\t\t} else {\r\n\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\tsetTimeRemain(\r\n\t\t\t\t\t\tcountdown(\r\n\t\t\t\t\t\t\tnew Date(),\r\n\t\t\t\t\t\t\tnew Date(Number(currQuiz.scheduledFor))\r\n\t\t\t\t\t\t).toString()\r\n\t\t\t\t\t);\r\n\t\t\t\t}, 1000);\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n\tuseEffect(()=>{\r\n\t\tsetQuizzes([{\"quizStatus\":1,\"quizRestart\":0,\"reminderSent\":true,\"_id\":\"5f9e23161b1ace0017e44480\",\"quizName\":\"Test-project\",\"adminId\":{\"userType\":\"Admin\",\"isEmailVerified\":true,\"_id\":\"5f9e22fd1b1ace0017e4447f\",\"googleId\":100590325271609520000,\"name\":\"Jugal Bhatt\",\"email\":\"jugalbhatt3@gmail.com\",\"quizzes\":[{\"_id\":\"5f9e23161b1ace0017e44481\",\"quizId\":\"5f9e23161b1ace0017e44480\"},{\"_id\":\"607095d05d76450017b51d37\",\"quizId\":\"607095cf5d76450017b51d36\"}],\"__v\":0,\"token\":\"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyVHlwZSI6IkFkbWluIiwidXNlcklkIjoiNWY5ZTIyZmQxYjFhY2UwMDE3ZTQ0NDdmIiwiZW1haWwiOiJqdWdhbGJoYXR0M0BnbWFpbC5jb20iLCJuYW1lIjoiSnVnYWwgQmhhdHQiLCJpc0VtYWlsVmVyaWZpZWQiOnRydWUsImlhdCI6MTYxNzk5MTA3NSwiZXhwIjoxNjE4MDc3NDc1fQ.A9IQ_rXVw0akz-DuLL8lrPa54t4Rbf5xUnFpOGrL97o\"},\"scheduledFor\":\"1604199175741\",\"quizDuration\":\"15\",\"quizType\":\"public\",\"usersParticipated\":[{\"responses\":[{\"description\":\"test-2\",\"selected\":\"2\",\"quesId\":\"5f9e23381b1ace0017e44487\",\"correctAnswer\":\"2\",\"options\":[{\"_id\":\"5f9e23381b1ace0017e44488\",\"text\":\"1\"},{\"_id\":\"5f9e23381b1ace0017e44489\",\"text\":\"2\"},{\"_id\":\"5f9e23381b1ace0017e4448a\",\"text\":\"3\"},{\"_id\":\"5f9e23381b1ace0017e4448b\",\"text\":\"4\"}]},{\"description\":\"Test-1\",\"selected\":\"2\",\"quesId\":\"5f9e23281b1ace0017e44482\",\"correctAnswer\":\"1\",\"options\":[{\"_id\":\"5f9e23281b1ace0017e44483\",\"text\":\"1\"},{\"_id\":\"5f9e23281b1ace0017e44484\",\"text\":\"2\"},{\"_id\":\"5f9e23281b1ace0017e44485\",\"text\":\"3\"},{\"_id\":\"5f9e23281b1ace0017e44486\",\"text\":\"4\"}]}],\"_id\":\"5f9e23f51b1ace0017e44490\",\"userId\":\"5f9e22911b1ace0017e4447e\",\"marks\":1,\"timeEnded\":1604199413600,\"timeStarted\":1604199404452}],\"usersEnrolled\":[{\"_id\":\"5f9e23661b1ace0017e4448c\",\"userId\":\"5f9e22911b1ace0017e4447e\"}]},{\"quizStatus\":1,\"quizRestart\":1,\"reminderSent\":true,\"_id\":\"60705b05087268001723c79f\",\"quizName\":\"iwp2\",\"adminId\":{\"userType\":\"Admin\",\"isEmailVerified\":true,\"_id\":\"6070413052ab540017bc2f53\",\"email\":\"tanya.gupta2019@vitstudent.ac.in\",\"password\":\"$2b$10$S.BxFqLPMj/bW7KbeIhFSuydPmsniJOT0Jw0pZuMos9Lvkz4e9jJe\",\"name\":\"Tanya Gupta\",\"mobileNumber\":8447794252,\"quizzes\":[{\"_id\":\"607041a052ab540017bc2f56\",\"quizId\":\"607041a052ab540017bc2f55\"},{\"_id\":\"60705b05087268001723c7a0\",\"quizId\":\"60705b05087268001723c79f\"}],\"__v\":0,\"verificationKey\":null,\"verificationKeyExpires\":null},\"scheduledFor\":\"1617976061713\",\"quizDuration\":\"5\",\"quizType\":\"public\",\"usersParticipated\":[],\"usersEnrolled\":[{\"_id\":\"60705ba0087268001723c7a2\",\"userId\":\"60705b6f087268001723c7a1\"}]}])\r\n\t},[])\r\n\tuseEffect(() => {\r\n\t\tif (userType === \"user\") setupEnrolled();\r\n\t\t// getQuizzes();\r\n\t}, []);\r\n\r\n\tif (loading) {\r\n\t\treturn <QuizLoading />;\r\n\t} else if (quizStarted) {\r\n\t\treturn (\r\n\t\t\t<Redirect\r\n\t\t\t\tto={{\r\n\t\t\t\t\tpathname: `/quiz`,\r\n\t\t\t\t\tstate: {\r\n\t\t\t\t\t\tquestions: quizDetails.data,\r\n\t\t\t\t\t\tduration: quizDetails.duration,\r\n\t\t\t\t\t\tstart: quizDetails.scheduledFor,\r\n\t\t\t\t\t\tid: enrollQuizId,\r\n\t\t\t\t\t\ttimeStarted: Date.now(),\r\n\t\t\t\t\t\trestartStatus: quizDetails.quizRestart,\r\n\t\t\t\t\t},\r\n\t\t\t\t}}\r\n\t\t\t/>\r\n\t\t);\r\n\t} else {\r\n\t\treturn (\r\n\t\t\t<div className=\"quizzes-section\">\r\n\t\t\t\t<div className=\"quiz-btn-section\">\r\n\t\t\t\t\t{userType === \"user\" ? (\r\n\t\t\t\t\t\t<Button className=\"join-quiz-btn\" onClick={onJoinClick}>\r\n\t\t\t\t\t\t\t<Check />\r\n\t\t\t\t\t\t\tJoin a Quiz\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t) : null}\r\n\t\t\t\t\t{userType === \"admin\" ? (\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\tclassName=\"create-quiz-btn\"\r\n\t\t\t\t\t\t\tcomponent={Link}\r\n\t\t\t\t\t\t\tto=\"/createQuiz\"\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Add />\r\n\t\t\t\t\t\t\tCreate a quiz\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t) : null}\r\n\t\t\t\t</div>\r\n\t\t\t\t{userType === \"user\" ? (\r\n\t\t\t\t\t<div className=\"enrolled-list\">\r\n\t\t\t\t\t\t<Typography variant=\"h5\" className=\"up-quizzes\">\r\n\t\t\t\t\t\t\tEnrolled Quizzes\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t{quizzesEnrolled.length === 0 ? (\r\n\t\t\t\t\t\t\t<p style={{ textAlign: \"center\" }}>\r\n\t\t\t\t\t\t\t\tSorry! No quizzes available at the moment!\r\n\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t<div className=\"quiz-list root1\">\r\n\t\t\t\t\t\t\t\t<GridList\r\n\t\t\t\t\t\t\t\t\tcols={getCols()}\r\n\t\t\t\t\t\t\t\t\tclassName=\"grid-list btn-set\"\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t{quizzesEnrolled.map((quiz) => (\r\n\t\t\t\t\t\t\t\t\t\t<GridListTile\r\n\t\t\t\t\t\t\t\t\t\t\tkey={quiz._id}\r\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"quiz-tile\"\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t<img src=\"../quiz.png\" />\r\n\t\t\t\t\t\t\t\t\t\t\t<GridListTileBar\r\n\t\t\t\t\t\t\t\t\t\t\t\ttitle={quiz.quizId.quizName}\r\n\t\t\t\t\t\t\t\t\t\t\t\tactionIcon={\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"inline\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Tooltip title=\"Start Quiz\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<IconButton\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\taria-label={`start ${quiz.quizId.quizName}`}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() =>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleStartButton(\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tquiz\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<PlayCircleFilled className=\"enroll-icon\" />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Tooltip title=\"Info\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<IconButton\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\taria-label={`info ${quiz.quizId.quizName}`}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() =>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleInfoButton(\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tquiz\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Info className=\"enroll-icon\" />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t</GridListTile>\r\n\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t</GridList>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t) : null}\r\n\t\t\t\t<Typography variant=\"h5\" className=\"up-quizzes\">\r\n\t\t\t\t\tUpcoming Quizzes\r\n\t\t\t\t</Typography>\r\n\t\t\t\t{quizzes.length === 0 ? (\r\n\t\t\t\t\t<p style={{ textAlign: \"center\" }}>\r\n\t\t\t\t\t\tSorry! No quizzes available at the moment!\r\n\t\t\t\t\t</p>\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<div className=\"quiz-list root1\">\r\n\t\t\t\t\t\t<GridList cols={getCols()} className=\"grid-list\">\r\n\t\t\t\t\t\t\t{quizzes.map((quiz) => (\r\n\t\t\t\t\t\t\t\t<GridListTile\r\n\t\t\t\t\t\t\t\t\tkey={quiz._id}\r\n\t\t\t\t\t\t\t\t\tclassName=\"quiz-tile\"\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t<img src=\"../quiz.png\" />\r\n\t\t\t\t\t\t\t\t\t<GridListTileBar\r\n\t\t\t\t\t\t\t\t\t\ttitle={quiz.quizName}\r\n\t\t\t\t\t\t\t\t\t\tsubtitle={`By: ${quiz.adminId.name}`}\r\n\t\t\t\t\t\t\t\t\t\tactionIcon={\r\n\t\t\t\t\t\t\t\t\t\t\tuserType === \"user\" ? (\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Tooltip title=\"Enroll\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<IconButton\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\taria-label={`enroll ${quiz.quizName}`}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() =>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleEnrollButton(\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tquiz\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Check className=\"enroll-icon\" />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t\t\t\t\t\t) : null\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</GridListTile>\r\n\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t</GridList>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t)}\r\n\t\t\t\t<Dialog\r\n\t\t\t\t\topen={joinModal}\r\n\t\t\t\t\tonClose={onCloseHandle}\r\n\t\t\t\t\taria-labelledby=\"join-quiz-modal\"\r\n\t\t\t\t\tPaperProps={{\r\n\t\t\t\t\t\tstyle: {\r\n\t\t\t\t\t\t\tbackgroundColor: \"white\",\r\n\t\t\t\t\t\t\tcolor: \"#333\",\r\n\t\t\t\t\t\t\tminWidth: \"30%\",\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tstyle={{ width: \"100%\" }}\r\n\t\t\t\t>\r\n\t\t\t\t\t<div className=\"modal-info\">\r\n\t\t\t\t\t\t{userType === \"admin\" ? (\r\n\t\t\t\t\t\t\t<Typography\r\n\t\t\t\t\t\t\t\tvariant=\"h6\"\r\n\t\t\t\t\t\t\t\tclassName=\"type-head join-sub\"\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\tOrganizers cannot enroll in quizzes.\r\n\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\tdisplay: \"flex\",\r\n\t\t\t\t\t\t\t\t\tflexDirection: \"column\",\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<Typography variant=\"h5\" className=\"type-head\">\r\n\t\t\t\t\t\t\t\t\tJOIN A PRIVATE QUIZ\r\n\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t<Typography\r\n\t\t\t\t\t\t\t\t\tvariant=\"h6\"\r\n\t\t\t\t\t\t\t\t\tclassName=\"type-head join-sub\"\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\tEnter the code of the quiz you want to join\r\n\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t<TextInput\r\n\t\t\t\t\t\t\t\t\terror={quizCodeError}\r\n\t\t\t\t\t\t\t\t\thelperText={\r\n\t\t\t\t\t\t\t\t\t\tquizCodeError ? \"Required\" : null\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tlabel=\"Quiz Code\"\r\n\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\t\t\t\t\tvalue={quizCode}\r\n\t\t\t\t\t\t\t\t\tonChange={handleJoinChange}\r\n\t\t\t\t\t\t\t\t\tclassName=\"quiz-code-field\"\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\tclassName=\"join-quiz-btn join-modal-btn\"\r\n\t\t\t\t\t\t\t\t\tonClick={handleJoinSubmit}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\tJoin!\r\n\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Dialog>\r\n\t\t\t\t<Dialog\r\n\t\t\t\t\topen={enrollModal}\r\n\t\t\t\t\tonClose={onCloseHandle}\r\n\t\t\t\t\taria-labelledby=\"enroll-quiz-modal\"\r\n\t\t\t\t\tPaperProps={{\r\n\t\t\t\t\t\tstyle: {\r\n\t\t\t\t\t\t\tbackgroundColor: \"white\",\r\n\t\t\t\t\t\t\tcolor: \"#333\",\r\n\t\t\t\t\t\t\tminWidth: \"30%\",\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tstyle={{ width: \"100%\" }}\r\n\t\t\t\t>\r\n\t\t\t\t\t<div className=\"modal-info\">\r\n\t\t\t\t\t\t{userType === \"admin\" ? (\r\n\t\t\t\t\t\t\t<Typography\r\n\t\t\t\t\t\t\t\tvariant=\"h6\"\r\n\t\t\t\t\t\t\t\tclassName=\"type-head join-sub\"\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\tOrganizers cannot enroll in quizzes.\r\n\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t<Typography\r\n\t\t\t\t\t\t\t\t\tvariant=\"h6\"\r\n\t\t\t\t\t\t\t\t\tclassName=\"type-head join-sub\"\r\n\t\t\t\t\t\t\t\t>{`Are you sure you want to join ${enrollQuizName}?`}</Typography>\r\n\t\t\t\t\t\t\t\t<div className=\"btn-div m-top\">\r\n\t\t\t\t\t\t\t\t\t{/* classes in Navbar.css */}\r\n\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\tclassName=\"logout-btn m-right\"\r\n\t\t\t\t\t\t\t\t\t\tonClick={handleEnroll}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\tYes\r\n\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\tclassName=\"cancel-btn m-left\"\r\n\t\t\t\t\t\t\t\t\t\tonClick={onCloseHandle}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\tNo\r\n\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Dialog>\r\n\t\t\t\t<Dialog\r\n\t\t\t\t\topen={startModal}\r\n\t\t\t\t\tonClose={onCloseHandle}\r\n\t\t\t\t\taria-labelledby=\"start-quiz-modal\"\r\n\t\t\t\t\tPaperProps={{\r\n\t\t\t\t\t\tstyle: {\r\n\t\t\t\t\t\t\tbackgroundColor: \"white\",\r\n\t\t\t\t\t\t\tcolor: \"#333\",\r\n\t\t\t\t\t\t\tminWidth: \"30%\",\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tstyle={{ width: \"100%\" }}\r\n\t\t\t\t>\r\n\t\t\t\t\t<div className=\"modal-info\">\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<Typography\r\n\t\t\t\t\t\t\t\tvariant=\"h6\"\r\n\t\t\t\t\t\t\t\tclassName=\"type-head join-sub\"\r\n\t\t\t\t\t\t\t>{`Are you sure you want to start ${enrollQuizName}?`}</Typography>\r\n\t\t\t\t\t\t\t<div className=\"btn-div m-top2 start-div\">\r\n\t\t\t\t\t\t\t\t{/* classes in Navbar.css */}\r\n\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\tclassName=\"logout-btn m-right\"\r\n\t\t\t\t\t\t\t\t\tonClick={handleQuizStart}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\tYes\r\n\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\tclassName=\"cancel-btn m-left\"\r\n\t\t\t\t\t\t\t\t\tonClick={onCloseHandle}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\tNo\r\n\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Dialog>\r\n\t\t\t\t<Dialog\r\n\t\t\t\t\topen={infoModal}\r\n\t\t\t\t\tonClose={onCloseHandle}\r\n\t\t\t\t\taria-labelledby=\"info-quiz-modal\"\r\n\t\t\t\t\tPaperProps={{\r\n\t\t\t\t\t\tstyle: {\r\n\t\t\t\t\t\t\tbackgroundColor: \"white\",\r\n\t\t\t\t\t\t\tcolor: \"#333\",\r\n\t\t\t\t\t\t\tminWidth: getInfoWidth(),\r\n\t\t\t\t\t\t\tmaxHeight: \"45%\",\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tstyle={{ width: \"100%\" }}\r\n\t\t\t\t>\r\n\t\t\t\t\t<DialogTitle\r\n\t\t\t\t\t\tstyle={{ textAlign: \"center\", fontWeight: \"bold\" }}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tQuiz Info\r\n\t\t\t\t\t</DialogTitle>\r\n\r\n\t\t\t\t\t{/* From the profile section */}\r\n\t\t\t\t\t{infoLoading ? (\r\n\t\t\t\t\t\t<Loading />\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\tclassName=\"modal-info no-p-top\"\r\n\t\t\t\t\t\t\tstyle={{ textAlign: \"center\" }}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Typography\r\n\t\t\t\t\t\t\t\tvariant=\"h6\"\r\n\t\t\t\t\t\t\t\tclassName=\"profile-param info-param\"\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\tName:{\" \"}\r\n\t\t\t\t\t\t\t\t<span className=\"profile-data\">\r\n\t\t\t\t\t\t\t\t\t{currQuiz.quizName}\r\n\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t<Typography\r\n\t\t\t\t\t\t\t\tvariant=\"h6\"\r\n\t\t\t\t\t\t\t\tclassName=\"profile-param info-param\"\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\tDate:{\" \"}\r\n\t\t\t\t\t\t\t\t<span className=\"profile-data\">\r\n\t\t\t\t\t\t\t\t\t{new Date(\r\n\t\t\t\t\t\t\t\t\t\tNumber(currQuiz.scheduledFor)\r\n\t\t\t\t\t\t\t\t\t).toDateString()}\r\n\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t<Typography\r\n\t\t\t\t\t\t\t\tvariant=\"h6\"\r\n\t\t\t\t\t\t\t\tclassName=\"profile-param info-param\"\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\tTime:{\" \"}\r\n\t\t\t\t\t\t\t\t<span className=\"profile-data\">\r\n\t\t\t\t\t\t\t\t\t{new Date(\r\n\t\t\t\t\t\t\t\t\t\tNumber(currQuiz.scheduledFor)\r\n\t\t\t\t\t\t\t\t\t).toLocaleTimeString()}\r\n\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t<div className=\"time-sec\">\r\n\t\t\t\t\t\t\t\t<Typography\r\n\t\t\t\t\t\t\t\t\tvariant=\"h6\"\r\n\t\t\t\t\t\t\t\t\tclassName=\"profile-param info-param\"\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t<span className=\"profile-data time-rem\">\r\n\t\t\t\t\t\t\t\t\t\t{timeRemain}\r\n\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\tclassName=\"unenroll-btn\"\r\n\t\t\t\t\t\t\t\tonClick={handleUnenroll}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<Block style={{ color: \"white\" }} />\r\n\t\t\t\t\t\t\t\tUnenroll\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</Dialog>\r\n\t\t\t\t<Snackbar\r\n\t\t\t\t\topen={snackbar}\r\n\t\t\t\t\tautoHideDuration={2000}\r\n\t\t\t\t\tonClose={() => setSnackBar(false)}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Alert\r\n\t\t\t\t\t\tvariant=\"filled\"\r\n\t\t\t\t\t\tseverity=\"success\"\r\n\t\t\t\t\t\tonClose={() => setSnackBar(false)}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tSuccessfully Enrolled!\r\n\t\t\t\t\t</Alert>\r\n\t\t\t\t</Snackbar>\r\n\t\t\t\t<Snackbar\r\n\t\t\t\t\topen={errorSnack}\r\n\t\t\t\t\tautoHideDuration={2000}\r\n\t\t\t\t\tonClose={() => setErrorSnack(false)}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Alert\r\n\t\t\t\t\t\tvariant=\"filled\"\r\n\t\t\t\t\t\tseverity=\"error\"\r\n\t\t\t\t\t\tonClose={() => setErrorSnack(false)}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tThere was some error. Please try again!\r\n\t\t\t\t\t</Alert>\r\n\t\t\t\t</Snackbar>\r\n\t\t\t\t<Snackbar\r\n\t\t\t\t\topen={enrollSnack}\r\n\t\t\t\t\tautoHideDuration={5000}\r\n\t\t\t\t\tonClose={() => setEnrollSnack(false)}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Alert\r\n\t\t\t\t\t\tvariant=\"filled\"\r\n\t\t\t\t\t\tseverity=\"info\"\r\n\t\t\t\t\t\tonClose={() => setErrorSnack(false)}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tProcessing... Please Wait!\r\n\t\t\t\t\t</Alert>\r\n\t\t\t\t</Snackbar>\r\n\t\t\t\t<Snackbar\r\n\t\t\t\t\topen={earlyError}\r\n\t\t\t\t\tautoHideDuration={5000}\r\n\t\t\t\t\tonClose={() => setEarlyError(false)}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Alert\r\n\t\t\t\t\t\tvariant=\"filled\"\r\n\t\t\t\t\t\tseverity=\"error\"\r\n\t\t\t\t\t\tonClose={() => setEarlyError(false)}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tThe quiz has not yet started!\r\n\t\t\t\t\t</Alert>\r\n\t\t\t\t</Snackbar>\r\n\t\t\t\t<Snackbar\r\n\t\t\t\t\topen={lateError}\r\n\t\t\t\t\tautoHideDuration={5000}\r\n\t\t\t\t\tonClose={() => setLateError(false)}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Alert\r\n\t\t\t\t\t\tvariant=\"filled\"\r\n\t\t\t\t\t\tseverity=\"error\"\r\n\t\t\t\t\t\tonClose={() => setLateError(false)}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tThis quiz has ended!\r\n\t\t\t\t\t</Alert>\r\n\t\t\t\t</Snackbar>\r\n\t\t\t\t<Snackbar\r\n\t\t\t\t\topen={givenSnack}\r\n\t\t\t\t\tautoHideDuration={5000}\r\n\t\t\t\t\tonClose={() => setGivenSnack(false)}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Alert\r\n\t\t\t\t\t\tvariant=\"filled\"\r\n\t\t\t\t\t\tseverity=\"error\"\r\n\t\t\t\t\t\tonClose={() => setGivenSnack(false)}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tAlready given this quiz!\r\n\t\t\t\t\t</Alert>\r\n\t\t\t\t</Snackbar>\r\n\t\t\t\t<Snackbar\r\n\t\t\t\t\topen={privateWrongCode}\r\n\t\t\t\t\tautoHideDuration={5000}\r\n\t\t\t\t\tonClose={() => setPrivateWrongCode(false)}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Alert\r\n\t\t\t\t\t\tvariant=\"filled\"\r\n\t\t\t\t\t\tseverity=\"error\"\r\n\t\t\t\t\t\tonClose={() => setPrivateWrongCode(false)}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tThis quiz code does not exists!\r\n\t\t\t\t\t</Alert>\r\n\t\t\t\t</Snackbar>\r\n\t\t\t\t<Snackbar\r\n\t\t\t\t\topen={alreadyEnrolled}\r\n\t\t\t\t\tautoHideDuration={5000}\r\n\t\t\t\t\tonClose={() => setAlreadyEnrolled(false)}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Alert\r\n\t\t\t\t\t\tvariant=\"filled\"\r\n\t\t\t\t\t\tseverity=\"error\"\r\n\t\t\t\t\t\tonClose={() => setAlreadyEnrolled(false)}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tAlready enrolled in this quiz!\r\n\t\t\t\t\t</Alert>\r\n\t\t\t\t</Snackbar>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n\t\r\n\r\n}\r\n\r\n\r\n\r\nexport default withWidth()(QuizzesSection);\r\n"]},"metadata":{},"sourceType":"module"}