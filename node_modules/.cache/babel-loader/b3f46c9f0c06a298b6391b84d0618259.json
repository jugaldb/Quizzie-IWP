{"ast":null,"code":"var _jsxFileName = \"/home/jugaldb/Desktop/projects/IWP/src/pages/ResultPage.js\";\nimport React, { useState } from \"react\";\nimport \"./ResultPage.css\";\nimport { Container, Typography, ExpansionPanel, ExpansionPanelSummary, ExpansionPanelDetails, List, ListItemIcon, ListItemText, ListItem } from \"@material-ui/core\";\nimport axios from \"axios\";\nimport Loading from \"./Loading\";\nimport { Adjust, ExpandMore, Check, Close, Warning } from \"@material-ui/icons\";\n\nfunction ResultPage(props) {\n  const [quizId, setQuizId] = useState(props.match.params.id);\n  const [loading, setLoading] = useState(true);\n  const [name, setName] = useState(\"\");\n  const [marks, setMarks] = useState(null);\n  const [responses, setResponses] = useState([]);\n\n  const resIcon = response => {\n    if (response.selected === response.correctAnswer) {\n      return /*#__PURE__*/React.createElement(Check, {\n        style: {\n          color: 'green',\n          marginLeft: '3px'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 11\n        }\n      });\n    } else if (response.selected === null) {\n      return /*#__PURE__*/React.createElement(Warning, {\n        style: {\n          color: 'goldenrod',\n          marginLeft: '3px'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 11\n        }\n      });\n    } else {\n      return /*#__PURE__*/React.createElement(Close, {\n        style: {\n          color: 'red',\n          marginLeft: '3px'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }\n      });\n    }\n  };\n\n  const getDetails = async () => {\n    let token = localStorage.getItem(\"authToken\");\n    let url = `https://quizzie-api.herokuapp.com/quiz/${quizId}`;\n\n    try {\n      await axios.get(url, {\n        headers: {\n          \"auth-token\": token\n        }\n      }).then(res => {\n        setName(res.data.result.quizName);\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const getResponses = async () => {\n    let token = localStorage.getItem(\"authToken\");\n    let url = `https://quizzie-api.herokuapp.com/user/studentQuizResult/${quizId}`;\n\n    try {\n      await axios.get(url, {\n        headers: {\n          \"auth-token\": token\n        }\n      }).then(res => {\n        setMarks(res.data.result.marks);\n        setResponses(res.data.result.responses);\n        setLoading(false);\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useState(() => {\n    getDetails();\n    getResponses();\n  }, []);\n\n  if (loading) {\n    return /*#__PURE__*/React.createElement(Loading, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 10\n      }\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(Container, {\n    className: \"result-page\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"result-head\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h4\",\n    className: \"result-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 5\n    }\n  }, \"Results\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"result-quiz-info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"profile-param\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 30\n    }\n  }, \"Quiz:\"), \" \", /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 75\n    }\n  }, name)), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"profile-param\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 30\n    }\n  }, \"Scored:\"), \" \", /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 77\n    }\n  }, marks), \" out of \", /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 109\n    }\n  }, responses.length))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"result-responses\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"result-response-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 6\n    }\n  }, \"Responses\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"result-responses-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 5\n    }\n  }, responses.map(response => /*#__PURE__*/React.createElement(ExpansionPanel, {\n    elevation: 3,\n    className: \"expansion\",\n    key: response.quesId,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ExpansionPanelSummary, {\n    className: \"question-response\",\n    expandIcon: /*#__PURE__*/React.createElement(ExpandMore, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 21\n      }\n    }),\n    \"aria-controls\": \"question-content\",\n    \"aria-label\": \"Expand\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 8\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: \"question-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }\n  }, response.description, \" \", resIcon(response))), /*#__PURE__*/React.createElement(ExpansionPanelDetails, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 8\n    }\n  }, /*#__PURE__*/React.createElement(List, {\n    component: \"nav\",\n    className: \"options-display\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }\n  }, response.options.map(option => /*#__PURE__*/React.createElement(ListItem, {\n    button: true,\n    key: option._id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(ListItemIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(Adjust, {\n    style: {\n      color: response.correctAnswer === option.text ? 'green' : response.selected === option.text ? 'red' : 'black'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 26\n    }\n  })), /*#__PURE__*/React.createElement(ListItemText, {\n    style: {\n      color: response.correctAnswer === option.text ? 'green' : response.selected === option.text ? 'red' : 'black'\n    },\n    primary: option.text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 12\n    }\n  }))))))))));\n}\n\nexport default ResultPage;","map":{"version":3,"sources":["/home/jugaldb/Desktop/projects/IWP/src/pages/ResultPage.js"],"names":["React","useState","Container","Typography","ExpansionPanel","ExpansionPanelSummary","ExpansionPanelDetails","List","ListItemIcon","ListItemText","ListItem","axios","Loading","Adjust","ExpandMore","Check","Close","Warning","ResultPage","props","quizId","setQuizId","match","params","id","loading","setLoading","name","setName","marks","setMarks","responses","setResponses","resIcon","response","selected","correctAnswer","color","marginLeft","getDetails","token","localStorage","getItem","url","get","headers","then","res","data","result","quizName","error","console","log","getResponses","length","map","quesId","description","options","option","_id","text"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport \"./ResultPage.css\";\r\nimport { Container, Typography, ExpansionPanel, ExpansionPanelSummary, ExpansionPanelDetails, List, ListItemIcon, ListItemText, ListItem } from \"@material-ui/core\";\r\nimport axios from \"axios\";\r\nimport Loading from \"./Loading\";\r\nimport { Adjust, ExpandMore, Check, Close, Warning } from \"@material-ui/icons\";\r\n\r\nfunction ResultPage(props) {\r\n\tconst [quizId, setQuizId] = useState(props.match.params.id);\r\n\tconst [loading, setLoading] = useState(true);\r\n\r\n\tconst [name, setName] = useState(\"\");\r\n\tconst [marks, setMarks] = useState(null);\r\n\tconst [responses, setResponses] = useState([]);\r\n\r\n\r\n\tconst resIcon = (response) => {\r\n\t\tif(response.selected === response.correctAnswer) {\r\n\t\t\treturn <Check style={{color: 'green', marginLeft: '3px'}} />\r\n\t\t} else if(response.selected === null) {\r\n\t\t\treturn <Warning style={{color: 'goldenrod', marginLeft: '3px'}} />\r\n\t\t} \r\n\t\telse {\r\n\t\t\treturn <Close style={{color: 'red', marginLeft: '3px'}} />\r\n\t\t}\r\n\t}\r\n\r\n\tconst getDetails = async () => {\r\n\t\tlet token = localStorage.getItem(\"authToken\");\r\n\t\tlet url = `https://quizzie-api.herokuapp.com/quiz/${quizId}`;\r\n\r\n\t\ttry {\r\n\t\t\tawait axios.get(url, {\r\n\t\t\t\theaders: {\r\n\t\t\t\t\t\"auth-token\": token\r\n\t\t\t\t}\r\n\t\t\t}).then(res => {\r\n\t\t\t\tsetName(res.data.result.quizName);\r\n\t\t\t})\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log(error);\r\n\t\t}\r\n\t}\r\n\r\n\tconst getResponses = async () => {\r\n\t\tlet token = localStorage.getItem(\"authToken\");\r\n\t\tlet url = `https://quizzie-api.herokuapp.com/user/studentQuizResult/${quizId}`;\r\n\r\n\t\ttry {\r\n\t\t\tawait axios.get(url, {\r\n\t\t\t\theaders: {\r\n\t\t\t\t\t\"auth-token\": token\r\n\t\t\t\t}\r\n\t\t\t}).then(res => {\r\n\t\t\t\tsetMarks(res.data.result.marks);\r\n\t\t\t\tsetResponses(res.data.result.responses);\r\n\t\t\t\tsetLoading(false);\r\n\t\t\t})\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log(error);\r\n\t\t}\r\n\t}\r\n\r\n\tuseState(() => {\r\n\t\tgetDetails();\r\n\t\tgetResponses();\r\n\t}, [])\r\n\r\n\tif (loading) {\r\n\t\treturn <Loading />\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Container className=\"result-page\">\r\n\t\t\t<div className=\"result-head\">\r\n\t\t\t\t<Typography variant=\"h4\" className=\"result-title\">Results</Typography>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"result-quiz-info\">\r\n\t\t\t\t<Typography variant=\"h5\"><span className=\"profile-param\">Quiz:</span> <strong>{name}</strong></Typography>\r\n\t\t\t\t<Typography variant=\"h5\"><span className=\"profile-param\">Scored:</span> <strong>{marks}</strong> out of <strong>{responses.length}</strong></Typography>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"result-responses\">\r\n\t\t\t\t<div className=\"result-response-title\">\r\n\t\t\t\t\t<Typography variant=\"h5\">Responses</Typography>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"result-responses-list\">\r\n\t\t\t\t\t{responses.map((response) => (\r\n\t\t\t\t\t\t<ExpansionPanel elevation={3} className=\"expansion\" key={response.quesId}>\r\n\t\t\t\t\t\t\t<ExpansionPanelSummary\r\n\t\t\t\t\t\t\t\tclassName=\"question-response\"\r\n\t\t\t\t\t\t\t\texpandIcon={<ExpandMore />}\r\n\t\t\t\t\t\t\t\taria-controls=\"question-content\"\r\n\t\t\t\t\t\t\t\taria-label=\"Expand\"\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<Typography className=\"question-label\">{response.description} {resIcon(response)}</Typography>\r\n\t\t\t\t\t\t\t</ExpansionPanelSummary>\r\n\t\t\t\t\t\t\t<ExpansionPanelDetails>\r\n\t\t\t\t\t\t\t\t<List component=\"nav\" className=\"options-display\">\r\n\t\t\t\t\t\t\t\t\t{response.options.map((option) => (\r\n\t\t\t\t\t\t\t\t\t\t<ListItem button key={option._id}>\r\n\t\t\t\t\t\t\t\t\t\t\t<ListItemIcon><Adjust style={{ color: response.correctAnswer === option.text ? 'green' : (response.selected === option.text? 'red': 'black') }} /></ListItemIcon>\r\n\t\t\t\t\t\t\t\t\t\t\t<ListItemText style={{ color: response.correctAnswer === option.text ? 'green' : (response.selected === option.text? 'red': 'black') }} primary={option.text} />\r\n\t\t\t\t\t\t\t\t\t\t</ListItem>\r\n\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t</List>\r\n\t\t\t\t\t\t\t</ExpansionPanelDetails>\r\n\t\t\t\t\t\t</ExpansionPanel>\r\n\t\t\t\t\t))}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</Container>\r\n\t)\r\n}\r\n\r\nexport default ResultPage;"]},"metadata":{},"sourceType":"module"}