{"ast":null,"code":"var _jsxFileName = \"/home/jugaldb/Desktop/projects/IWP/src/components/Navbar.js\";\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { AppBar, Typography, Toolbar, Button, Dialog, DialogTitle } from \"@material-ui/core\";\nimport { Redirect } from 'react-router';\nimport { Link } from 'react-router-dom';\nimport './Navbar.css';\nimport InfoContext from '../context/InfoContext';\n\nfunction Navbar() {\n  const {\n    isLoggedIn,\n    setLoggedIn,\n    name\n  } = useContext(InfoContext);\n  const [navLoggedIn, setNavLoggedIn] = useState(false);\n  const [navName, setNavName] = useState(null);\n  const [redirect, setRedirect] = useState(false);\n  const [open, setOpen] = useState(false);\n  const [loginModalOpen, setLoginModalOpen] = useState(false);\n\n  const onCloseHandle = () => {\n    setOpen(false);\n    setLoginModalOpen(false);\n  };\n\n  const handleLogoutBtn = () => {\n    setOpen(true);\n  };\n\n  const handleLogout = () => {\n    localStorage.clear();\n    setLoggedIn(false);\n    setOpen(false);\n    setRedirect(true);\n    setInterval(() => {\n      setRedirect(false);\n    }, 1000);\n  };\n\n  useEffect(() => {\n    let loggedin = localStorage.getItem(\"userLoggedIn\");\n\n    if (loggedin === \"true\") {\n      setNavLoggedIn(true);\n      setNavName(localStorage.getItem(\"name\").split(\" \")[0]);\n    } else {\n      setNavLoggedIn(isLoggedIn);\n      if (name !== null) setNavName(name.split(\" \")[0]);\n    }\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"root\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 3\n    }\n  }, redirect ? /*#__PURE__*/React.createElement(Redirect, {\n    to: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }\n  }) : null, /*#__PURE__*/React.createElement(AppBar, {\n    position: \"static\",\n    className: \"navbar\",\n    elevation: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(Toolbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/\",\n    className: \"nav-link\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: \"../quiz.png\",\n    className: \"nav-logo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 40\n    }\n  })), /*#__PURE__*/React.createElement(Typography, {\n    varirant: \"h6\",\n    className: \"nav-head\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 6\n    }\n  }, \"The Quizzie Platform\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"btn-bar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 6\n    }\n  }, navLoggedIn === false ? /*#__PURE__*/React.createElement(Button, {\n    color: \"inherit\",\n    className: \"login\",\n    onClick: () => setLoginModalOpen(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 8\n    }\n  }, \"Login\") : /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h6\",\n    className: \"nav-user\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 8\n    }\n  }, \"Welcome, \", navName), navLoggedIn ? /*#__PURE__*/React.createElement(Button, {\n    className: \"logout-btn\",\n    onClick: handleLogoutBtn,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 21\n    }\n  }, \"Logout\") : null))), /*#__PURE__*/React.createElement(Dialog, {\n    open: open,\n    onClose: onCloseHandle,\n    \"aria-labelledby\": \"form-dialog-title\",\n    PaperProps: {\n      style: {\n        backgroundColor: 'white',\n        color: 'black',\n        minWidth: '10%',\n        textAlign: 'center'\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(DialogTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 5\n    }\n  }, \"Are you sure you want to logout?\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"btn-div\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: \"logout-btn m-right\",\n    onClick: handleLogout,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 6\n    }\n  }, \"Yes\"), /*#__PURE__*/React.createElement(Button, {\n    className: \"cancel-btn m-left\",\n    onClick: onCloseHandle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 6\n    }\n  }, \"No\"))), /*#__PURE__*/React.createElement(Dialog, {\n    open: loginModalOpen,\n    onClose: onCloseHandle,\n    \"aria-labelledby\": \"form-dialog-title\",\n    PaperProps: {\n      style: {\n        backgroundColor: 'white',\n        color: '#333',\n        minWidth: '40%'\n      }\n    },\n    style: {\n      width: '100%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modal-info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h5\",\n    className: \"type-head\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }\n  }, \"Are you a student or an organizer?\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modal-btns\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/login/user\",\n    className: \"link\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 8\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"outlined\",\n    color: \"primary\",\n    className: \"modal-select-btn modal-student\",\n    onClick: () => setLoginModalOpen(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  }, \"Student\")), /*#__PURE__*/React.createElement(Link, {\n    to: \"/login/organizer\",\n    className: \"link\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 8\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"outlined\",\n    color: \"secondary\",\n    className: \"modal-select-btn modal-organizer\",\n    onClick: () => setLoginModalOpen(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }\n  }, \"Organizer\"))))));\n}\n\nexport default Navbar;","map":{"version":3,"sources":["/home/jugaldb/Desktop/projects/IWP/src/components/Navbar.js"],"names":["React","useContext","useEffect","useState","AppBar","Typography","Toolbar","Button","Dialog","DialogTitle","Redirect","Link","InfoContext","Navbar","isLoggedIn","setLoggedIn","name","navLoggedIn","setNavLoggedIn","navName","setNavName","redirect","setRedirect","open","setOpen","loginModalOpen","setLoginModalOpen","onCloseHandle","handleLogoutBtn","handleLogout","localStorage","clear","setInterval","loggedin","getItem","split","style","backgroundColor","color","minWidth","textAlign","width"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,EAAuCC,QAAvC,QAAuD,OAAvD;AACA,SAAQC,MAAR,EAAgBC,UAAhB,EAA4BC,OAA5B,EAAqCC,MAArC,EAA6CC,MAA7C,EAAqDC,WAArD,QAAuE,mBAAvE;AACA,SAASC,QAAT,QAAyB,cAAzB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAO,cAAP;AACA,OAAOC,WAAP,MAAwB,wBAAxB;;AAEA,SAASC,MAAT,GAAkB;AACjB,QAAM;AAACC,IAAAA,UAAD;AAAaC,IAAAA,WAAb;AAA0BC,IAAAA;AAA1B,MAAkCf,UAAU,CAACW,WAAD,CAAlD;AACA,QAAM,CAACK,WAAD,EAAcC,cAAd,IAAgCf,QAAQ,CAAC,KAAD,CAA9C;AACA,QAAM,CAACgB,OAAD,EAAUC,UAAV,IAAwBjB,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAM,CAACkB,QAAD,EAAWC,WAAX,IAA0BnB,QAAQ,CAAC,KAAD,CAAxC;AAEA,QAAM,CAACoB,IAAD,EAAOC,OAAP,IAAkBrB,QAAQ,CAAC,KAAD,CAAhC;AACA,QAAM,CAACsB,cAAD,EAAiBC,iBAAjB,IAAsCvB,QAAQ,CAAC,KAAD,CAApD;;AAEA,QAAMwB,aAAa,GAAG,MAAM;AAC3BH,IAAAA,OAAO,CAAC,KAAD,CAAP;AACAE,IAAAA,iBAAiB,CAAC,KAAD,CAAjB;AACA,GAHD;;AAIA,QAAME,eAAe,GAAG,MAAM;AAC7BJ,IAAAA,OAAO,CAAC,IAAD,CAAP;AACA,GAFD;;AAIA,QAAMK,YAAY,GAAG,MAAM;AAC1BC,IAAAA,YAAY,CAACC,KAAb;AACAhB,IAAAA,WAAW,CAAC,KAAD,CAAX;AACAS,IAAAA,OAAO,CAAC,KAAD,CAAP;AACAF,IAAAA,WAAW,CAAC,IAAD,CAAX;AAEAU,IAAAA,WAAW,CAAC,MAAM;AACjBV,MAAAA,WAAW,CAAC,KAAD,CAAX;AACA,KAFU,EAER,IAFQ,CAAX;AAGA,GATD;;AAWApB,EAAAA,SAAS,CAAC,MAAM;AACf,QAAI+B,QAAQ,GAAGH,YAAY,CAACI,OAAb,CAAqB,cAArB,CAAf;;AACA,QAAGD,QAAQ,KAAK,MAAhB,EAAwB;AACvBf,MAAAA,cAAc,CAAC,IAAD,CAAd;AACAE,MAAAA,UAAU,CAACU,YAAY,CAACI,OAAb,CAAqB,MAArB,EAA6BC,KAA7B,CAAmC,GAAnC,EAAwC,CAAxC,CAAD,CAAV;AACA,KAHD,MAGO;AACNjB,MAAAA,cAAc,CAACJ,UAAD,CAAd;AACA,UAAGE,IAAI,KAAK,IAAZ,EAAkBI,UAAU,CAACJ,IAAI,CAACmB,KAAL,CAAW,GAAX,EAAgB,CAAhB,CAAD,CAAV;AAClB;AACD,GATQ,CAAT;AAWA,sBACC;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGd,QAAQ,gBAAG,oBAAC,QAAD;AAAU,IAAA,EAAE,EAAC,GAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAH,GAAyB,IADpC,eAEC,oBAAC,MAAD;AAAQ,IAAA,QAAQ,EAAC,QAAjB;AAA0B,IAAA,SAAS,EAAC,QAApC;AAA6C,IAAA,SAAS,EAAE,CAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAC,GAAT;AAAa,IAAA,SAAS,EAAC,UAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAkC;AAAK,IAAA,GAAG,EAAC,aAAT;AAAuB,IAAA,SAAS,EAAC,UAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAlC,CADD,eAEC,oBAAC,UAAD;AAAY,IAAA,QAAQ,EAAC,IAArB;AAA0B,IAAA,SAAS,EAAC,UAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAFD,eAGC;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACEJ,WAAW,KAAK,KAAhB,gBACA,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,SAAd;AAAwB,IAAA,SAAS,EAAC,OAAlC;AAA0C,IAAA,OAAO,EAAE,MAAMS,iBAAiB,CAAC,IAAD,CAA1E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADA,gBAGA,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAC,IAApB;AAAyB,IAAA,SAAS,EAAC,UAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAwDP,OAAxD,CAJF,EAOEF,WAAW,gBAAE,oBAAC,MAAD;AAAQ,IAAA,SAAS,EAAC,YAAlB;AAA+B,IAAA,OAAO,EAAEW,eAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAF,GAA4E,IAPzF,CAHD,CADD,CAFD,eAkBC,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAEL,IAAd;AAAoB,IAAA,OAAO,EAAEI,aAA7B;AAA4C,uBAAgB,mBAA5D;AACC,IAAA,UAAU,EAAE;AAAES,MAAAA,KAAK,EAAE;AAAEC,QAAAA,eAAe,EAAE,OAAnB;AAA4BC,QAAAA,KAAK,EAAE,OAAnC;AAA4CC,QAAAA,QAAQ,EAAE,KAAtD;AAA6DC,QAAAA,SAAS,EAAE;AAAxE;AAAT,KADb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEC,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wCAFD,eAGC;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC,oBAAC,MAAD;AAAQ,IAAA,SAAS,EAAC,oBAAlB;AAAuC,IAAA,OAAO,EAAEX,YAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADD,eAEC,oBAAC,MAAD;AAAQ,IAAA,SAAS,EAAC,mBAAlB;AAAsC,IAAA,OAAO,EAAEF,aAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFD,CAHD,CAlBD,eA0BC,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAEF,cAAd;AAA8B,IAAA,OAAO,EAAEE,aAAvC;AAAsD,uBAAgB,mBAAtE;AACE,IAAA,UAAU,EAAE;AAAES,MAAAA,KAAK,EAAE;AAAEC,QAAAA,eAAe,EAAE,OAAnB;AAA4BC,QAAAA,KAAK,EAAE,MAAnC;AAA2CC,QAAAA,QAAQ,EAAE;AAArD;AAAT,KADd;AAEE,IAAA,KAAK,EAAE;AAAEE,MAAAA,KAAK,EAAE;AAAT,KAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAGE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAC,IAApB;AAAyB,IAAA,SAAS,EAAC,WAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0CADD,eAEC;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAC,aAAT;AAAuB,IAAA,SAAS,EAAC,MAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,UAAhB;AAA2B,IAAA,KAAK,EAAC,SAAjC;AACC,IAAA,SAAS,EAAC,gCADX;AAEC,IAAA,OAAO,EAAE,MAAMf,iBAAiB,CAAC,KAAD,CAFjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADD,CADD,eAMC,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAC,kBAAT;AAA4B,IAAA,SAAS,EAAC,MAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,UAAhB;AAA2B,IAAA,KAAK,EAAC,WAAjC;AACC,IAAA,SAAS,EAAC,kCADX;AAEC,IAAA,OAAO,EAAE,MAAMA,iBAAiB,CAAC,KAAD,CAFjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADD,CAND,CAFD,CAHF,CA1BD,CADD;AAgDA;;AAED,eAAeb,MAAf","sourcesContent":["import React, { useContext, useEffect, useState } from \"react\";\r\nimport {AppBar, Typography, Toolbar, Button, Dialog, DialogTitle} from \"@material-ui/core\";\r\nimport { Redirect } from 'react-router';\r\nimport { Link } from 'react-router-dom';\r\nimport './Navbar.css';\r\nimport InfoContext from '../context/InfoContext';\r\n\r\nfunction Navbar() {\r\n\tconst {isLoggedIn, setLoggedIn, name} = useContext(InfoContext);\r\n\tconst [navLoggedIn, setNavLoggedIn] = useState(false);\r\n\tconst [navName, setNavName] = useState(null);\r\n\tconst [redirect, setRedirect] = useState(false);\r\n\r\n\tconst [open, setOpen] = useState(false);\r\n\tconst [loginModalOpen, setLoginModalOpen] = useState(false);\r\n\r\n\tconst onCloseHandle = () => {\r\n\t\tsetOpen(false);\r\n\t\tsetLoginModalOpen(false);\r\n\t}\r\n\tconst handleLogoutBtn = () => {\r\n\t\tsetOpen(true);\r\n\t}\r\n\r\n\tconst handleLogout = () => {\r\n\t\tlocalStorage.clear();\r\n\t\tsetLoggedIn(false);\r\n\t\tsetOpen(false);\r\n\t\tsetRedirect(true);\r\n\r\n\t\tsetInterval(() => {\r\n\t\t\tsetRedirect(false);\r\n\t\t}, 1000)\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tlet loggedin = localStorage.getItem(\"userLoggedIn\");\r\n\t\tif(loggedin === \"true\") {\r\n\t\t\tsetNavLoggedIn(true);\r\n\t\t\tsetNavName(localStorage.getItem(\"name\").split(\" \")[0]);\r\n\t\t} else {\r\n\t\t\tsetNavLoggedIn(isLoggedIn);\r\n\t\t\tif(name !== null) setNavName(name.split(\" \")[0]);\r\n\t\t}\r\n\t})\r\n\r\n\treturn (\r\n\t\t<div className=\"root\">\r\n\t\t\t{ redirect ?\t<Redirect to=\"/\" /> : null}\r\n\t\t\t<AppBar position=\"static\" className=\"navbar\" elevation={4}>\r\n\t\t\t\t<Toolbar>\r\n\t\t\t\t\t<Link to=\"/\" className=\"nav-link\"><img src=\"../quiz.png\" className=\"nav-logo\"/></Link>\r\n\t\t\t\t\t<Typography varirant=\"h6\" className=\"nav-head\">The Quizzie Platform</Typography>\r\n\t\t\t\t\t<div className=\"btn-bar\">\r\n\t\t\t\t\t\t{navLoggedIn === false?\r\n\t\t\t\t\t\t\t<Button color=\"inherit\" className=\"login\" onClick={() => setLoginModalOpen(true)}>Login</Button>\r\n\t\t\t\t\t\t\t:\r\n\t\t\t\t\t\t\t<Typography variant=\"h6\" className=\"nav-user\">Welcome, {navName}</Typography>\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t{navLoggedIn? <Button className=\"logout-btn\" onClick={handleLogoutBtn}>Logout</Button>: null}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Toolbar>\r\n\t\t\t</AppBar>\r\n\r\n\t\t\t<Dialog open={open} onClose={onCloseHandle} aria-labelledby=\"form-dialog-title\"\r\n\t\t\t\tPaperProps={{ style: { backgroundColor: 'white', color: 'black', minWidth: '10%', textAlign: 'center' } }}>\r\n\t\t\t\t<DialogTitle>Are you sure you want to logout?</DialogTitle>\r\n\t\t\t\t<div className=\"btn-div\">\r\n\t\t\t\t\t<Button className=\"logout-btn m-right\" onClick={handleLogout}>Yes</Button>\r\n\t\t\t\t\t<Button className=\"cancel-btn m-left\" onClick={onCloseHandle}>No</Button>\r\n\t\t\t\t</div>\r\n\t\t\t</Dialog>\r\n\t\t\t<Dialog open={loginModalOpen} onClose={onCloseHandle} aria-labelledby=\"form-dialog-title\"\r\n\t\t\t\t\tPaperProps={{ style: { backgroundColor: 'white', color: '#333', minWidth: '40%' } }}\r\n\t\t\t\t\tstyle={{ width: '100%' }}>\r\n\t\t\t\t\t<div className=\"modal-info\">\r\n\t\t\t\t\t\t<Typography variant=\"h5\" className=\"type-head\">Are you a student or an organizer?</Typography>\r\n\t\t\t\t\t\t<div className=\"modal-btns\">\r\n\t\t\t\t\t\t\t<Link to=\"/login/user\" className=\"link\">\r\n\t\t\t\t\t\t\t\t<Button variant=\"outlined\" color=\"primary\" \r\n\t\t\t\t\t\t\t\t\tclassName=\"modal-select-btn modal-student\" \r\n\t\t\t\t\t\t\t\t\tonClick={() => setLoginModalOpen(false)}>Student</Button>\r\n\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t\t<Link to=\"/login/organizer\" className=\"link\">\r\n\t\t\t\t\t\t\t\t<Button variant=\"outlined\" color=\"secondary\" \r\n\t\t\t\t\t\t\t\t\tclassName=\"modal-select-btn modal-organizer\" \r\n\t\t\t\t\t\t\t\t\tonClick={() => setLoginModalOpen(false)}>Organizer</Button>\r\n\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Dialog>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Navbar;"]},"metadata":{},"sourceType":"module"}