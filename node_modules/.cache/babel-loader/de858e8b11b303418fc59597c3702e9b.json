{"ast":null,"code":"var _jsxFileName = \"/home/jugaldb/Desktop/projects/IWP/src/components/HistorySection.js\";\nimport React, { useState, useEffect } from \"react\";\nimport './HistorySection.css';\nimport { GridList, GridListTile, GridListTileBar, Tooltip, IconButton, isWidthUp, withWidth, List, ListItem, ListItemText, ListItemSecondaryAction } from \"@material-ui/core\";\nimport { Check, Create, Settings, ArrowForwardIos } from \"@material-ui/icons\";\nimport axios from \"axios\";\nimport QuizLoading from \"./QuizLoading\";\nimport { Link } from \"react-router-dom\";\n\nfunction HistorySection(props) {\n  const [userType, setUserType] = useState(props.type);\n  const [profile, setProfile] = useState(props.profile);\n  const [quizzes, setQuizzes] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  const getCols = () => {\n    if (isWidthUp('md', props.width)) {\n      return 3;\n    }\n\n    return 2;\n  };\n\n  useEffect(() => {\n    setQuizzes([{\n      \"_id\": \"607041a052ab540017bc2f56\",\n      \"quizId\": \"607041a052ab540017bc2f55\",\n      \"marks\": 2\n    }, {\n      \"_id\": \"60705b05087268001723c7a0\",\n      \"quizId\": \"60705b05087268001723c79f\",\n      \"marks\": 10\n    }]);\n  }, []);\n\n  if (loading) {\n    return /*#__PURE__*/React.createElement(QuizLoading, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 4\n      }\n    });\n  } else if (userType === \"admin\") {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"history-section\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 4\n      }\n    }, quizzes.length === 0 ? /*#__PURE__*/React.createElement(\"p\", {\n      style: {\n        textAlign: 'center'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 6\n      }\n    }, \"You have not created any quizzes yet!\") : /*#__PURE__*/React.createElement(GridList, {\n      cols: getCols(),\n      className: \"grid-list\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 6\n      }\n    }, quizzes.map(quiz => /*#__PURE__*/React.createElement(GridListTile, {\n      key: quiz._id,\n      className: \"quiz-tile\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 8\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: \"../quiz.png\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(GridListTileBar, {\n      title: quiz.quizName,\n      subtitle: `By: You`,\n      actionIcon: /*#__PURE__*/React.createElement(Tooltip, {\n        title: \"Settings\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(IconButton, {\n        \"aria-label\": `edit ${quiz.quizName}`,\n        component: Link,\n        to: `/editQuiz/${quiz._id}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 12\n        }\n      }, /*#__PURE__*/React.createElement(Settings, {\n        className: \"enroll-icon\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }\n      }))),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }\n    })))));\n  } else {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"history-section\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 4\n      }\n    }, profile.quizzesGiven.length === 0 ? /*#__PURE__*/React.createElement(\"p\", {\n      style: {\n        textAlign: 'center'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 6\n      }\n    }, \"You have not given any quizzes yet!\") : /*#__PURE__*/React.createElement(List, {\n      \"aria-label\": \"quiz display\",\n      className: \"owner-quiz-list\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 8\n      }\n    }, quizzes.map(quiz => quiz.quizId !== null ? /*#__PURE__*/React.createElement(ListItem, {\n      button: true,\n      className: \"owner-quiz-item\",\n      key: quiz._id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 10\n      }\n    }, /*#__PURE__*/React.createElement(ListItemText, {\n      primary: quiz.quizId.quizName,\n      secondary: `Scored: ${quiz.marks}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 10\n      }\n    }), /*#__PURE__*/React.createElement(ListItemSecondaryAction, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 10\n      }\n    }, /*#__PURE__*/React.createElement(IconButton, {\n      edge: \"end\",\n      \"aria-label\": \"details\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(ArrowForwardIos, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 12\n      }\n    })))) : null)));\n  }\n}\n\nexport default withWidth()(HistorySection);","map":{"version":3,"sources":["/home/jugaldb/Desktop/projects/IWP/src/components/HistorySection.js"],"names":["React","useState","useEffect","GridList","GridListTile","GridListTileBar","Tooltip","IconButton","isWidthUp","withWidth","List","ListItem","ListItemText","ListItemSecondaryAction","Check","Create","Settings","ArrowForwardIos","axios","QuizLoading","Link","HistorySection","props","userType","setUserType","type","profile","setProfile","quizzes","setQuizzes","loading","setLoading","getCols","width","length","textAlign","map","quiz","_id","quizName","quizzesGiven","quizId","marks"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport './HistorySection.css';\r\nimport { GridList, GridListTile, GridListTileBar, Tooltip, IconButton, isWidthUp, withWidth, List, ListItem, ListItemText, ListItemSecondaryAction } from \"@material-ui/core\";\r\nimport { Check, Create, Settings, ArrowForwardIos } from \"@material-ui/icons\";\r\nimport axios from \"axios\";\r\nimport QuizLoading from \"./QuizLoading\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction HistorySection(props) {\r\n\tconst [userType, setUserType] = useState(props.type);\r\n\tconst [profile, setProfile] = useState(props.profile);\r\n\tconst [quizzes, setQuizzes] = useState([]);\r\n\r\n\tconst [loading, setLoading] = useState(false);\r\n\r\n\tconst getCols = () => {\r\n\t\tif (isWidthUp('md', props.width)) {\r\n\t\t\treturn 3;\r\n\t\t}\r\n\r\n\t\treturn 2;\r\n\t}\r\n\r\n\r\n\tuseEffect(()=>{\r\n\t\tsetQuizzes([\r\n\t\t\t{\r\n\t\t\t\t \"_id\":\"607041a052ab540017bc2f56\",\r\n\t\t\t\t \"quizId\":\"607041a052ab540017bc2f55\",\r\n\t\t\t\t \"marks\":2\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t \"_id\":\"60705b05087268001723c7a0\",\r\n\t\t\t\t \"quizId\":\"60705b05087268001723c79f\",\r\n\t\t\t\t \"marks\":10\r\n\t\t\t}\r\n\t ])\r\n\t},[])\r\n\tif (loading) {\r\n\t\treturn (\r\n\t\t\t<QuizLoading />\r\n\t\t)\r\n\t}\r\n\telse if (userType === \"admin\") {\r\n\t\treturn (\r\n\t\t\t<div className=\"history-section\">\r\n\t\t\t\t{quizzes.length === 0 ?\r\n\t\t\t\t\t<p style={{ textAlign: 'center' }}>You have not created any quizzes yet!</p>\r\n\t\t\t\t\t:\r\n\t\t\t\t\t<GridList cols={getCols()} className=\"grid-list\">\r\n\t\t\t\t\t\t{quizzes.map((quiz) => (\r\n\t\t\t\t\t\t\t<GridListTile key={quiz._id} className=\"quiz-tile\">\r\n\t\t\t\t\t\t\t\t<img src=\"../quiz.png\" />\r\n\t\t\t\t\t\t\t\t<GridListTileBar\r\n\t\t\t\t\t\t\t\t\ttitle={quiz.quizName}\r\n\t\t\t\t\t\t\t\t\tsubtitle={`By: You`}\r\n\t\t\t\t\t\t\t\t\tactionIcon={\r\n\t\t\t\t\t\t\t\t\t\t<Tooltip title=\"Settings\">\r\n\t\t\t\t\t\t\t\t\t\t\t<IconButton aria-label={`edit ${quiz.quizName}`}\r\n\t\t\t\t\t\t\t\t\t\t\t\tcomponent={Link} to={`/editQuiz/${quiz._id}`}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Settings className=\"enroll-icon\" />\r\n\t\t\t\t\t\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</GridListTile>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</GridList>\r\n\t\t\t\t}\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n\telse {\r\n\t\treturn (\r\n\t\t\t<div className=\"history-section\">\r\n\t\t\t\t{profile.quizzesGiven.length === 0 ?\r\n\t\t\t\t\t<p style={{ textAlign: 'center' }}>You have not given any quizzes yet!</p>\r\n\t\t\t\t\t: <List aria-label=\"quiz display\" className=\"owner-quiz-list\">\r\n\t\t\t\t\t\t{quizzes.map(quiz => (\r\n\t\t\t\t\t\t\tquiz.quizId !== null?\r\n\t\t\t\t\t\t\t\t(<ListItem button className=\"owner-quiz-item\" key={quiz._id}>\r\n\t\t\t\t\t\t\t\t\t<ListItemText primary={quiz.quizId.quizName} secondary={`Scored: ${quiz.marks}`} />\r\n\t\t\t\t\t\t\t\t\t<ListItemSecondaryAction>\r\n\t\t\t\t\t\t\t\t\t\t<IconButton edge=\"end\" aria-label=\"details\" >\r\n\t\t\t\t\t\t\t\t\t\t\t<ArrowForwardIos />\r\n\t\t\t\t\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t\t\t\t\t</ListItemSecondaryAction>\r\n\t\t\t\t\t\t\t\t</ListItem>): null\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</List>}\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default withWidth()(HistorySection);"]},"metadata":{},"sourceType":"module"}