{"ast":null,"code":"var _jsxFileName = \"/home/jugaldb/Desktop/projects/IWP/src/pages/StudentResponses.js\";\n\n/* Copy of Results.js */\nimport React, { useState } from \"react\";\nimport \"./ResultPage.css\";\nimport { Container, Typography, ExpansionPanel, ExpansionPanelSummary, ExpansionPanelDetails, List, ListItemIcon, ListItemText, ListItem, IconButton } from \"@material-ui/core\";\nimport axios from \"axios\";\nimport Loading from \"./Loading\";\nimport { Adjust, ExpandMore, Check, Close, Warning, ArrowBackIos, ArrowBack } from \"@material-ui/icons\";\nimport { Redirect } from \"react-router\";\n\nfunction StudentResponses(props) {\n  const [loading, setLoading] = useState(true);\n  const [name, setName] = useState(\"\");\n  const [marks, setMarks] = useState(null);\n  const [responses, setResponses] = useState([]);\n  const [redirect, setRedirect] = useState(false);\n  let state = null;\n\n  const resIcon = response => {\n    if (response.selected === response.correctAnswer) {\n      return /*#__PURE__*/React.createElement(Check, {\n        style: {\n          color: 'green',\n          marginLeft: '3px'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 11\n        }\n      });\n    } else if (response.selected === null) {\n      return /*#__PURE__*/React.createElement(Warning, {\n        style: {\n          color: 'goldenrod',\n          marginLeft: '3px'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }\n      });\n    } else {\n      return /*#__PURE__*/React.createElement(Close, {\n        style: {\n          color: 'red',\n          marginLeft: '3px'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }\n      });\n    }\n  };\n\n  const setup = () => {\n    setName(state.userId.name);\n    setMarks(state.marks);\n    setResponses(state.responses);\n    setLoading(false);\n  };\n\n  useState(() => {\n    if (props.location.state === undefined) {\n      setLoading(false);\n      setRedirect(true);\n      return;\n    }\n\n    state = props.location.state.response;\n    setup();\n  }, []);\n\n  if (loading) {\n    return /*#__PURE__*/React.createElement(Loading, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 10\n      }\n    });\n  } else if (redirect) {\n    return /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/dashboard\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 10\n      }\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(Container, {\n    className: \"result-page\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"result-head\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h4\",\n    className: \"result-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 5\n    }\n  }, \"Results\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"result-quiz-info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"profile-param\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 30\n    }\n  }, \"Quiz:\"), \" \", /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 75\n    }\n  }, name)), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"profile-param\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 30\n    }\n  }, \"Scored:\"), \" \", /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 77\n    }\n  }, marks), \" out of \", /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 109\n    }\n  }, responses.length))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"result-responses\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"result-response-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 6\n    }\n  }, \"Responses\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"result-responses-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 5\n    }\n  }, responses.map(response => /*#__PURE__*/React.createElement(ExpansionPanel, {\n    elevation: 3,\n    className: \"expansion\",\n    key: response.quesId,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ExpansionPanelSummary, {\n    className: \"question-response\",\n    expandIcon: /*#__PURE__*/React.createElement(ExpandMore, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 21\n      }\n    }),\n    \"aria-controls\": \"question-content\",\n    \"aria-label\": \"Expand\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 8\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: \"question-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  }, response.description, \" \", resIcon(response))), /*#__PURE__*/React.createElement(ExpansionPanelDetails, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 8\n    }\n  }, /*#__PURE__*/React.createElement(List, {\n    component: \"nav\",\n    className: \"options-display\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }\n  }, response.options.map(option => /*#__PURE__*/React.createElement(ListItem, {\n    button: true,\n    key: option._id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(ListItemIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(Adjust, {\n    style: {\n      color: response.correctAnswer === option.text ? 'green' : response.selected === option.text ? 'red' : 'black'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 26\n    }\n  })), /*#__PURE__*/React.createElement(ListItemText, {\n    style: {\n      color: response.correctAnswer === option.text ? 'green' : response.selected === option.text ? 'red' : 'black'\n    },\n    primary: option.text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 12\n    }\n  }))))))))));\n}\n\nexport default StudentResponses;","map":{"version":3,"sources":["/home/jugaldb/Desktop/projects/IWP/src/pages/StudentResponses.js"],"names":["React","useState","Container","Typography","ExpansionPanel","ExpansionPanelSummary","ExpansionPanelDetails","List","ListItemIcon","ListItemText","ListItem","IconButton","axios","Loading","Adjust","ExpandMore","Check","Close","Warning","ArrowBackIos","ArrowBack","Redirect","StudentResponses","props","loading","setLoading","name","setName","marks","setMarks","responses","setResponses","redirect","setRedirect","state","resIcon","response","selected","correctAnswer","color","marginLeft","setup","userId","location","undefined","length","map","quesId","description","options","option","_id","text"],"mappings":"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","sourcesContent":["/* Copy of Results.js */\r\nimport React, { useState } from \"react\";\r\nimport \"./ResultPage.css\";\r\nimport { Container, Typography, ExpansionPanel, ExpansionPanelSummary, ExpansionPanelDetails, List, ListItemIcon, ListItemText, ListItem, IconButton } from \"@material-ui/core\";\r\nimport axios from \"axios\";\r\nimport Loading from \"./Loading\";\r\nimport { Adjust, ExpandMore, Check, Close, Warning, ArrowBackIos, ArrowBack } from \"@material-ui/icons\";\r\nimport { Redirect } from \"react-router\";\r\n\r\nfunction StudentResponses(props) {\r\n\tconst [loading, setLoading] = useState(true);\r\n\r\n\tconst [name, setName] = useState(\"\");\r\n\tconst [marks, setMarks] = useState(null);\r\n\tconst [responses, setResponses] = useState([]);\r\n\t\r\n\tconst [redirect, setRedirect] = useState(false);\r\n\r\n\tlet state = null;\r\n\r\n\tconst resIcon = (response) => {\r\n\t\tif(response.selected === response.correctAnswer) {\r\n\t\t\treturn <Check style={{color: 'green', marginLeft: '3px'}} />\r\n\t\t} else if(response.selected === null) {\r\n\t\t\treturn <Warning style={{color: 'goldenrod', marginLeft: '3px'}} />\r\n\t\t} \r\n\t\telse {\r\n\t\t\treturn <Close style={{color: 'red', marginLeft: '3px'}} />\r\n\t\t}\r\n\t}\r\n\r\n\tconst setup = () => {\r\n\t\tsetName(state.userId.name);\r\n\t\tsetMarks(state.marks);\r\n\t\tsetResponses(state.responses);\r\n\t\tsetLoading(false);\r\n\t}\r\n\r\n\t\r\n\tuseState(() => {\r\n\t\tif(props.location.state === undefined) {\r\n\t\t\tsetLoading(false);\r\n\t\t\tsetRedirect(true);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tstate = props.location.state.response;\r\n\t\tsetup();\r\n\t}, [])\r\n\r\n\tif (loading) {\r\n\t\treturn <Loading />\r\n\t} else if(redirect) {\r\n\t\treturn <Redirect to=\"/dashboard\" />\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Container className=\"result-page\">\r\n\t\t\t<div className=\"result-head\">\r\n\t\t\t\t<Typography variant=\"h4\" className=\"result-title\">Results</Typography>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"result-quiz-info\">\r\n\t\t\t\t<Typography variant=\"h5\"><span className=\"profile-param\">Quiz:</span> <strong>{name}</strong></Typography>\r\n\t\t\t\t<Typography variant=\"h5\"><span className=\"profile-param\">Scored:</span> <strong>{marks}</strong> out of <strong>{responses.length}</strong></Typography>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"result-responses\">\r\n\t\t\t\t<div className=\"result-response-title\">\r\n\t\t\t\t\t<Typography variant=\"h5\">Responses</Typography>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"result-responses-list\">\r\n\t\t\t\t\t{responses.map((response) => (\r\n\t\t\t\t\t\t<ExpansionPanel elevation={3} className=\"expansion\" key={response.quesId}>\r\n\t\t\t\t\t\t\t<ExpansionPanelSummary\r\n\t\t\t\t\t\t\t\tclassName=\"question-response\"\r\n\t\t\t\t\t\t\t\texpandIcon={<ExpandMore />}\r\n\t\t\t\t\t\t\t\taria-controls=\"question-content\"\r\n\t\t\t\t\t\t\t\taria-label=\"Expand\"\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<Typography className=\"question-label\">{response.description} {resIcon(response)}</Typography>\r\n\t\t\t\t\t\t\t</ExpansionPanelSummary>\r\n\t\t\t\t\t\t\t<ExpansionPanelDetails>\r\n\t\t\t\t\t\t\t\t<List component=\"nav\" className=\"options-display\">\r\n\t\t\t\t\t\t\t\t\t{response.options.map((option) => (\r\n\t\t\t\t\t\t\t\t\t\t<ListItem button key={option._id}>\r\n\t\t\t\t\t\t\t\t\t\t\t<ListItemIcon><Adjust style={{ color: response.correctAnswer === option.text ? 'green' : (response.selected === option.text? 'red': 'black') }} /></ListItemIcon>\r\n\t\t\t\t\t\t\t\t\t\t\t<ListItemText style={{ color: response.correctAnswer === option.text ? 'green' : (response.selected === option.text? 'red': 'black') }} primary={option.text} />\r\n\t\t\t\t\t\t\t\t\t\t</ListItem>\r\n\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t</List>\r\n\t\t\t\t\t\t\t</ExpansionPanelDetails>\r\n\t\t\t\t\t\t</ExpansionPanel>\r\n\t\t\t\t\t))}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</Container>\r\n\t)\r\n}\r\n\r\nexport default StudentResponses;"]},"metadata":{},"sourceType":"module"}