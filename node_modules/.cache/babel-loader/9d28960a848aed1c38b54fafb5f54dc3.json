{"ast":null,"code":"var _jsxFileName = \"/home/jugaldb/Desktop/projects/IWP/src/pages/EditQuiz.js\";\nimport React, { useEffect, useState } from \"react\";\nimport \"./EditQuiz.css\";\nimport { Container, Typography, Button, Dialog, Grid, InputLabel, Select, MenuItem, ExpansionPanel, ExpansionPanelSummary, ExpansionPanelDetails, List, ListItem, ListItemText, ListItemIcon, FormControlLabel, IconButton, DialogTitle, Input, TextField, Divider, Popover, Snackbar } from \"@material-ui/core\";\nimport { Create, ExpandMore, Adjust, Delete, BarChart, Replay, AddCircle, Info } from \"@material-ui/icons\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport axios from \"axios\";\nimport Loading from \"./Loading\";\nimport TextInput from \"../components/TextInput\";\nimport Dropzone from \"react-dropzone\";\nimport csv from \"csv\";\nimport { Alert } from \"@material-ui/lab\";\nimport { useGoogleReCaptcha } from \"react-google-recaptcha-v3\";\n\nfunction EditQuiz(props) {\n  const quizId = props.match.params.id;\n  const [loading, setLoading] = useState(true);\n  const [redirect, setRedirect] = useState(false);\n  const [quizDetails, setQuizDetails] = useState({});\n  const [quizQuestions, setQuizQuestions] = useState([]);\n  const [fileError, setFileError] = useState(false);\n  const [serverError, setServerError] = useState(false);\n  const [popoverAnchor, setPopoverAnchor] = useState(null);\n  const popoverOpen = Boolean(popoverAnchor);\n  const [questionModal, setQuestionModal] = useState(false);\n  const [newQuestion, setNewQuestion] = useState(\"\");\n  const [newQuestionError, setNewQuestionError] = useState(false);\n  const [option1, setOption1] = useState(\"\");\n  const [option1Error, setOption1Error] = useState(false);\n  const [option2, setOption2] = useState(\"\");\n  const [option2Error, setOption2Error] = useState(false);\n  const [option3, setOption3] = useState(\"\");\n  const [option3Error, setOption3Error] = useState(false);\n  const [option4, setOption4] = useState(\"\");\n  const [option4Error, setOption4Error] = useState(false);\n  const [correctOption, setCorrectOption] = useState(-1);\n  const [correctOptionError, setCorrectOptionError] = useState(false);\n  const [update, setUpdate] = useState(false);\n  const [updateId, setUpdateId] = useState(null);\n  const [deleteModal, setDeleteModal] = useState(false);\n  const [deleteQuestionModal, setDeleteQuestionModal] = useState(false);\n  const [quizRestartModal, setQuizRestartModal] = useState(false);\n  const [closeQuizModal, setCloseQuizModal] = useState(false);\n  const [responses, setResponses] = useState([]);\n  const [searchData, setSearchData] = useState(responses);\n  const [searchText, setSearchText] = useState(\"\");\n  const [sortBy, setSortBy] = useState(-1);\n  const {\n    executeRecaptcha\n  } = useGoogleReCaptcha();\n\n  const onCloseHandle = () => {\n    setQuestionModal(false);\n\n    if (update) {\n      setUpdate(false);\n      setUpdateId(null);\n      clearModal();\n    }\n  };\n\n  const handlePopover = event => {\n    setPopoverAnchor(event.currentTarget);\n  };\n\n  const handlePopoverClose = () => {\n    setPopoverAnchor(null);\n  };\n\n  const onQuestionChange = event => {\n    setNewQuestion(event.target.value);\n  };\n\n  const handleOptionChange1 = event => {\n    setOption1(event.target.value);\n  };\n\n  const handleOptionChange2 = event => {\n    setOption2(event.target.value);\n  };\n\n  const handleOptionChange3 = event => {\n    setOption3(event.target.value);\n  };\n\n  const handleOptionChange4 = event => {\n    setOption4(event.target.value);\n  };\n\n  const handleCorrectOption = event => {\n    setCorrectOption(event.target.value);\n  };\n\n  const clearModal = () => {\n    setNewQuestion(\"\");\n    setNewQuestionError(false);\n    setOption1(\"\");\n    setOption1Error(false);\n    setOption2(\"\");\n    setOption2Error(false);\n    setOption3(\"\");\n    setOption3Error(false);\n    setOption4(\"\");\n    setOption4Error(false);\n    setCorrectOption(-1);\n    setCorrectOptionError(false);\n  };\n\n  const handleFileDrop = files => {\n    const reader = new FileReader();\n    let questions = [];\n\n    reader.onabort = () => {\n      setFileError(true);\n      return;\n    };\n\n    reader.onerror = () => {\n      setFileError(true);\n      return;\n    };\n\n    reader.onload = () => {\n      csv.parse(reader.result, (err, data) => {\n        if (data === undefined) {\n          setFileError(true);\n          return;\n        }\n\n        data.map(question => {\n          if (question[0].trim() === \"\") {\n            return null;\n          }\n\n          let obj = {\n            quizId: quizId,\n            description: question[0],\n            options: [{\n              text: question[1]\n            }, {\n              text: question[2]\n            }, {\n              text: question[3]\n            }, {\n              text: question[4]\n            }],\n            correctAnswer: question[5]\n          };\n          questions.push(obj);\n        });\n        submitCSV(questions);\n      });\n    };\n\n    reader.readAsBinaryString(files[0]);\n  };\n\n  const submitCSV = async questions => {\n    setLoading(true);\n    let token = localStorage.getItem(\"authToken\");\n    let url = \"https://quizzie-api.herokuapp.com/question/csv\";\n    let captcha = await executeRecaptcha(\"submit_csv\");\n    let data = {\n      questions: questions,\n      captcha: captcha\n    };\n\n    try {\n      await axios.post(url, data, {\n        headers: {\n          \"auth-token\": token\n        }\n      }).then(res => {\n        console.log(res);\n        setLoading(false);\n        clearModal();\n        onCloseHandle();\n        getQuizDetails();\n      });\n    } catch (error) {\n      setServerError(true);\n      console.log(error);\n    }\n  };\n\n  const handleSearchChange = event => {\n    setSearchText(event.target.value);\n    let newRes = responses.filter(response => response.userId.name.toLowerCase().search(event.target.value.trim().toLowerCase()) !== -1 || String(response.marks) === event.target.value.trim().toLowerCase());\n    let sorted = sortByFunc(sortBy, newRes);\n    setSearchData(sorted);\n  };\n\n  const handleSortChange = event => {\n    setSortBy(event.target.value);\n    let newRes = sortByFunc(event.target.value, searchData);\n    setSearchData(newRes);\n  };\n\n  const sortByFunc = (by, array) => {\n    if (by === \"score\") {\n      return array.sort(function (a, b) {\n        return b.marks - a.marks;\n      });\n    } else if (by === \"name\") {\n      return array.sort(function (a, b) {\n        return a.userId.name - b.userId.name;\n      });\n    } else if (by === \"recent\") {\n      return array.sort(function (a, b) {\n        return b.timeEnded - a.timeEnded;\n      });\n    } else {\n      return array;\n    }\n  };\n\n  const handleRestart = async () => {\n    let token = localStorage.getItem(\"authToken\");\n    let url = `https://quizzie-api.herokuapp.com/quiz/restart`;\n    let captcha = await executeRecaptcha(\"restart_quiz\");\n    let data = {\n      quizId: quizId,\n      captcha: captcha\n    };\n\n    try {\n      await axios.patch(url, data, {\n        headers: {\n          \"auth-token\": token\n        }\n      }).then(res => {\n        setQuizRestartModal(false);\n        getQuizDetails();\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleQuizClose = async () => {\n    let token = localStorage.getItem(\"authToken\");\n    let url = `https://quizzie-api.herokuapp.com/quiz/close`;\n    let captcha = await executeRecaptcha(\"quiz_close\");\n    let data = {\n      quizId: quizId,\n      captcha: captcha\n    };\n\n    try {\n      await axios.patch(url, data, {\n        headers: {\n          \"auth-token\": token\n        }\n      }).then(res => {\n        setCloseQuizModal(false);\n        getQuizDetails();\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleQuestionEditBtn = question => {\n    setUpdate(true);\n    setUpdateId(question._id);\n    setNewQuestion(question.description);\n    setOption1(question.options[0].text);\n    setOption2(question.options[1].text);\n    setOption3(question.options[2].text);\n    setOption4(question.options[3].text);\n    setCorrectOption(question.correctAnswer);\n    setQuestionModal(true);\n  };\n\n  const handleQuestionDeleteBtn = question => {\n    setUpdateId(question._id);\n    setDeleteQuestionModal(true);\n  };\n\n  const handleQuestionModalClose = () => {\n    setUpdateId(null);\n    setDeleteQuestionModal(false);\n  };\n\n  const handleDeleteBtn = () => {\n    setDeleteModal(true);\n  };\n\n  const handleDeleteQuestion = async () => {\n    let token = localStorage.getItem(\"authToken\");\n    let url = `https://quizzie-api.herokuapp.com/question/${updateId}`; // let captcha = executeRecaptcha(\"delete_quiz\");\n\n    try {\n      await axios.delete(url, {\n        headers: {\n          \"auth-token\": token\n        }\n      }).then(res => {\n        setUpdateId(null);\n        setDeleteQuestionModal(false);\n        getQuizDetails();\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleDelete = async () => {\n    let token = localStorage.getItem(\"authToken\");\n    let url = `https://quizzie-api.herokuapp.com/quiz/delete`;\n    let data = {\n      quizId: quizId\n    };\n\n    try {\n      await axios.delete(url, {\n        headers: {\n          \"auth-token\": token\n        },\n        data: data\n      }).then(res => {\n        setRedirect(true);\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleQuestionUpdate = async () => {\n    if (!validate()) return;\n    let token = localStorage.getItem(\"authToken\");\n    let url = `https://quizzie-api.herokuapp.com/question/update/${updateId}`;\n    let captcha = await executeRecaptcha(\"question_update\");\n    let updateOps = [{\n      propName: \"description\",\n      value: newQuestion\n    }, {\n      propName: \"options\",\n      value: [{\n        text: option1\n      }, {\n        text: option2\n      }, {\n        text: option3\n      }, {\n        text: option4\n      }]\n    }, {\n      propName: \"correctAnswer\",\n      value: correctOption\n    }];\n    let data = {\n      updateOps: updateOps,\n      captcha: captcha\n    };\n\n    try {\n      await axios.patch(url, data, {\n        headers: {\n          \"auth-token\": token\n        }\n      }).then(res => {\n        onCloseHandle();\n        getQuizDetails();\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const validate = () => {\n    if (newQuestion.trim().length === 0) {\n      setNewQuestionError(true);\n      return false;\n    }\n\n    if (option1.trim().length === 0) {\n      setOption1Error(true);\n      return false;\n    }\n\n    if (option2.trim().length === 0) {\n      setOption2Error(true);\n      return false;\n    }\n\n    if (option3.trim().length === 0) {\n      setOption3Error(true);\n      return false;\n    }\n\n    if (option4.trim().length === 0) {\n      setOption4Error(true);\n      return false;\n    }\n\n    if (correctOption === -1) {\n      setCorrectOptionError(true);\n      return false;\n    }\n\n    return true;\n  };\n\n  const handleQuestionSubmit = async () => {\n    //TODO: Handle Validation\n    if (!validate()) return;\n    let token = localStorage.getItem(\"authToken\");\n    let url = `https://quizzie-api.herokuapp.com/question/add`;\n    let captcha = await executeRecaptcha(\"submit_question\");\n    let options = [{\n      text: option1\n    }, {\n      text: option2\n    }, {\n      text: option3\n    }, {\n      text: option4\n    }];\n    let data = {\n      quizId: quizId,\n      description: newQuestion,\n      options: options,\n      correctAnswer: correctOption,\n      captcha: captcha\n    };\n\n    try {\n      await axios.post(url, data, {\n        headers: {\n          \"auth-token\": token\n        }\n      }).then(res => {\n        clearModal();\n        getQuizDetails();\n        setQuestionModal(false);\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const isOwnerOfQuiz = async () => {\n    let token = localStorage.getItem(\"authToken\");\n    let url = `https://quizzie-api.herokuapp.com/quiz/checkAdmin/${quizId}`;\n\n    try {\n      await axios.get(url, {\n        headers: {\n          \"auth-token\": token\n        }\n      }).then(res => {\n        return true;\n      });\n    } catch (error) {\n      setRedirect(true);\n      return;\n    }\n  };\n\n  const getQuizDetails = async () => {\n    setLoading(true);\n    let token = localStorage.getItem(\"authToken\");\n    let url = `https://quizzie-api.herokuapp.com/quiz/${quizId}`;\n\n    try {\n      await axios.get(url, {\n        headers: {\n          \"auth-token\": token\n        }\n      }).then(res => {\n        setQuizDetails(res.data.result);\n      });\n    } catch (error) {\n      console.log(error);\n    }\n\n    url = `https://quizzie-api.herokuapp.com/question/all/${quizId}`;\n\n    try {\n      await axios.get(url, {\n        headers: {\n          \"auth-token\": token\n        }\n      }).then(res => {\n        setQuizQuestions(res.data.result);\n      });\n    } catch (error) {\n      console.log(error);\n    }\n\n    url = `https://quizzie-api.herokuapp.com/admin/allStudentsQuizResult/${quizId}`;\n\n    try {\n      await axios.get(url, {\n        headers: {\n          \"auth-token\": token\n        }\n      }).then(res => {\n        setResponses(res.data.userResults);\n        setSearchData(res.data.userResults);\n        setLoading(false);\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    let token = localStorage.getItem(\"authToken\");\n\n    if (token === null) {\n      setLoading(false);\n      setRedirect(true);\n      return;\n    }\n\n    isOwnerOfQuiz();\n    getQuizDetails();\n  }, []);\n\n  if (loading) {\n    return /*#__PURE__*/React.createElement(Loading, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 603,\n        columnNumber: 10\n      }\n    });\n  } else if (redirect) {\n    return /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/dashboard\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 605,\n        columnNumber: 10\n      }\n    });\n  } else {\n    return /*#__PURE__*/React.createElement(Container, {\n      className: \"edit-quiz-page\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 608,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      variant: \"h3\",\n      className: \"dash-head p-top edit-quiz-head\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 609,\n        columnNumber: 5\n      }\n    }, \"Edit Quiz\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"edit-btn-bar\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 615,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      className: \"edit-details-btn\",\n      component: Link,\n      to: `/updateQuizDetails/${quizId}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 616,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(Create, {\n      className: \"edit-icon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 621,\n        columnNumber: 7\n      }\n    }), \"Edit Details\"), /*#__PURE__*/React.createElement(Button, {\n      className: \"edit-details-btn delete-btn\",\n      onClick: handleDeleteBtn,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 624,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(Delete, {\n      className: \"edit-icon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 628,\n        columnNumber: 7\n      }\n    }), \"Delete Quiz\"), quizDetails.quizStatus === 1 ? /*#__PURE__*/React.createElement(Button, {\n      className: \"edit-details-btn\",\n      style: {\n        marginLeft: \"3%\"\n      },\n      onClick: () => setCloseQuizModal(true),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 632,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Replay, {\n      className: \"edit-quiz\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 637,\n        columnNumber: 8\n      }\n    }), \"Close Quiz\") : quizDetails.quizStatus === 2 ? /*#__PURE__*/React.createElement(Button, {\n      className: \"edit-details-btn\",\n      style: {\n        marginLeft: \"3%\"\n      },\n      onClick: () => setQuizRestartModal(true),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 641,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Replay, {\n      className: \"edit-quiz\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 646,\n        columnNumber: 8\n      }\n    }), \"Restart Quiz\") : null), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"quiz-details-sec\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 651,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      variant: \"h6\",\n      className: \"quiz-detail-param\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 652,\n        columnNumber: 6\n      }\n    }, \"Name:\", \" \", /*#__PURE__*/React.createElement(\"span\", {\n      className: \"quiz-detail-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 654,\n        columnNumber: 7\n      }\n    }, quizDetails.quizName)), /*#__PURE__*/React.createElement(Typography, {\n      variant: \"h6\",\n      className: \"quiz-detail-param\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 658,\n        columnNumber: 6\n      }\n    }, \"Date:\", \" \", /*#__PURE__*/React.createElement(\"span\", {\n      className: \"quiz-detail-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 660,\n        columnNumber: 7\n      }\n    }, new Date(Number(quizDetails.scheduledFor)).toDateString())), /*#__PURE__*/React.createElement(Typography, {\n      variant: \"h6\",\n      className: \"quiz-detail-param\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 666,\n        columnNumber: 6\n      }\n    }, \"Time:\", \" \", /*#__PURE__*/React.createElement(\"span\", {\n      className: \"quiz-detail-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 668,\n        columnNumber: 7\n      }\n    }, new Date(Number(quizDetails.scheduledFor)).toLocaleTimeString())), /*#__PURE__*/React.createElement(Typography, {\n      variant: \"h6\",\n      className: \"quiz-detail-param\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 674,\n        columnNumber: 6\n      }\n    }, \"Duration:\", \" \", /*#__PURE__*/React.createElement(\"span\", {\n      className: \"quiz-detail-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 676,\n        columnNumber: 7\n      }\n    }, quizDetails.quizDuration, \" minutes\")), /*#__PURE__*/React.createElement(Typography, {\n      variant: \"h6\",\n      className: \"quiz-detail-param\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 680,\n        columnNumber: 6\n      }\n    }, \"Type:\", \" \", /*#__PURE__*/React.createElement(\"span\", {\n      className: \"quiz-detail-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 682,\n        columnNumber: 7\n      }\n    }, quizDetails.quizType)), quizDetails.quizType === \"private\" ? /*#__PURE__*/React.createElement(Typography, {\n      variant: \"h6\",\n      className: \"quiz-detail-param\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 687,\n        columnNumber: 7\n      }\n    }, \"Quiz Code:\", \" \", /*#__PURE__*/React.createElement(\"span\", {\n      className: \"quiz-detail-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 689,\n        columnNumber: 8\n      }\n    }, quizDetails.quizCode)) : null), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"quiz-questions-sec\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 695,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      variant: \"h4\",\n      className: \"quiz-questions-head\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 696,\n        columnNumber: 6\n      }\n    }, \"Questions\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"quiz-questions-display\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 699,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"add-question-bar\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 700,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      className: \"add-question-btn\",\n      onClick: () => setQuestionModal(true),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 701,\n        columnNumber: 8\n      }\n    }, \"Add a question\")), quizQuestions.length === 0 ? /*#__PURE__*/React.createElement(\"p\", {\n      style: {\n        textAlign: \"center\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 709,\n        columnNumber: 8\n      }\n    }, \"No questions added yet!\") : /*#__PURE__*/React.createElement(\"div\", {\n      className: \"questions-list-display\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 713,\n        columnNumber: 8\n      }\n    }, quizQuestions.map(question => /*#__PURE__*/React.createElement(ExpansionPanel, {\n      elevation: 3,\n      className: \"expansion\",\n      key: question._id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 715,\n        columnNumber: 10\n      }\n    }, /*#__PURE__*/React.createElement(ExpansionPanelSummary, {\n      className: \"question-summary\",\n      expandIcon: /*#__PURE__*/React.createElement(ExpandMore, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 722,\n          columnNumber: 24\n        }\n      }),\n      \"aria-controls\": \"question-content\",\n      \"aria-label\": \"Expand\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 720,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(FormControlLabel, {\n      style: {\n        marginRight: \"0\"\n      },\n      \"aria-label\": \"Edit\",\n      control: /*#__PURE__*/React.createElement(IconButton, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 730,\n          columnNumber: 14\n        }\n      }, /*#__PURE__*/React.createElement(Create, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 731,\n          columnNumber: 15\n        }\n      })) // label={question.description}\n      ,\n      onClick: () => handleQuestionEditBtn(question),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 726,\n        columnNumber: 12\n      }\n    }), /*#__PURE__*/React.createElement(FormControlLabel, {\n      \"aria-label\": \"Edit\",\n      control: /*#__PURE__*/React.createElement(IconButton, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 744,\n          columnNumber: 14\n        }\n      }, /*#__PURE__*/React.createElement(Delete, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 745,\n          columnNumber: 15\n        }\n      })) // label={question.description}\n      ,\n      onClick: () => handleQuestionDeleteBtn(question),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 741,\n        columnNumber: 12\n      }\n    }), /*#__PURE__*/React.createElement(Typography, {\n      className: \"question-label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 755,\n        columnNumber: 12\n      }\n    }, question.description)), /*#__PURE__*/React.createElement(ExpansionPanelDetails, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 759,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(List, {\n      component: \"nav\",\n      className: \"options-display\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 760,\n        columnNumber: 12\n      }\n    }, question.options.map(option => /*#__PURE__*/React.createElement(ListItem, {\n      button: true,\n      key: option._id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 766,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(ListItemIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 770,\n        columnNumber: 16\n      }\n    }, /*#__PURE__*/React.createElement(Adjust, {\n      style: {\n        color: question.correctAnswer === option.text ? \"green\" : \"black\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 771,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(ListItemText, {\n      style: {\n        color: question.correctAnswer === option.text ? \"green\" : \"black\"\n      },\n      primary: option.text,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 781,\n        columnNumber: 16\n      }\n    }))))))))), /*#__PURE__*/React.createElement(Typography, {\n      variant: \"h4\",\n      className: \"quiz-questions-head m-top\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 803,\n        columnNumber: 6\n      }\n    }, \"Submissions\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"quiz-students-list\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 809,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"add-question-bar\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 810,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      className: \"add-question-btn stats-btn\",\n      component: responses.length !== 0 ? Link : Button,\n      to: {\n        pathname: \"/quizStats\",\n        state: {\n          responses: responses\n        }\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 811,\n        columnNumber: 8\n      }\n    }, /*#__PURE__*/React.createElement(BarChart, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 821,\n        columnNumber: 9\n      }\n    }), \"View Stats\")), responses.length === 0 ? /*#__PURE__*/React.createElement(\"p\", {\n      style: {\n        textAlign: \"center\",\n        margin: \"0\",\n        paddingTop: \"3%\",\n        paddingBottom: \"3%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 826,\n        columnNumber: 8\n      }\n    }, \"No responses yet!\") : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"search-bar\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 838,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      placeholder: \"Search by name or score\",\n      type: \"text\",\n      onChange: handleSearchChange,\n      className: \"search-input\",\n      value: searchText,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 839,\n        columnNumber: 10\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        marginLeft: \"3%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 846,\n        columnNumber: 10\n      }\n    }, /*#__PURE__*/React.createElement(InputLabel, {\n      id: \"sort-by\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 847,\n        columnNumber: 11\n      }\n    }, \"Sort by\"), /*#__PURE__*/React.createElement(Select, {\n      labelId: \"sort-by\",\n      id: \"sort-select\",\n      value: sortBy,\n      onChange: handleSortChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 850,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(MenuItem, {\n      value: -1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 856,\n        columnNumber: 12\n      }\n    }, /*#__PURE__*/React.createElement(\"em\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 857,\n        columnNumber: 13\n      }\n    }, \"None\")), /*#__PURE__*/React.createElement(MenuItem, {\n      value: \"recent\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 859,\n        columnNumber: 12\n      }\n    }, \"Recent\"), /*#__PURE__*/React.createElement(MenuItem, {\n      value: \"score\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 862,\n        columnNumber: 12\n      }\n    }, \"Score\"), /*#__PURE__*/React.createElement(MenuItem, {\n      value: \"name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 865,\n        columnNumber: 12\n      }\n    }, \"Name\")))), /*#__PURE__*/React.createElement(List, {\n      \"aria-label\": \"responses list\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 871,\n        columnNumber: 9\n      }\n    }, searchData.map(response => /*#__PURE__*/React.createElement(ListItem, {\n      button: true,\n      key: response._id,\n      component: Link,\n      to: {\n        pathname: `/studentResponse`,\n        state: {\n          response: response\n        }\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 873,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(ListItemText, {\n      primary: response.userId.name,\n      secondary: `Scored: ${response.marks}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 882,\n        columnNumber: 12\n      }\n    }))))))), /*#__PURE__*/React.createElement(Dialog, {\n      open: questionModal,\n      onClose: onCloseHandle,\n      \"aria-labelledby\": \"add-question-modal\",\n      PaperProps: {\n        style: {\n          backgroundColor: \"white\",\n          color: \"#333\",\n          minWidth: \"50%\"\n        }\n      },\n      style: {\n        width: \"100%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 893,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"add-ques-heading\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 906,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      variant: \"h6\",\n      style: {\n        textAlign: \"center\",\n        margin: \"2% 5%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 907,\n        columnNumber: 7\n      }\n    }, \"New Question\", \" \"), !update ? /*#__PURE__*/React.createElement(IconButton, {\n      onClick: handlePopover,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 914,\n        columnNumber: 8\n      }\n    }, /*#__PURE__*/React.createElement(Info, {\n      className: \"add-info-icon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 915,\n        columnNumber: 9\n      }\n    })) : null, /*#__PURE__*/React.createElement(Popover, {\n      id: \"file-upload-popover\",\n      open: popoverOpen,\n      anchorEl: popoverAnchor,\n      onClose: handlePopoverClose,\n      anchorOrigin: {\n        vertical: \"bottom\",\n        horizontal: \"left\"\n      },\n      disableRestoreFocus: true,\n      useLayerForClickAway: false,\n      PaperProps: {\n        style: {\n          maxWidth: \"400px\"\n        }\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 918,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"popover-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 931,\n        columnNumber: 8\n      }\n    }, \"You can upload a \", /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 932,\n        columnNumber: 26\n      }\n    }, \".csv\"), \" file with questions. The format should be: the\", \" \", /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 934,\n        columnNumber: 9\n      }\n    }, \"first column should contain the question text.\"), \" \", \"The next 4 columns must contain the\", \" \", /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 939,\n        columnNumber: 9\n      }\n    }, \"four options.\"), \" And the sixth column should contain\", \" \", /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 941,\n        columnNumber: 9\n      }\n    }, \"the correct answer (it should match one of the four options)\"), \". \", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 945,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 946,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 947,\n        columnNumber: 9\n      }\n    }, \"NOTE: THE FILE SHOULD EXACTLY MATCH THE GIVEN FORMAT.\"), \" \", \"You will be able to see and edit all the question though.\"))), !update ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"dropzone\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 958,\n        columnNumber: 8\n      }\n    }, /*#__PURE__*/React.createElement(Dropzone, {\n      onDrop: acceptedFiles => handleFileDrop(acceptedFiles),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 959,\n        columnNumber: 9\n      }\n    }, ({\n      getRootProps,\n      getInputProps\n    }) => /*#__PURE__*/React.createElement(\"section\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 965,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", Object.assign({}, getRootProps(), {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 966,\n        columnNumber: 12\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", Object.assign({}, getInputProps(), {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 967,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(AddCircle, {\n      className: \"drop-icon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 968,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      style: {\n        color: \"rgb(110, 110, 110)\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 969,\n        columnNumber: 13\n      }\n    }, \"Drag 'n' drop or click to select files\"))))), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"manual-head\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 983,\n        columnNumber: 8\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 984,\n        columnNumber: 9\n      }\n    }, \"Or manually add the question\"))) : null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"new-question-form\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 988,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(TextInput, {\n      error: newQuestionError,\n      helperText: newQuestionError ? \"This cannot be empty\" : null,\n      className: \"new-ques-input\",\n      variant: \"outlined\",\n      label: \"Question Text\",\n      value: newQuestion,\n      onChange: onQuestionChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 989,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(\"hr\", {\n      style: {\n        width: \"100%\",\n        marginBottom: \"3%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1000,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      spacing: 1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1001,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1002,\n        columnNumber: 8\n      }\n    }, /*#__PURE__*/React.createElement(TextInput, {\n      error: option1Error,\n      helperText: option1Error ? \"This cannot be empty\" : null,\n      className: \"new-ques-input\",\n      variant: \"outlined\",\n      label: \"Option 1\",\n      value: option1,\n      onChange: handleOptionChange1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1003,\n        columnNumber: 9\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1017,\n        columnNumber: 8\n      }\n    }, /*#__PURE__*/React.createElement(TextInput, {\n      error: option2Error,\n      helperText: option2Error ? \"This cannot be empty\" : null,\n      className: \"new-ques-input\",\n      variant: \"outlined\",\n      label: \"Option 2\",\n      value: option2,\n      onChange: handleOptionChange2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1018,\n        columnNumber: 9\n      }\n    }))), /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      spacing: 1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1033,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1034,\n        columnNumber: 8\n      }\n    }, /*#__PURE__*/React.createElement(TextInput, {\n      error: option3Error,\n      helperText: option3Error ? \"This cannot be empty\" : null,\n      className: \"new-ques-input\",\n      variant: \"outlined\",\n      label: \"Option 3\",\n      value: option3,\n      onChange: handleOptionChange3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1035,\n        columnNumber: 9\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1049,\n        columnNumber: 8\n      }\n    }, /*#__PURE__*/React.createElement(TextInput, {\n      error: option4Error,\n      helperText: option4Error ? \"This cannot be empty\" : null,\n      className: \"new-ques-input\",\n      variant: \"outlined\",\n      label: \"Option 4\",\n      value: option4,\n      onChange: handleOptionChange4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1050,\n        columnNumber: 9\n      }\n    }))), /*#__PURE__*/React.createElement(\"hr\", {\n      style: {\n        width: \"100%\",\n        marginBottom: \"3%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1065,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(InputLabel, {\n      id: \"correct-option\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1066,\n        columnNumber: 7\n      }\n    }, \"Correct Option\"), /*#__PURE__*/React.createElement(Select, {\n      error: correctOptionError,\n      className: \"correct-answer-select\",\n      style: {\n        width: \"50%\"\n      },\n      labelId: \"correct-option\",\n      value: correctOption,\n      onChange: handleCorrectOption,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1069,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(MenuItem, {\n      value: -1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1077,\n        columnNumber: 8\n      }\n    }, \"None\"), option1.trim().length !== 0 ? /*#__PURE__*/React.createElement(MenuItem, {\n      value: option1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1079,\n        columnNumber: 9\n      }\n    }, option1) : null, option2.trim().length !== 0 ? /*#__PURE__*/React.createElement(MenuItem, {\n      value: option2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1082,\n        columnNumber: 9\n      }\n    }, option2) : null, option3.trim().length !== 0 ? /*#__PURE__*/React.createElement(MenuItem, {\n      value: option3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1085,\n        columnNumber: 9\n      }\n    }, option3) : null, option4.trim().length !== 0 ? /*#__PURE__*/React.createElement(MenuItem, {\n      value: option4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1088,\n        columnNumber: 9\n      }\n    }, option4) : null), !update ? /*#__PURE__*/React.createElement(Button, {\n      className: \"add-question-submit\",\n      onClick: handleQuestionSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1092,\n        columnNumber: 8\n      }\n    }, \"Add Question\") : /*#__PURE__*/React.createElement(Button, {\n      className: \"add-question-submit\",\n      onClick: handleQuestionUpdate,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1099,\n        columnNumber: 8\n      }\n    }, \"Update Question\"))), /*#__PURE__*/React.createElement(Dialog, {\n      open: deleteModal,\n      onClose: () => setDeleteModal(false),\n      \"aria-labelledby\": \"delete-quiz-modal\",\n      PaperProps: {\n        style: {\n          backgroundColor: \"white\",\n          color: \"black\",\n          minWidth: \"10%\"\n        }\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1108,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(DialogTitle, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1120,\n        columnNumber: 6\n      }\n    }, \"Are you sure you want to delete this quiz?\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"btn-div\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1123,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      className: \"logout-btn m-right bg-red-btn\",\n      onClick: handleDelete,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1124,\n        columnNumber: 7\n      }\n    }, \"Yes\"), /*#__PURE__*/React.createElement(Button, {\n      className: \"cancel-btn m-left\",\n      onClick: () => setDeleteModal(false),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1130,\n        columnNumber: 7\n      }\n    }, \"No\"))), /*#__PURE__*/React.createElement(Dialog, {\n      open: deleteQuestionModal,\n      onClose: handleQuestionModalClose,\n      \"aria-labelledby\": \"delete-quiz-modal\",\n      PaperProps: {\n        style: {\n          backgroundColor: \"white\",\n          color: \"black\",\n          minWidth: \"10%\"\n        }\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1138,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(DialogTitle, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1150,\n        columnNumber: 6\n      }\n    }, \"Are you sure you want to delete this question?\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"btn-div\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1153,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      className: \"logout-btn m-right bg-red-btn\",\n      onClick: handleDeleteQuestion,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1154,\n        columnNumber: 7\n      }\n    }, \"Yes\"), /*#__PURE__*/React.createElement(Button, {\n      className: \"cancel-btn m-left\",\n      onClick: handleQuestionModalClose,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1160,\n        columnNumber: 7\n      }\n    }, \"No\"))), /*#__PURE__*/React.createElement(Dialog, {\n      open: quizRestartModal,\n      onClose: () => setQuizRestartModal(false),\n      \"aria-labelledby\": \"restart-quiz-modal\",\n      PaperProps: {\n        style: {\n          backgroundColor: \"white\",\n          color: \"black\",\n          minWidth: \"10%\"\n        }\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1168,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(DialogTitle, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1180,\n        columnNumber: 6\n      }\n    }, \"Are you sure you want to restart this quiz?\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"btn-div\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1183,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      className: \"logout-btn m-right bg-green-btn\",\n      onClick: handleRestart,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1184,\n        columnNumber: 7\n      }\n    }, \"Yes\"), /*#__PURE__*/React.createElement(Button, {\n      className: \"cancel-btn m-left bg-red-btn\",\n      onClick: () => setQuizRestartModal(false),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1190,\n        columnNumber: 7\n      }\n    }, \"No\"))), /*#__PURE__*/React.createElement(Dialog, {\n      open: closeQuizModal,\n      onClose: () => setCloseQuizModal(false),\n      \"aria-labelledby\": \"restart-quiz-modal\",\n      PaperProps: {\n        style: {\n          backgroundColor: \"white\",\n          color: \"black\",\n          minWidth: \"10%\"\n        }\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1198,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(DialogTitle, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1210,\n        columnNumber: 6\n      }\n    }, \"Are you sure you want to close this quiz?\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"btn-div\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1213,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      className: \"logout-btn m-right bg-green-btn\",\n      onClick: handleQuizClose,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1214,\n        columnNumber: 7\n      }\n    }, \"Yes\"), /*#__PURE__*/React.createElement(Button, {\n      className: \"cancel-btn m-left bg-red-btn\",\n      onClick: () => setCloseQuizModal(false),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1220,\n        columnNumber: 7\n      }\n    }, \"No\"))), /*#__PURE__*/React.createElement(Snackbar, {\n      open: fileError,\n      autoHideDuration: 3000,\n      onClose: () => setFileError(false),\n      anchorOrigin: {\n        vertical: \"bottom\",\n        horizontal: \"left\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1228,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(Alert, {\n      variant: \"filled\",\n      severity: \"error\",\n      onClose: () => setFileError(false),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1234,\n        columnNumber: 6\n      }\n    }, \"There was some problem with the file. Try again...\")), /*#__PURE__*/React.createElement(Snackbar, {\n      open: serverError,\n      autoHideDuration: 3000,\n      onClose: () => setServerError(false),\n      anchorOrigin: {\n        vertical: \"bottom\",\n        horizontal: \"left\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1242,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(Alert, {\n      variant: \"filled\",\n      severity: \"error\",\n      onClose: () => setServerError(false),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1248,\n        columnNumber: 6\n      }\n    }, \"There was some problem with the server. Try again...\")));\n  }\n}\n\nexport default EditQuiz;","map":{"version":3,"sources":["/home/jugaldb/Desktop/projects/IWP/src/pages/EditQuiz.js"],"names":["React","useEffect","useState","Container","Typography","Button","Dialog","Grid","InputLabel","Select","MenuItem","ExpansionPanel","ExpansionPanelSummary","ExpansionPanelDetails","List","ListItem","ListItemText","ListItemIcon","FormControlLabel","IconButton","DialogTitle","Input","TextField","Divider","Popover","Snackbar","Create","ExpandMore","Adjust","Delete","BarChart","Replay","AddCircle","Info","Link","Redirect","axios","Loading","TextInput","Dropzone","csv","Alert","useGoogleReCaptcha","EditQuiz","props","quizId","match","params","id","loading","setLoading","redirect","setRedirect","quizDetails","setQuizDetails","quizQuestions","setQuizQuestions","fileError","setFileError","serverError","setServerError","popoverAnchor","setPopoverAnchor","popoverOpen","Boolean","questionModal","setQuestionModal","newQuestion","setNewQuestion","newQuestionError","setNewQuestionError","option1","setOption1","option1Error","setOption1Error","option2","setOption2","option2Error","setOption2Error","option3","setOption3","option3Error","setOption3Error","option4","setOption4","option4Error","setOption4Error","correctOption","setCorrectOption","correctOptionError","setCorrectOptionError","update","setUpdate","updateId","setUpdateId","deleteModal","setDeleteModal","deleteQuestionModal","setDeleteQuestionModal","quizRestartModal","setQuizRestartModal","closeQuizModal","setCloseQuizModal","responses","setResponses","searchData","setSearchData","searchText","setSearchText","sortBy","setSortBy","executeRecaptcha","onCloseHandle","clearModal","handlePopover","event","currentTarget","handlePopoverClose","onQuestionChange","target","value","handleOptionChange1","handleOptionChange2","handleOptionChange3","handleOptionChange4","handleCorrectOption","handleFileDrop","files","reader","FileReader","questions","onabort","onerror","onload","parse","result","err","data","undefined","map","question","trim","obj","description","options","text","correctAnswer","push","submitCSV","readAsBinaryString","token","localStorage","getItem","url","captcha","post","headers","then","res","console","log","getQuizDetails","error","handleSearchChange","newRes","filter","response","userId","name","toLowerCase","search","String","marks","sorted","sortByFunc","handleSortChange","by","array","sort","a","b","timeEnded","handleRestart","patch","handleQuizClose","handleQuestionEditBtn","_id","handleQuestionDeleteBtn","handleQuestionModalClose","handleDeleteBtn","handleDeleteQuestion","delete","handleDelete","handleQuestionUpdate","validate","updateOps","propName","length","handleQuestionSubmit","isOwnerOfQuiz","get","userResults","quizStatus","marginLeft","quizName","Date","Number","scheduledFor","toDateString","toLocaleTimeString","quizDuration","quizType","quizCode","textAlign","marginRight","option","color","pathname","state","margin","paddingTop","paddingBottom","style","backgroundColor","minWidth","width","vertical","horizontal","maxWidth","acceptedFiles","getRootProps","getInputProps","marginBottom"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport \"./EditQuiz.css\";\r\nimport {\r\n\tContainer,\r\n\tTypography,\r\n\tButton,\r\n\tDialog,\r\n\tGrid,\r\n\tInputLabel,\r\n\tSelect,\r\n\tMenuItem,\r\n\tExpansionPanel,\r\n\tExpansionPanelSummary,\r\n\tExpansionPanelDetails,\r\n\tList,\r\n\tListItem,\r\n\tListItemText,\r\n\tListItemIcon,\r\n\tFormControlLabel,\r\n\tIconButton,\r\n\tDialogTitle,\r\n\tInput,\r\n\tTextField,\r\n\tDivider,\r\n\tPopover,\r\n\tSnackbar,\r\n} from \"@material-ui/core\";\r\nimport {\r\n\tCreate,\r\n\tExpandMore,\r\n\tAdjust,\r\n\tDelete,\r\n\tBarChart,\r\n\tReplay,\r\n\tAddCircle,\r\n\tInfo,\r\n} from \"@material-ui/icons\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport Loading from \"./Loading\";\r\nimport TextInput from \"../components/TextInput\";\r\nimport Dropzone from \"react-dropzone\";\r\nimport csv from \"csv\";\r\nimport { Alert } from \"@material-ui/lab\";\r\nimport { useGoogleReCaptcha } from \"react-google-recaptcha-v3\";\r\n\r\nfunction EditQuiz(props) {\r\n\tconst quizId = props.match.params.id;\r\n\r\n\tconst [loading, setLoading] = useState(true);\r\n\tconst [redirect, setRedirect] = useState(false);\r\n\r\n\tconst [quizDetails, setQuizDetails] = useState({});\r\n\tconst [quizQuestions, setQuizQuestions] = useState([]);\r\n\r\n\tconst [fileError, setFileError] = useState(false);\r\n\tconst [serverError, setServerError] = useState(false);\r\n\tconst [popoverAnchor, setPopoverAnchor] = useState(null);\r\n\tconst popoverOpen = Boolean(popoverAnchor);\r\n\r\n\tconst [questionModal, setQuestionModal] = useState(false);\r\n\tconst [newQuestion, setNewQuestion] = useState(\"\");\r\n\tconst [newQuestionError, setNewQuestionError] = useState(false);\r\n\r\n\tconst [option1, setOption1] = useState(\"\");\r\n\tconst [option1Error, setOption1Error] = useState(false);\r\n\tconst [option2, setOption2] = useState(\"\");\r\n\tconst [option2Error, setOption2Error] = useState(false);\r\n\tconst [option3, setOption3] = useState(\"\");\r\n\tconst [option3Error, setOption3Error] = useState(false);\r\n\tconst [option4, setOption4] = useState(\"\");\r\n\tconst [option4Error, setOption4Error] = useState(false);\r\n\tconst [correctOption, setCorrectOption] = useState(-1);\r\n\tconst [correctOptionError, setCorrectOptionError] = useState(false);\r\n\r\n\tconst [update, setUpdate] = useState(false);\r\n\tconst [updateId, setUpdateId] = useState(null);\r\n\r\n\tconst [deleteModal, setDeleteModal] = useState(false);\r\n\tconst [deleteQuestionModal, setDeleteQuestionModal] = useState(false);\r\n\r\n\tconst [quizRestartModal, setQuizRestartModal] = useState(false);\r\n\tconst [closeQuizModal, setCloseQuizModal] = useState(false);\r\n\r\n\tconst [responses, setResponses] = useState([]);\r\n\r\n\tconst [searchData, setSearchData] = useState(responses);\r\n\tconst [searchText, setSearchText] = useState(\"\");\r\n\tconst [sortBy, setSortBy] = useState(-1);\r\n\r\n\tconst { executeRecaptcha } = useGoogleReCaptcha();\r\n\r\n\tconst onCloseHandle = () => {\r\n\t\tsetQuestionModal(false);\r\n\t\tif (update) {\r\n\t\t\tsetUpdate(false);\r\n\t\t\tsetUpdateId(null);\r\n\t\t\tclearModal();\r\n\t\t}\r\n\t};\r\n\r\n\tconst handlePopover = (event) => {\r\n\t\tsetPopoverAnchor(event.currentTarget);\r\n\t};\r\n\r\n\tconst handlePopoverClose = () => {\r\n\t\tsetPopoverAnchor(null);\r\n\t};\r\n\r\n\tconst onQuestionChange = (event) => {\r\n\t\tsetNewQuestion(event.target.value);\r\n\t};\r\n\r\n\tconst handleOptionChange1 = (event) => {\r\n\t\tsetOption1(event.target.value);\r\n\t};\r\n\tconst handleOptionChange2 = (event) => {\r\n\t\tsetOption2(event.target.value);\r\n\t};\r\n\tconst handleOptionChange3 = (event) => {\r\n\t\tsetOption3(event.target.value);\r\n\t};\r\n\tconst handleOptionChange4 = (event) => {\r\n\t\tsetOption4(event.target.value);\r\n\t};\r\n\r\n\tconst handleCorrectOption = (event) => {\r\n\t\tsetCorrectOption(event.target.value);\r\n\t};\r\n\r\n\tconst clearModal = () => {\r\n\t\tsetNewQuestion(\"\");\r\n\t\tsetNewQuestionError(false);\r\n\t\tsetOption1(\"\");\r\n\t\tsetOption1Error(false);\r\n\t\tsetOption2(\"\");\r\n\t\tsetOption2Error(false);\r\n\t\tsetOption3(\"\");\r\n\t\tsetOption3Error(false);\r\n\t\tsetOption4(\"\");\r\n\t\tsetOption4Error(false);\r\n\t\tsetCorrectOption(-1);\r\n\t\tsetCorrectOptionError(false);\r\n\t};\r\n\r\n\tconst handleFileDrop = (files) => {\r\n\t\tconst reader = new FileReader();\r\n\r\n\t\tlet questions = [];\r\n\r\n\t\treader.onabort = () => {\r\n\t\t\tsetFileError(true);\r\n\t\t\treturn;\r\n\t\t};\r\n\t\treader.onerror = () => {\r\n\t\t\tsetFileError(true);\r\n\t\t\treturn;\r\n\t\t};\r\n\r\n\t\treader.onload = () => {\r\n\t\t\tcsv.parse(reader.result, (err, data) => {\r\n\t\t\t\tif (data === undefined) {\r\n\t\t\t\t\tsetFileError(true);\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tdata.map((question) => {\r\n\t\t\t\t\tif (question[0].trim() === \"\") {\r\n\t\t\t\t\t\treturn null;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tlet obj = {\r\n\t\t\t\t\t\tquizId: quizId,\r\n\t\t\t\t\t\tdescription: question[0],\r\n\t\t\t\t\t\toptions: [\r\n\t\t\t\t\t\t\t{ text: question[1] },\r\n\t\t\t\t\t\t\t{ text: question[2] },\r\n\t\t\t\t\t\t\t{ text: question[3] },\r\n\t\t\t\t\t\t\t{ text: question[4] },\r\n\t\t\t\t\t\t],\r\n\t\t\t\t\t\tcorrectAnswer: question[5],\r\n\t\t\t\t\t};\r\n\r\n\t\t\t\t\tquestions.push(obj);\r\n\t\t\t\t});\r\n\t\t\t\tsubmitCSV(questions);\r\n\t\t\t});\r\n\t\t};\r\n\r\n\t\treader.readAsBinaryString(files[0]);\r\n\t};\r\n\r\n\tconst submitCSV = async (questions) => {\r\n\t\tsetLoading(true);\r\n\t\tlet token = localStorage.getItem(\"authToken\");\r\n\t\tlet url = \"https://quizzie-api.herokuapp.com/question/csv\";\r\n\r\n\t\tlet captcha = await executeRecaptcha(\"submit_csv\");\r\n\r\n\t\tlet data = {\r\n\t\t\tquestions: questions,\r\n\t\t\tcaptcha: captcha,\r\n\t\t};\r\n\r\n\t\ttry {\r\n\t\t\tawait axios\r\n\t\t\t\t.post(url, data, {\r\n\t\t\t\t\theaders: {\r\n\t\t\t\t\t\t\"auth-token\": token,\r\n\t\t\t\t\t},\r\n\t\t\t\t})\r\n\t\t\t\t.then((res) => {\r\n\t\t\t\t\tconsole.log(res);\r\n\t\t\t\t\tsetLoading(false);\r\n\t\t\t\t\tclearModal();\r\n\t\t\t\t\tonCloseHandle();\r\n\t\t\t\t\tgetQuizDetails();\r\n\t\t\t\t});\r\n\t\t} catch (error) {\r\n\t\t\tsetServerError(true);\r\n\t\t\tconsole.log(error);\r\n\t\t}\r\n\t};\r\n\r\n\tconst handleSearchChange = (event) => {\r\n\t\tsetSearchText(event.target.value);\r\n\r\n\t\tlet newRes = responses.filter(\r\n\t\t\t(response) =>\r\n\t\t\t\tresponse.userId.name\r\n\t\t\t\t\t.toLowerCase()\r\n\t\t\t\t\t.search(event.target.value.trim().toLowerCase()) !== -1 ||\r\n\t\t\t\tString(response.marks) ===\r\n\t\t\t\t\tevent.target.value.trim().toLowerCase()\r\n\t\t);\r\n\t\tlet sorted = sortByFunc(sortBy, newRes);\r\n\r\n\t\tsetSearchData(sorted);\r\n\t};\r\n\r\n\tconst handleSortChange = (event) => {\r\n\t\tsetSortBy(event.target.value);\r\n\r\n\t\tlet newRes = sortByFunc(event.target.value, searchData);\r\n\r\n\t\tsetSearchData(newRes);\r\n\t};\r\n\r\n\tconst sortByFunc = (by, array) => {\r\n\t\tif (by === \"score\") {\r\n\t\t\treturn array.sort(function (a, b) {\r\n\t\t\t\treturn b.marks - a.marks;\r\n\t\t\t});\r\n\t\t} else if (by === \"name\") {\r\n\t\t\treturn array.sort(function (a, b) {\r\n\t\t\t\treturn a.userId.name - b.userId.name;\r\n\t\t\t});\r\n\t\t} else if (by === \"recent\") {\r\n\t\t\treturn array.sort(function (a, b) {\r\n\t\t\t\treturn b.timeEnded - a.timeEnded;\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\treturn array;\r\n\t\t}\r\n\t};\r\n\r\n\tconst handleRestart = async () => {\r\n\t\tlet token = localStorage.getItem(\"authToken\");\r\n\t\tlet url = `https://quizzie-api.herokuapp.com/quiz/restart`;\r\n\r\n\t\tlet captcha = await executeRecaptcha(\"restart_quiz\");\r\n\r\n\t\tlet data = {\r\n\t\t\tquizId: quizId,\r\n\t\t\tcaptcha: captcha,\r\n\t\t};\r\n\r\n\t\ttry {\r\n\t\t\tawait axios\r\n\t\t\t\t.patch(url, data, {\r\n\t\t\t\t\theaders: {\r\n\t\t\t\t\t\t\"auth-token\": token,\r\n\t\t\t\t\t},\r\n\t\t\t\t})\r\n\t\t\t\t.then((res) => {\r\n\t\t\t\t\tsetQuizRestartModal(false);\r\n\t\t\t\t\tgetQuizDetails();\r\n\t\t\t\t});\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log(error);\r\n\t\t}\r\n\t};\r\n\r\n\tconst handleQuizClose = async () => {\r\n\t\tlet token = localStorage.getItem(\"authToken\");\r\n\t\tlet url = `https://quizzie-api.herokuapp.com/quiz/close`;\r\n\r\n\t\tlet captcha = await executeRecaptcha(\"quiz_close\");\r\n\r\n\t\tlet data = {\r\n\t\t\tquizId: quizId,\r\n\t\t\tcaptcha: captcha,\r\n\t\t};\r\n\r\n\t\ttry {\r\n\t\t\tawait axios\r\n\t\t\t\t.patch(url, data, {\r\n\t\t\t\t\theaders: {\r\n\t\t\t\t\t\t\"auth-token\": token,\r\n\t\t\t\t\t},\r\n\t\t\t\t})\r\n\t\t\t\t.then((res) => {\r\n\t\t\t\t\tsetCloseQuizModal(false);\r\n\t\t\t\t\tgetQuizDetails();\r\n\t\t\t\t});\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log(error);\r\n\t\t}\r\n\t};\r\n\r\n\tconst handleQuestionEditBtn = (question) => {\r\n\t\tsetUpdate(true);\r\n\t\tsetUpdateId(question._id);\r\n\t\tsetNewQuestion(question.description);\r\n\t\tsetOption1(question.options[0].text);\r\n\t\tsetOption2(question.options[1].text);\r\n\t\tsetOption3(question.options[2].text);\r\n\t\tsetOption4(question.options[3].text);\r\n\t\tsetCorrectOption(question.correctAnswer);\r\n\t\tsetQuestionModal(true);\r\n\t};\r\n\r\n\tconst handleQuestionDeleteBtn = (question) => {\r\n\t\tsetUpdateId(question._id);\r\n\t\tsetDeleteQuestionModal(true);\r\n\t};\r\n\r\n\tconst handleQuestionModalClose = () => {\r\n\t\tsetUpdateId(null);\r\n\t\tsetDeleteQuestionModal(false);\r\n\t};\r\n\r\n\tconst handleDeleteBtn = () => {\r\n\t\tsetDeleteModal(true);\r\n\t};\r\n\r\n\tconst handleDeleteQuestion = async () => {\r\n\t\tlet token = localStorage.getItem(\"authToken\");\r\n\t\tlet url = `https://quizzie-api.herokuapp.com/question/${updateId}`;\r\n\r\n\t\t// let captcha = executeRecaptcha(\"delete_quiz\");\r\n\r\n\t\ttry {\r\n\t\t\tawait axios\r\n\t\t\t\t.delete(url, {\r\n\t\t\t\t\theaders: {\r\n\t\t\t\t\t\t\"auth-token\": token,\r\n\t\t\t\t\t},\r\n\t\t\t\t})\r\n\t\t\t\t.then((res) => {\r\n\t\t\t\t\tsetUpdateId(null);\r\n\t\t\t\t\tsetDeleteQuestionModal(false);\r\n\t\t\t\t\tgetQuizDetails();\r\n\t\t\t\t});\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log(error);\r\n\t\t}\r\n\t};\r\n\r\n\tconst handleDelete = async () => {\r\n\t\tlet token = localStorage.getItem(\"authToken\");\r\n\t\tlet url = `https://quizzie-api.herokuapp.com/quiz/delete`;\r\n\r\n\t\tlet data = {\r\n\t\t\tquizId: quizId,\r\n\t\t};\r\n\r\n\t\ttry {\r\n\t\t\tawait axios\r\n\t\t\t\t.delete(url, {\r\n\t\t\t\t\theaders: {\r\n\t\t\t\t\t\t\"auth-token\": token,\r\n\t\t\t\t\t},\r\n\t\t\t\t\tdata: data,\r\n\t\t\t\t})\r\n\t\t\t\t.then((res) => {\r\n\t\t\t\t\tsetRedirect(true);\r\n\t\t\t\t});\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log(error);\r\n\t\t}\r\n\t};\r\n\r\n\tconst handleQuestionUpdate = async () => {\r\n\t\tif (!validate()) return;\r\n\r\n\t\tlet token = localStorage.getItem(\"authToken\");\r\n\t\tlet url = `https://quizzie-api.herokuapp.com/question/update/${updateId}`;\r\n\r\n\t\tlet captcha = await executeRecaptcha(\"question_update\");\r\n\r\n\t\tlet updateOps = [\r\n\t\t\t{ propName: \"description\", value: newQuestion },\r\n\t\t\t{\r\n\t\t\t\tpropName: \"options\",\r\n\t\t\t\tvalue: [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttext: option1,\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttext: option2,\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttext: option3,\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttext: option4,\r\n\t\t\t\t\t},\r\n\t\t\t\t],\r\n\t\t\t},\r\n\t\t\t{ propName: \"correctAnswer\", value: correctOption },\r\n\t\t];\r\n\r\n\t\tlet data = {\r\n\t\t\tupdateOps: updateOps,\r\n\t\t\tcaptcha: captcha,\r\n\t\t};\r\n\r\n\t\ttry {\r\n\t\t\tawait axios\r\n\t\t\t\t.patch(url, data, {\r\n\t\t\t\t\theaders: {\r\n\t\t\t\t\t\t\"auth-token\": token,\r\n\t\t\t\t\t},\r\n\t\t\t\t})\r\n\t\t\t\t.then((res) => {\r\n\t\t\t\t\tonCloseHandle();\r\n\t\t\t\t\tgetQuizDetails();\r\n\t\t\t\t});\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log(error);\r\n\t\t}\r\n\t};\r\n\r\n\tconst validate = () => {\r\n\t\tif (newQuestion.trim().length === 0) {\r\n\t\t\tsetNewQuestionError(true);\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tif (option1.trim().length === 0) {\r\n\t\t\tsetOption1Error(true);\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tif (option2.trim().length === 0) {\r\n\t\t\tsetOption2Error(true);\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tif (option3.trim().length === 0) {\r\n\t\t\tsetOption3Error(true);\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tif (option4.trim().length === 0) {\r\n\t\t\tsetOption4Error(true);\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tif (correctOption === -1) {\r\n\t\t\tsetCorrectOptionError(true);\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\t};\r\n\r\n\tconst handleQuestionSubmit = async () => {\r\n\t\t//TODO: Handle Validation\r\n\r\n\t\tif (!validate()) return;\r\n\r\n\t\tlet token = localStorage.getItem(\"authToken\");\r\n\t\tlet url = `https://quizzie-api.herokuapp.com/question/add`;\r\n\r\n\t\tlet captcha = await executeRecaptcha(\"submit_question\");\r\n\r\n\t\tlet options = [\r\n\t\t\t{ text: option1 },\r\n\t\t\t{ text: option2 },\r\n\t\t\t{ text: option3 },\r\n\t\t\t{ text: option4 },\r\n\t\t];\r\n\r\n\t\tlet data = {\r\n\t\t\tquizId: quizId,\r\n\t\t\tdescription: newQuestion,\r\n\t\t\toptions: options,\r\n\t\t\tcorrectAnswer: correctOption,\r\n\t\t\tcaptcha: captcha,\r\n\t\t};\r\n\r\n\t\ttry {\r\n\t\t\tawait axios\r\n\t\t\t\t.post(url, data, {\r\n\t\t\t\t\theaders: {\r\n\t\t\t\t\t\t\"auth-token\": token,\r\n\t\t\t\t\t},\r\n\t\t\t\t})\r\n\t\t\t\t.then((res) => {\r\n\t\t\t\t\tclearModal();\r\n\t\t\t\t\tgetQuizDetails();\r\n\t\t\t\t\tsetQuestionModal(false);\r\n\t\t\t\t});\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log(error);\r\n\t\t}\r\n\t};\r\n\r\n\tconst isOwnerOfQuiz = async () => {\r\n\t\tlet token = localStorage.getItem(\"authToken\");\r\n\t\tlet url = `https://quizzie-api.herokuapp.com/quiz/checkAdmin/${quizId}`;\r\n\r\n\t\ttry {\r\n\t\t\tawait axios\r\n\t\t\t\t.get(url, {\r\n\t\t\t\t\theaders: {\r\n\t\t\t\t\t\t\"auth-token\": token,\r\n\t\t\t\t\t},\r\n\t\t\t\t})\r\n\t\t\t\t.then((res) => {\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t});\r\n\t\t} catch (error) {\r\n\t\t\tsetRedirect(true);\r\n\t\t\treturn;\r\n\t\t}\r\n\t};\r\n\r\n\tconst getQuizDetails = async () => {\r\n\t\tsetLoading(true);\r\n\t\tlet token = localStorage.getItem(\"authToken\");\r\n\t\tlet url = `https://quizzie-api.herokuapp.com/quiz/${quizId}`;\r\n\r\n\t\ttry {\r\n\t\t\tawait axios\r\n\t\t\t\t.get(url, {\r\n\t\t\t\t\theaders: {\r\n\t\t\t\t\t\t\"auth-token\": token,\r\n\t\t\t\t\t},\r\n\t\t\t\t})\r\n\t\t\t\t.then((res) => {\r\n\t\t\t\t\tsetQuizDetails(res.data.result);\r\n\t\t\t\t});\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log(error);\r\n\t\t}\r\n\r\n\t\turl = `https://quizzie-api.herokuapp.com/question/all/${quizId}`;\r\n\r\n\t\ttry {\r\n\t\t\tawait axios\r\n\t\t\t\t.get(url, {\r\n\t\t\t\t\theaders: {\r\n\t\t\t\t\t\t\"auth-token\": token,\r\n\t\t\t\t\t},\r\n\t\t\t\t})\r\n\t\t\t\t.then((res) => {\r\n\t\t\t\t\tsetQuizQuestions(res.data.result);\r\n\t\t\t\t});\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log(error);\r\n\t\t}\r\n\r\n\t\turl = `https://quizzie-api.herokuapp.com/admin/allStudentsQuizResult/${quizId}`;\r\n\r\n\t\ttry {\r\n\t\t\tawait axios\r\n\t\t\t\t.get(url, {\r\n\t\t\t\t\theaders: {\r\n\t\t\t\t\t\t\"auth-token\": token,\r\n\t\t\t\t\t},\r\n\t\t\t\t})\r\n\t\t\t\t.then((res) => {\r\n\t\t\t\t\tsetResponses(res.data.userResults);\r\n\t\t\t\t\tsetSearchData(res.data.userResults);\r\n\t\t\t\t\tsetLoading(false);\r\n\t\t\t\t});\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log(error);\r\n\t\t}\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tlet token = localStorage.getItem(\"authToken\");\r\n\t\tif (token === null) {\r\n\t\t\tsetLoading(false);\r\n\t\t\tsetRedirect(true);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tisOwnerOfQuiz();\r\n\t\tgetQuizDetails();\r\n\t}, []);\r\n\r\n\tif (loading) {\r\n\t\treturn <Loading />;\r\n\t} else if (redirect) {\r\n\t\treturn <Redirect to=\"/dashboard\" />;\r\n\t} else {\r\n\t\treturn (\r\n\t\t\t<Container className=\"edit-quiz-page\">\r\n\t\t\t\t<Typography\r\n\t\t\t\t\tvariant=\"h3\"\r\n\t\t\t\t\tclassName=\"dash-head p-top edit-quiz-head\"\r\n\t\t\t\t>\r\n\t\t\t\t\tEdit Quiz\r\n\t\t\t\t</Typography>\r\n\t\t\t\t<div className=\"edit-btn-bar\">\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\tclassName=\"edit-details-btn\"\r\n\t\t\t\t\t\tcomponent={Link}\r\n\t\t\t\t\t\tto={`/updateQuizDetails/${quizId}`}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<Create className=\"edit-icon\" />\r\n\t\t\t\t\t\tEdit Details\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\tclassName=\"edit-details-btn delete-btn\"\r\n\t\t\t\t\t\tonClick={handleDeleteBtn}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<Delete className=\"edit-icon\" />\r\n\t\t\t\t\t\tDelete Quiz\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t\t{quizDetails.quizStatus === 1 ? (\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\tclassName=\"edit-details-btn\"\r\n\t\t\t\t\t\t\tstyle={{ marginLeft: \"3%\" }}\r\n\t\t\t\t\t\t\tonClick={() => setCloseQuizModal(true)}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Replay className=\"edit-quiz\" />\r\n\t\t\t\t\t\t\tClose Quiz\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t) : quizDetails.quizStatus === 2 ? (\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\tclassName=\"edit-details-btn\"\r\n\t\t\t\t\t\t\tstyle={{ marginLeft: \"3%\" }}\r\n\t\t\t\t\t\t\tonClick={() => setQuizRestartModal(true)}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Replay className=\"edit-quiz\" />\r\n\t\t\t\t\t\t\tRestart Quiz\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t) : null}\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"quiz-details-sec\">\r\n\t\t\t\t\t<Typography variant=\"h6\" className=\"quiz-detail-param\">\r\n\t\t\t\t\t\tName:{\" \"}\r\n\t\t\t\t\t\t<span className=\"quiz-detail-text\">\r\n\t\t\t\t\t\t\t{quizDetails.quizName}\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t\t<Typography variant=\"h6\" className=\"quiz-detail-param\">\r\n\t\t\t\t\t\tDate:{\" \"}\r\n\t\t\t\t\t\t<span className=\"quiz-detail-text\">\r\n\t\t\t\t\t\t\t{new Date(\r\n\t\t\t\t\t\t\t\tNumber(quizDetails.scheduledFor)\r\n\t\t\t\t\t\t\t).toDateString()}\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t\t<Typography variant=\"h6\" className=\"quiz-detail-param\">\r\n\t\t\t\t\t\tTime:{\" \"}\r\n\t\t\t\t\t\t<span className=\"quiz-detail-text\">\r\n\t\t\t\t\t\t\t{new Date(\r\n\t\t\t\t\t\t\t\tNumber(quizDetails.scheduledFor)\r\n\t\t\t\t\t\t\t).toLocaleTimeString()}\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t\t<Typography variant=\"h6\" className=\"quiz-detail-param\">\r\n\t\t\t\t\t\tDuration:{\" \"}\r\n\t\t\t\t\t\t<span className=\"quiz-detail-text\">\r\n\t\t\t\t\t\t\t{quizDetails.quizDuration} minutes\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t\t<Typography variant=\"h6\" className=\"quiz-detail-param\">\r\n\t\t\t\t\t\tType:{\" \"}\r\n\t\t\t\t\t\t<span className=\"quiz-detail-text\">\r\n\t\t\t\t\t\t\t{quizDetails.quizType}\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t\t{quizDetails.quizType === \"private\" ? (\r\n\t\t\t\t\t\t<Typography variant=\"h6\" className=\"quiz-detail-param\">\r\n\t\t\t\t\t\t\tQuiz Code:{\" \"}\r\n\t\t\t\t\t\t\t<span className=\"quiz-detail-text\">\r\n\t\t\t\t\t\t\t\t{quizDetails.quizCode}\r\n\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t) : null}\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"quiz-questions-sec\">\r\n\t\t\t\t\t<Typography variant=\"h4\" className=\"quiz-questions-head\">\r\n\t\t\t\t\t\tQuestions\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t\t<div className=\"quiz-questions-display\">\r\n\t\t\t\t\t\t<div className=\"add-question-bar\">\r\n\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\tclassName=\"add-question-btn\"\r\n\t\t\t\t\t\t\t\tonClick={() => setQuestionModal(true)}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\tAdd a question\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t{quizQuestions.length === 0 ? (\r\n\t\t\t\t\t\t\t<p style={{ textAlign: \"center\" }}>\r\n\t\t\t\t\t\t\t\tNo questions added yet!\r\n\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t<div className=\"questions-list-display\">\r\n\t\t\t\t\t\t\t\t{quizQuestions.map((question) => (\r\n\t\t\t\t\t\t\t\t\t<ExpansionPanel\r\n\t\t\t\t\t\t\t\t\t\televation={3}\r\n\t\t\t\t\t\t\t\t\t\tclassName=\"expansion\"\r\n\t\t\t\t\t\t\t\t\t\tkey={question._id}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t<ExpansionPanelSummary\r\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"question-summary\"\r\n\t\t\t\t\t\t\t\t\t\t\texpandIcon={<ExpandMore />}\r\n\t\t\t\t\t\t\t\t\t\t\taria-controls=\"question-content\"\r\n\t\t\t\t\t\t\t\t\t\t\taria-label=\"Expand\"\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t<FormControlLabel\r\n\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ marginRight: \"0\" }}\r\n\t\t\t\t\t\t\t\t\t\t\t\taria-label=\"Edit\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tcontrol={\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<IconButton>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Create />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t// label={question.description}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={() =>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\thandleQuestionEditBtn(\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tquestion\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t<FormControlLabel\r\n\t\t\t\t\t\t\t\t\t\t\t\taria-label=\"Edit\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tcontrol={\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<IconButton>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Delete />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t// label={question.description}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={() =>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\thandleQuestionDeleteBtn(\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tquestion\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t<Typography className=\"question-label\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t{question.description}\r\n\t\t\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t\t\t</ExpansionPanelSummary>\r\n\t\t\t\t\t\t\t\t\t\t<ExpansionPanelDetails>\r\n\t\t\t\t\t\t\t\t\t\t\t<List\r\n\t\t\t\t\t\t\t\t\t\t\t\tcomponent=\"nav\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"options-display\"\r\n\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{question.options.map(\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(option) => (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<ListItem\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbutton\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkey={option._id}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<ListItemIcon>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Adjust\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcolor:\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tquestion.correctAnswer ===\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\toption.text\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t? \"green\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t: \"black\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</ListItemIcon>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<ListItemText\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcolor:\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tquestion.correctAnswer ===\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\toption.text\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t? \"green\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t: \"black\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tprimary={\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\toption.text\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</ListItem>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\t\t</List>\r\n\t\t\t\t\t\t\t\t\t\t</ExpansionPanelDetails>\r\n\t\t\t\t\t\t\t\t\t</ExpansionPanel>\r\n\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<Typography\r\n\t\t\t\t\t\tvariant=\"h4\"\r\n\t\t\t\t\t\tclassName=\"quiz-questions-head m-top\"\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tSubmissions\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t\t<div className=\"quiz-students-list\">\r\n\t\t\t\t\t\t<div className=\"add-question-bar\">\r\n\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\tclassName=\"add-question-btn stats-btn\"\r\n\t\t\t\t\t\t\t\tcomponent={\r\n\t\t\t\t\t\t\t\t\tresponses.length !== 0 ? Link : Button\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tto={{\r\n\t\t\t\t\t\t\t\t\tpathname: \"/quizStats\",\r\n\t\t\t\t\t\t\t\t\tstate: { responses: responses },\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<BarChart />\r\n\t\t\t\t\t\t\t\tView Stats\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t{responses.length === 0 ? (\r\n\t\t\t\t\t\t\t<p\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\ttextAlign: \"center\",\r\n\t\t\t\t\t\t\t\t\tmargin: \"0\",\r\n\t\t\t\t\t\t\t\t\tpaddingTop: \"3%\",\r\n\t\t\t\t\t\t\t\t\tpaddingBottom: \"3%\",\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\tNo responses yet!\r\n\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t<div className=\"search-bar\">\r\n\t\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\t\tplaceholder=\"Search by name or score\"\r\n\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\t\t\tonChange={handleSearchChange}\r\n\t\t\t\t\t\t\t\t\t\tclassName=\"search-input\"\r\n\t\t\t\t\t\t\t\t\t\tvalue={searchText}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t<div style={{ marginLeft: \"3%\" }}>\r\n\t\t\t\t\t\t\t\t\t\t<InputLabel id=\"sort-by\">\r\n\t\t\t\t\t\t\t\t\t\t\tSort by\r\n\t\t\t\t\t\t\t\t\t\t</InputLabel>\r\n\t\t\t\t\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\t\t\t\t\tlabelId=\"sort-by\"\r\n\t\t\t\t\t\t\t\t\t\t\tid=\"sort-select\"\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={sortBy}\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={handleSortChange}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t<MenuItem value={-1}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<em>None</em>\r\n\t\t\t\t\t\t\t\t\t\t\t</MenuItem>\r\n\t\t\t\t\t\t\t\t\t\t\t<MenuItem value=\"recent\">\r\n\t\t\t\t\t\t\t\t\t\t\t\tRecent\r\n\t\t\t\t\t\t\t\t\t\t\t</MenuItem>\r\n\t\t\t\t\t\t\t\t\t\t\t<MenuItem value=\"score\">\r\n\t\t\t\t\t\t\t\t\t\t\t\tScore\r\n\t\t\t\t\t\t\t\t\t\t\t</MenuItem>\r\n\t\t\t\t\t\t\t\t\t\t\t<MenuItem value=\"name\">\r\n\t\t\t\t\t\t\t\t\t\t\t\tName\r\n\t\t\t\t\t\t\t\t\t\t\t</MenuItem>\r\n\t\t\t\t\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<List aria-label=\"responses list\">\r\n\t\t\t\t\t\t\t\t\t{searchData.map((response) => (\r\n\t\t\t\t\t\t\t\t\t\t<ListItem\r\n\t\t\t\t\t\t\t\t\t\t\tbutton\r\n\t\t\t\t\t\t\t\t\t\t\tkey={response._id}\r\n\t\t\t\t\t\t\t\t\t\t\tcomponent={Link}\r\n\t\t\t\t\t\t\t\t\t\t\tto={{\r\n\t\t\t\t\t\t\t\t\t\t\t\tpathname: `/studentResponse`,\r\n\t\t\t\t\t\t\t\t\t\t\t\tstate: { response: response },\r\n\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t<ListItemText\r\n\t\t\t\t\t\t\t\t\t\t\t\tprimary={response.userId.name}\r\n\t\t\t\t\t\t\t\t\t\t\t\tsecondary={`Scored: ${response.marks}`}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t</ListItem>\r\n\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t</List>\r\n\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<Dialog\r\n\t\t\t\t\topen={questionModal}\r\n\t\t\t\t\tonClose={onCloseHandle}\r\n\t\t\t\t\taria-labelledby=\"add-question-modal\"\r\n\t\t\t\t\tPaperProps={{\r\n\t\t\t\t\t\tstyle: {\r\n\t\t\t\t\t\t\tbackgroundColor: \"white\",\r\n\t\t\t\t\t\t\tcolor: \"#333\",\r\n\t\t\t\t\t\t\tminWidth: \"50%\",\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tstyle={{ width: \"100%\" }}\r\n\t\t\t\t>\r\n\t\t\t\t\t<div className=\"add-ques-heading\">\r\n\t\t\t\t\t\t<Typography\r\n\t\t\t\t\t\t\tvariant=\"h6\"\r\n\t\t\t\t\t\t\tstyle={{ textAlign: \"center\", margin: \"2% 5%\" }}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\tNew Question{\" \"}\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t{!update ? (\r\n\t\t\t\t\t\t\t<IconButton onClick={handlePopover}>\r\n\t\t\t\t\t\t\t\t<Info className=\"add-info-icon\" />\r\n\t\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t\t) : null}\r\n\t\t\t\t\t\t<Popover\r\n\t\t\t\t\t\t\tid=\"file-upload-popover\"\r\n\t\t\t\t\t\t\topen={popoverOpen}\r\n\t\t\t\t\t\t\tanchorEl={popoverAnchor}\r\n\t\t\t\t\t\t\tonClose={handlePopoverClose}\r\n\t\t\t\t\t\t\tanchorOrigin={{\r\n\t\t\t\t\t\t\t\tvertical: \"bottom\",\r\n\t\t\t\t\t\t\t\thorizontal: \"left\",\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\tdisableRestoreFocus\r\n\t\t\t\t\t\t\tuseLayerForClickAway={false}\r\n\t\t\t\t\t\t\tPaperProps={{ style: { maxWidth: \"400px\" } }}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<p className=\"popover-text\">\r\n\t\t\t\t\t\t\t\tYou can upload a <strong>.csv</strong> file with\r\n\t\t\t\t\t\t\t\tquestions. The format should be: the{\" \"}\r\n\t\t\t\t\t\t\t\t<strong>\r\n\t\t\t\t\t\t\t\t\tfirst column should contain the question\r\n\t\t\t\t\t\t\t\t\ttext.\r\n\t\t\t\t\t\t\t\t</strong>{\" \"}\r\n\t\t\t\t\t\t\t\tThe next 4 columns must contain the{\" \"}\r\n\t\t\t\t\t\t\t\t<strong>four options.</strong> And the sixth\r\n\t\t\t\t\t\t\t\tcolumn should contain{\" \"}\r\n\t\t\t\t\t\t\t\t<strong>\r\n\t\t\t\t\t\t\t\t\tthe correct answer (it should match one of\r\n\t\t\t\t\t\t\t\t\tthe four options)\r\n\t\t\t\t\t\t\t\t</strong>\r\n\t\t\t\t\t\t\t\t. <br />\r\n\t\t\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t\t\t<strong>\r\n\t\t\t\t\t\t\t\t\tNOTE: THE FILE SHOULD EXACTLY MATCH THE\r\n\t\t\t\t\t\t\t\t\tGIVEN FORMAT.\r\n\t\t\t\t\t\t\t\t</strong>{\" \"}\r\n\t\t\t\t\t\t\t\tYou will be able to see and edit all the\r\n\t\t\t\t\t\t\t\tquestion though.\r\n\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t</Popover>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t{!update ? (\r\n\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t<div className=\"dropzone\">\r\n\t\t\t\t\t\t\t\t<Dropzone\r\n\t\t\t\t\t\t\t\t\tonDrop={(acceptedFiles) =>\r\n\t\t\t\t\t\t\t\t\t\thandleFileDrop(acceptedFiles)\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t{({ getRootProps, getInputProps }) => (\r\n\t\t\t\t\t\t\t\t\t\t<section>\r\n\t\t\t\t\t\t\t\t\t\t\t<div {...getRootProps()}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<input {...getInputProps()} />\r\n\t\t\t\t\t\t\t\t\t\t\t\t<AddCircle className=\"drop-icon\" />\r\n\t\t\t\t\t\t\t\t\t\t\t\t<p\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tcolor:\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"rgb(110, 110, 110)\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tDrag 'n' drop or click to\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tselect files\r\n\t\t\t\t\t\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</section>\r\n\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t</Dropzone>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<p className=\"manual-head\">\r\n\t\t\t\t\t\t\t\t<span>Or manually add the question</span>\r\n\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t</>\r\n\t\t\t\t\t) : null}\r\n\t\t\t\t\t<div className=\"new-question-form\">\r\n\t\t\t\t\t\t<TextInput\r\n\t\t\t\t\t\t\terror={newQuestionError}\r\n\t\t\t\t\t\t\thelperText={\r\n\t\t\t\t\t\t\t\tnewQuestionError ? \"This cannot be empty\" : null\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tclassName=\"new-ques-input\"\r\n\t\t\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\t\t\tlabel=\"Question Text\"\r\n\t\t\t\t\t\t\tvalue={newQuestion}\r\n\t\t\t\t\t\t\tonChange={onQuestionChange}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<hr style={{ width: \"100%\", marginBottom: \"3%\" }} />\r\n\t\t\t\t\t\t<Grid container spacing={1}>\r\n\t\t\t\t\t\t\t<Grid item xs={12} sm={6}>\r\n\t\t\t\t\t\t\t\t<TextInput\r\n\t\t\t\t\t\t\t\t\terror={option1Error}\r\n\t\t\t\t\t\t\t\t\thelperText={\r\n\t\t\t\t\t\t\t\t\t\toption1Error\r\n\t\t\t\t\t\t\t\t\t\t\t? \"This cannot be empty\"\r\n\t\t\t\t\t\t\t\t\t\t\t: null\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tclassName=\"new-ques-input\"\r\n\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\t\t\t\t\tlabel=\"Option 1\"\r\n\t\t\t\t\t\t\t\t\tvalue={option1}\r\n\t\t\t\t\t\t\t\t\tonChange={handleOptionChange1}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t<Grid item xs={12} sm={6}>\r\n\t\t\t\t\t\t\t\t<TextInput\r\n\t\t\t\t\t\t\t\t\terror={option2Error}\r\n\t\t\t\t\t\t\t\t\thelperText={\r\n\t\t\t\t\t\t\t\t\t\toption2Error\r\n\t\t\t\t\t\t\t\t\t\t\t? \"This cannot be empty\"\r\n\t\t\t\t\t\t\t\t\t\t\t: null\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tclassName=\"new-ques-input\"\r\n\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\t\t\t\t\tlabel=\"Option 2\"\r\n\t\t\t\t\t\t\t\t\tvalue={option2}\r\n\t\t\t\t\t\t\t\t\tonChange={handleOptionChange2}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid container spacing={1}>\r\n\t\t\t\t\t\t\t<Grid item xs={12} sm={6}>\r\n\t\t\t\t\t\t\t\t<TextInput\r\n\t\t\t\t\t\t\t\t\terror={option3Error}\r\n\t\t\t\t\t\t\t\t\thelperText={\r\n\t\t\t\t\t\t\t\t\t\toption3Error\r\n\t\t\t\t\t\t\t\t\t\t\t? \"This cannot be empty\"\r\n\t\t\t\t\t\t\t\t\t\t\t: null\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tclassName=\"new-ques-input\"\r\n\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\t\t\t\t\tlabel=\"Option 3\"\r\n\t\t\t\t\t\t\t\t\tvalue={option3}\r\n\t\t\t\t\t\t\t\t\tonChange={handleOptionChange3}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t<Grid item xs={12} sm={6}>\r\n\t\t\t\t\t\t\t\t<TextInput\r\n\t\t\t\t\t\t\t\t\terror={option4Error}\r\n\t\t\t\t\t\t\t\t\thelperText={\r\n\t\t\t\t\t\t\t\t\t\toption4Error\r\n\t\t\t\t\t\t\t\t\t\t\t? \"This cannot be empty\"\r\n\t\t\t\t\t\t\t\t\t\t\t: null\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tclassName=\"new-ques-input\"\r\n\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\t\t\t\t\tlabel=\"Option 4\"\r\n\t\t\t\t\t\t\t\t\tvalue={option4}\r\n\t\t\t\t\t\t\t\t\tonChange={handleOptionChange4}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<hr style={{ width: \"100%\", marginBottom: \"3%\" }} />\r\n\t\t\t\t\t\t<InputLabel id=\"correct-option\">\r\n\t\t\t\t\t\t\tCorrect Option\r\n\t\t\t\t\t\t</InputLabel>\r\n\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\terror={correctOptionError}\r\n\t\t\t\t\t\t\tclassName=\"correct-answer-select\"\r\n\t\t\t\t\t\t\tstyle={{ width: \"50%\" }}\r\n\t\t\t\t\t\t\tlabelId=\"correct-option\"\r\n\t\t\t\t\t\t\tvalue={correctOption}\r\n\t\t\t\t\t\t\tonChange={handleCorrectOption}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<MenuItem value={-1}>None</MenuItem>\r\n\t\t\t\t\t\t\t{option1.trim().length !== 0 ? (\r\n\t\t\t\t\t\t\t\t<MenuItem value={option1}>{option1}</MenuItem>\r\n\t\t\t\t\t\t\t) : null}\r\n\t\t\t\t\t\t\t{option2.trim().length !== 0 ? (\r\n\t\t\t\t\t\t\t\t<MenuItem value={option2}>{option2}</MenuItem>\r\n\t\t\t\t\t\t\t) : null}\r\n\t\t\t\t\t\t\t{option3.trim().length !== 0 ? (\r\n\t\t\t\t\t\t\t\t<MenuItem value={option3}>{option3}</MenuItem>\r\n\t\t\t\t\t\t\t) : null}\r\n\t\t\t\t\t\t\t{option4.trim().length !== 0 ? (\r\n\t\t\t\t\t\t\t\t<MenuItem value={option4}>{option4}</MenuItem>\r\n\t\t\t\t\t\t\t) : null}\r\n\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t\t{!update ? (\r\n\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\tclassName=\"add-question-submit\"\r\n\t\t\t\t\t\t\t\tonClick={handleQuestionSubmit}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\tAdd Question\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\tclassName=\"add-question-submit\"\r\n\t\t\t\t\t\t\t\tonClick={handleQuestionUpdate}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\tUpdate Question\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Dialog>\r\n\t\t\t\t<Dialog\r\n\t\t\t\t\topen={deleteModal}\r\n\t\t\t\t\tonClose={() => setDeleteModal(false)}\r\n\t\t\t\t\taria-labelledby=\"delete-quiz-modal\"\r\n\t\t\t\t\tPaperProps={{\r\n\t\t\t\t\t\tstyle: {\r\n\t\t\t\t\t\t\tbackgroundColor: \"white\",\r\n\t\t\t\t\t\t\tcolor: \"black\",\r\n\t\t\t\t\t\t\tminWidth: \"10%\",\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<DialogTitle>\r\n\t\t\t\t\t\tAre you sure you want to delete this quiz?\r\n\t\t\t\t\t</DialogTitle>\r\n\t\t\t\t\t<div className=\"btn-div\">\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\tclassName=\"logout-btn m-right bg-red-btn\"\r\n\t\t\t\t\t\t\tonClick={handleDelete}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\tYes\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\tclassName=\"cancel-btn m-left\"\r\n\t\t\t\t\t\t\tonClick={() => setDeleteModal(false)}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\tNo\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Dialog>\r\n\t\t\t\t<Dialog\r\n\t\t\t\t\topen={deleteQuestionModal}\r\n\t\t\t\t\tonClose={handleQuestionModalClose}\r\n\t\t\t\t\taria-labelledby=\"delete-quiz-modal\"\r\n\t\t\t\t\tPaperProps={{\r\n\t\t\t\t\t\tstyle: {\r\n\t\t\t\t\t\t\tbackgroundColor: \"white\",\r\n\t\t\t\t\t\t\tcolor: \"black\",\r\n\t\t\t\t\t\t\tminWidth: \"10%\",\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<DialogTitle>\r\n\t\t\t\t\t\tAre you sure you want to delete this question?\r\n\t\t\t\t\t</DialogTitle>\r\n\t\t\t\t\t<div className=\"btn-div\">\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\tclassName=\"logout-btn m-right bg-red-btn\"\r\n\t\t\t\t\t\t\tonClick={handleDeleteQuestion}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\tYes\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\tclassName=\"cancel-btn m-left\"\r\n\t\t\t\t\t\t\tonClick={handleQuestionModalClose}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\tNo\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Dialog>\r\n\t\t\t\t<Dialog\r\n\t\t\t\t\topen={quizRestartModal}\r\n\t\t\t\t\tonClose={() => setQuizRestartModal(false)}\r\n\t\t\t\t\taria-labelledby=\"restart-quiz-modal\"\r\n\t\t\t\t\tPaperProps={{\r\n\t\t\t\t\t\tstyle: {\r\n\t\t\t\t\t\t\tbackgroundColor: \"white\",\r\n\t\t\t\t\t\t\tcolor: \"black\",\r\n\t\t\t\t\t\t\tminWidth: \"10%\",\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<DialogTitle>\r\n\t\t\t\t\t\tAre you sure you want to restart this quiz?\r\n\t\t\t\t\t</DialogTitle>\r\n\t\t\t\t\t<div className=\"btn-div\">\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\tclassName=\"logout-btn m-right bg-green-btn\"\r\n\t\t\t\t\t\t\tonClick={handleRestart}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\tYes\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\tclassName=\"cancel-btn m-left bg-red-btn\"\r\n\t\t\t\t\t\t\tonClick={() => setQuizRestartModal(false)}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\tNo\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Dialog>\r\n\t\t\t\t<Dialog\r\n\t\t\t\t\topen={closeQuizModal}\r\n\t\t\t\t\tonClose={() => setCloseQuizModal(false)}\r\n\t\t\t\t\taria-labelledby=\"restart-quiz-modal\"\r\n\t\t\t\t\tPaperProps={{\r\n\t\t\t\t\t\tstyle: {\r\n\t\t\t\t\t\t\tbackgroundColor: \"white\",\r\n\t\t\t\t\t\t\tcolor: \"black\",\r\n\t\t\t\t\t\t\tminWidth: \"10%\",\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<DialogTitle>\r\n\t\t\t\t\t\tAre you sure you want to close this quiz?\r\n\t\t\t\t\t</DialogTitle>\r\n\t\t\t\t\t<div className=\"btn-div\">\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\tclassName=\"logout-btn m-right bg-green-btn\"\r\n\t\t\t\t\t\t\tonClick={handleQuizClose}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\tYes\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\tclassName=\"cancel-btn m-left bg-red-btn\"\r\n\t\t\t\t\t\t\tonClick={() => setCloseQuizModal(false)}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\tNo\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Dialog>\r\n\t\t\t\t<Snackbar\r\n\t\t\t\t\topen={fileError}\r\n\t\t\t\t\tautoHideDuration={3000}\r\n\t\t\t\t\tonClose={() => setFileError(false)}\r\n\t\t\t\t\tanchorOrigin={{ vertical: \"bottom\", horizontal: \"left\" }}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Alert\r\n\t\t\t\t\t\tvariant=\"filled\"\r\n\t\t\t\t\t\tseverity=\"error\"\r\n\t\t\t\t\t\tonClose={() => setFileError(false)}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tThere was some problem with the file. Try again...\r\n\t\t\t\t\t</Alert>\r\n\t\t\t\t</Snackbar>\r\n\t\t\t\t<Snackbar\r\n\t\t\t\t\topen={serverError}\r\n\t\t\t\t\tautoHideDuration={3000}\r\n\t\t\t\t\tonClose={() => setServerError(false)}\r\n\t\t\t\t\tanchorOrigin={{ vertical: \"bottom\", horizontal: \"left\" }}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Alert\r\n\t\t\t\t\t\tvariant=\"filled\"\r\n\t\t\t\t\t\tseverity=\"error\"\r\n\t\t\t\t\t\tonClose={() => setServerError(false)}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tThere was some problem with the server. Try again...\r\n\t\t\t\t\t</Alert>\r\n\t\t\t\t</Snackbar>\r\n\t\t\t</Container>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default EditQuiz;\r\n"]},"metadata":{},"sourceType":"module"}